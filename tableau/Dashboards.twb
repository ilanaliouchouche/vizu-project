<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='flights_clean' inline='true' name='federated.0ry08tp0iokk6n10wilm30p9jspj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='vols' name='textscan.0kgwjw3189205418azo2y0tqfe75'>
            <connection class='textscan' directory='C:/Users/ilana/OneDrive/Bureau/projet tab' filename='vols.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0kgwjw3189205418azo2y0tqfe75' name='vols.csv' table='[vols#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='fr_FR'>
            <column datatype='date' name='flight_date' ordinal='0' />
            <column datatype='string' name='airline_name' ordinal='1' />
            <column datatype='string' name='airline_code' ordinal='2' />
            <column datatype='integer' name='flight_number' ordinal='3' />
            <column datatype='string' name='origin_airport' ordinal='4' />
            <column datatype='string' name='origin_city' ordinal='5' />
            <column datatype='string' name='destination_airport' ordinal='6' />
            <column datatype='string' name='destination_city' ordinal='7' />
            <column datatype='datetime' name='scheduled_departure_time' ordinal='8' />
            <column datatype='datetime' name='departure_time' ordinal='9' />
            <column datatype='integer' name='departure_delay' ordinal='10' />
            <column datatype='integer' name='taxi_out' ordinal='11' />
            <column datatype='datetime' name='wheels_off' ordinal='12' />
            <column datatype='datetime' name='wheels_on' ordinal='13' />
            <column datatype='integer' name='taxi_in' ordinal='14' />
            <column datatype='datetime' name='scheduled_arrival_time' ordinal='15' />
            <column datatype='datetime' name='arrival_time' ordinal='16' />
            <column datatype='integer' name='arrival_delay' ordinal='17' />
            <column datatype='boolean' name='is_cancelled' ordinal='18' />
            <column datatype='string' name='cancellation_code' ordinal='19' />
            <column datatype='boolean' name='is_diverted' ordinal='20' />
            <column datatype='integer' name='scheduled_elapsed_time' ordinal='21' />
            <column datatype='integer' name='elapsed_time' ordinal='22' />
            <column datatype='integer' name='air_time' ordinal='23' />
            <column datatype='integer' name='distance_in_miles' ordinal='24' />
            <column datatype='integer' name='delay_due_to_carrier' ordinal='25' />
            <column datatype='integer' name='delay_due_to_weather' ordinal='26' />
            <column datatype='integer' name='delay_due_to_national_aviation_system' ordinal='27' />
            <column datatype='integer' name='delay_due_to_security' ordinal='28' />
            <column datatype='integer' name='delay_due_to_late_aircraft' ordinal='29' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0kgwjw3189205418azo2y0tqfe75' name='vols.csv' table='[vols#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='fr_FR'>
            <column datatype='date' name='flight_date' ordinal='0' />
            <column datatype='string' name='airline_name' ordinal='1' />
            <column datatype='string' name='airline_code' ordinal='2' />
            <column datatype='integer' name='flight_number' ordinal='3' />
            <column datatype='string' name='origin_airport' ordinal='4' />
            <column datatype='string' name='origin_city' ordinal='5' />
            <column datatype='string' name='destination_airport' ordinal='6' />
            <column datatype='string' name='destination_city' ordinal='7' />
            <column datatype='datetime' name='scheduled_departure_time' ordinal='8' />
            <column datatype='datetime' name='departure_time' ordinal='9' />
            <column datatype='integer' name='departure_delay' ordinal='10' />
            <column datatype='integer' name='taxi_out' ordinal='11' />
            <column datatype='datetime' name='wheels_off' ordinal='12' />
            <column datatype='datetime' name='wheels_on' ordinal='13' />
            <column datatype='integer' name='taxi_in' ordinal='14' />
            <column datatype='datetime' name='scheduled_arrival_time' ordinal='15' />
            <column datatype='datetime' name='arrival_time' ordinal='16' />
            <column datatype='integer' name='arrival_delay' ordinal='17' />
            <column datatype='boolean' name='is_cancelled' ordinal='18' />
            <column datatype='string' name='cancellation_code' ordinal='19' />
            <column datatype='boolean' name='is_diverted' ordinal='20' />
            <column datatype='integer' name='scheduled_elapsed_time' ordinal='21' />
            <column datatype='integer' name='elapsed_time' ordinal='22' />
            <column datatype='integer' name='air_time' ordinal='23' />
            <column datatype='integer' name='distance_in_miles' ordinal='24' />
            <column datatype='integer' name='delay_due_to_carrier' ordinal='25' />
            <column datatype='integer' name='delay_due_to_weather' ordinal='26' />
            <column datatype='integer' name='delay_due_to_national_aviation_system' ordinal='27' />
            <column datatype='integer' name='delay_due_to_security' ordinal='28' />
            <column datatype='integer' name='delay_due_to_late_aircraft' ordinal='29' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¬&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flight_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[flight_date]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>flight_date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airline_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airline_name]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>airline_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airline_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[airline_code]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>airline_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flight_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[flight_number]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>flight_number</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin_airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin_airport]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>origin_airport</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin_city]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>origin_city</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination_airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination_airport]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>destination_airport</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>destination_city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[destination_city]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>destination_city</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scheduled_departure_time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[scheduled_departure_time]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>scheduled_departure_time</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departure_time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[departure_time]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>departure_time</remote-alias>
            <ordinal>9</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departure_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[departure_delay]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>departure_delay</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taxi_out</remote-name>
            <remote-type>20</remote-type>
            <local-name>[taxi_out]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>taxi_out</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wheels_off</remote-name>
            <remote-type>134</remote-type>
            <local-name>[wheels_off]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>wheels_off</remote-alias>
            <ordinal>12</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wheels_on</remote-name>
            <remote-type>134</remote-type>
            <local-name>[wheels_on]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>wheels_on</remote-alias>
            <ordinal>13</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>taxi_in</remote-name>
            <remote-type>20</remote-type>
            <local-name>[taxi_in]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>taxi_in</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scheduled_arrival_time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[scheduled_arrival_time]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>scheduled_arrival_time</remote-alias>
            <ordinal>15</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrival_time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[arrival_time]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>arrival_time</remote-alias>
            <ordinal>16</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrival_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[arrival_delay]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>arrival_delay</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_cancelled</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_cancelled]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>is_cancelled</remote-alias>
            <ordinal>18</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cancellation_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cancellation_code]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>cancellation_code</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_diverted</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_diverted]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>is_diverted</remote-alias>
            <ordinal>20</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scheduled_elapsed_time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[scheduled_elapsed_time]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>scheduled_elapsed_time</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>elapsed_time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[elapsed_time]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>elapsed_time</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>air_time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[air_time]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>air_time</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance_in_miles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[distance_in_miles]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>distance_in_miles</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delay_due_to_carrier</remote-name>
            <remote-type>20</remote-type>
            <local-name>[delay_due_to_carrier]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>delay_due_to_carrier</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delay_due_to_weather</remote-name>
            <remote-type>20</remote-type>
            <local-name>[delay_due_to_weather]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>delay_due_to_weather</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delay_due_to_national_aviation_system</remote-name>
            <remote-type>20</remote-type>
            <local-name>[delay_due_to_national_aviation_system]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>delay_due_to_national_aviation_system</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delay_due_to_security</remote-name>
            <remote-type>20</remote-type>
            <local-name>[delay_due_to_security]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>delay_due_to_security</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>delay_due_to_late_aircraft</remote-name>
            <remote-type>20</remote-type>
            <local-name>[delay_due_to_late_aircraft]</local-name>
            <parent-name>[vols.csv]</parent-name>
            <remote-alias>delay_due_to_late_aircraft</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vols.csv_ED571202EE2D4E33B815CB4616031E72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='vols.csv' datatype='table' name='[__tableau_internal_object_id__].[vols.csv_ED571202EE2D4E33B815CB4616031E72]' role='measure' type='quantitative' />
      <column caption='Air Time' datatype='integer' name='[air_time]' role='measure' type='quantitative' />
      <column caption='Airline Code' datatype='string' name='[airline_code]' role='dimension' type='nominal' />
      <column caption='Airline Name' datatype='string' name='[airline_name]' role='dimension' type='nominal' />
      <column caption='Arrival Delay' datatype='integer' name='[arrival_delay]' role='measure' type='quantitative' />
      <column caption='Arrival Time' datatype='datetime' name='[arrival_time]' role='dimension' type='ordinal' />
      <column caption='Cancellation Code' datatype='string' name='[cancellation_code]' role='dimension' type='nominal' />
      <column caption='Delay Due To Carrier' datatype='integer' name='[delay_due_to_carrier]' role='measure' type='quantitative' />
      <column caption='Delay Due To Late Aircraft' datatype='integer' name='[delay_due_to_late_aircraft]' role='measure' type='quantitative' />
      <column caption='Delay Due To National Aviation System' datatype='integer' name='[delay_due_to_national_aviation_system]' role='measure' type='quantitative' />
      <column caption='Delay Due To Security' datatype='integer' name='[delay_due_to_security]' role='measure' type='quantitative' />
      <column caption='Delay Due To Weather' datatype='integer' name='[delay_due_to_weather]' role='measure' type='quantitative' />
      <column caption='Departure Delay' datatype='integer' name='[departure_delay]' role='measure' type='quantitative' />
      <column caption='Departure Time' datatype='datetime' name='[departure_time]' role='dimension' type='ordinal' />
      <column caption='Destination Airport' datatype='string' name='[destination_airport]' role='dimension' type='nominal' />
      <column caption='Destination City' datatype='string' name='[destination_city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Distance In Miles' datatype='integer' name='[distance_in_miles]' role='measure' type='quantitative' />
      <column caption='Elapsed Time' datatype='integer' name='[elapsed_time]' role='measure' type='quantitative' />
      <column caption='Flight Date' datatype='date' name='[flight_date]' role='dimension' type='ordinal' />
      <column caption='Flight Number' datatype='integer' name='[flight_number]' role='dimension' type='ordinal' />
      <column caption='Is Cancelled' datatype='boolean' name='[is_cancelled]' role='dimension' type='nominal' />
      <column caption='Is Diverted' datatype='boolean' name='[is_diverted]' role='dimension' type='nominal' />
      <column caption='Origin Airport' datatype='string' name='[origin_airport]' role='dimension' type='nominal' />
      <column caption='Origin City' datatype='string' name='[origin_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Adak Island&quot;' value='&quot;Adak&quot;' />
          <semantic-value key='&quot;Allentown/Bethlehem/Easton&quot;' value='&quot;Allentown&quot;' />
          <semantic-value key='&quot;Arcata/Eureka&quot;' value='&quot;Arcata&quot;' />
          <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
          <semantic-value key='&quot;Bend/Redmond&quot;' value='&quot;Bend&quot;' />
          <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
          <semantic-value key='&quot;Bloomington/Normal&quot;' value='&quot;Bloomington&quot;' />
          <semantic-value key='&quot;Bristol/Johnson City/Kingsport&quot;' value='&quot;Bristol&quot;' />
          <semantic-value key='&quot;Cedar Rapids/Iowa City&quot;' value='&quot;Cedar Rapids&quot;' />
          <semantic-value key='&quot;Champaign/Urbana&quot;' value='&quot;Champaign&quot;' />
          <semantic-value key='&quot;Charleston/Dunbar&quot;' value='&quot;Charleston&quot;' />
          <semantic-value key='&quot;Clarksburg/Fairmont&quot;' value='&quot;Clarksburg&quot;' />
          <semantic-value key='&quot;College Station/Bryan&quot;' value='&quot;College Station&quot;' />
          <semantic-value key='&quot;CONCORD, NC&quot;' value='&quot;Concord&quot;' />
          <semantic-value key='&quot;Elmira/Corning&quot;' value='&quot;Elmira&quot;' />
          <semantic-value key='&quot;Greensboro/High Point&quot;' value='&quot;Greensboro&quot;' />
          <semantic-value key='&quot;Gulfport/Biloxi&quot;' value='&quot;Gulfport&quot;' />
          <semantic-value key='&quot;Hancock/Houghton&quot;' value='&quot;Hancock&quot;' />
          <semantic-value key='&quot;Harlingen/San Benito&quot;' value='&quot;Harlingen&quot;' />
          <semantic-value key='&quot;Hattiesburg/Laurel&quot;' value='&quot;Hattiesburg&quot;' />
          <semantic-value key='&quot;Hilton Head&quot;' value='&quot;Hilton Head Island&quot;' />
          <semantic-value key='&quot;Iron Mountain/Kingsfd&quot;' value='&quot;Iron Mountain&quot;' />
          <semantic-value key='&quot;Ithaca/Cortland&quot;' value='&quot;Ithaca&quot;' />
          <semantic-value key='&quot;Jackson/Vicksburg&quot;' value='&quot;Jackson&quot;' />
          <semantic-value key='&quot;Jacksonville/Camp Lejeune&quot;' value='&quot;Jacksonville&quot;' />
          <semantic-value key='&quot;Kona&quot;' value='&quot;Konawa&quot;' />
          <semantic-value key='&quot;Lawton/Fort Sill&quot;' value='&quot;Lawton&quot;' />
          <semantic-value key='&quot;Manhattan/Ft. Riley&quot;' value='&quot;Manhattan&quot;' />
          <semantic-value key='&quot;Martha&apos;s Vineyard&quot;' value='&quot;Martha&quot;' />
          <semantic-value key='&quot;Midland/Odessa&quot;' value='&quot;Midland&quot;' />
          <semantic-value key='&quot;Mission/McAllen/Edinburg&quot;' value='&quot;Mission&quot;' />
          <semantic-value key='&quot;Montrose/Delta&quot;' value='&quot;Montrose&quot;' />
          <semantic-value key='&quot;New Bern/Morehead/Beaufort&quot;' value='&quot;Beaufort&quot;' />
          <semantic-value key='&quot;Newburgh/Poughkeepsie&quot;' value='&quot;Newburgh&quot;' />
          <semantic-value key='&quot;Newport News/Williamsburg&quot;' value='&quot;Newport News&quot;' />
          <semantic-value key='&quot;North Bend/Coos Bay&quot;' value='&quot;North Bend&quot;' />
          <semantic-value key='&quot;Pago Pago&quot;' value='&quot;Pagosa Springs&quot;' />
          <semantic-value key='&quot;Pasco/Kennewick/Richland&quot;' value='&quot;Pasco&quot;' />
          <semantic-value key='&quot;Raleigh/Durham&quot;' value='&quot;Raleigh&quot;' />
          <semantic-value key='&quot;Riverton/Lander&quot;' value='&quot;Riverton&quot;' />
          <semantic-value key='&quot;Saginaw/Bay City/Midland&quot;' value='&quot;Saginaw&quot;' />
          <semantic-value key='&quot;Sarasota/Bradenton&quot;' value='&quot;Saratoga&quot;' />
          <semantic-value key='&quot;Scranton/Wilkes-Barre&quot;' value='&quot;Scranton&quot;' />
          <semantic-value key='&quot;Sun Valley/Hailey/Ketchum&quot;' value='&quot;Sun Valley&quot;' />
          <semantic-value key='&quot;West Palm Beach/Palm Beach&quot;' value='&quot;West Palm Beach&quot;' />
        </semantic-values>
      </column>
      <column aggregation='Hour' caption='Scheduled Arrival Time' datatype='datetime' name='[scheduled_arrival_time]' role='dimension' type='ordinal' />
      <column caption='Scheduled Departure Time' datatype='datetime' name='[scheduled_departure_time]' role='dimension' type='ordinal' />
      <column caption='Scheduled Elapsed Time' datatype='integer' name='[scheduled_elapsed_time]' role='measure' type='quantitative' />
      <column caption='Taxi In' datatype='integer' name='[taxi_in]' role='measure' type='quantitative' />
      <column caption='Taxi Out' datatype='integer' name='[taxi_out]' role='measure' type='quantitative' />
      <column aggregation='Hour' caption='Wheels Off' datatype='datetime' name='[wheels_off]' role='dimension' type='ordinal' />
      <column aggregation='Hour' caption='Wheels On' datatype='datetime' name='[wheels_on]' role='dimension' type='ordinal' />
      <column-instance column='[airline_code]' derivation='None' name='[none:airline_code:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:airline_code:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;HA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9E&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;YV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;F9&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;QX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;YX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;G4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B6&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;Etats-Unis&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='vols.csv' id='vols.csv_ED571202EE2D4E33B815CB4616031E72'>
            <properties context=''>
              <relation connection='textscan.0kgwjw3189205418azo2y0tqfe75' name='vols.csv' table='[vols#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='fr_FR'>
                  <column datatype='date' name='flight_date' ordinal='0' />
                  <column datatype='string' name='airline_name' ordinal='1' />
                  <column datatype='string' name='airline_code' ordinal='2' />
                  <column datatype='integer' name='flight_number' ordinal='3' />
                  <column datatype='string' name='origin_airport' ordinal='4' />
                  <column datatype='string' name='origin_city' ordinal='5' />
                  <column datatype='string' name='destination_airport' ordinal='6' />
                  <column datatype='string' name='destination_city' ordinal='7' />
                  <column datatype='datetime' name='scheduled_departure_time' ordinal='8' />
                  <column datatype='datetime' name='departure_time' ordinal='9' />
                  <column datatype='integer' name='departure_delay' ordinal='10' />
                  <column datatype='integer' name='taxi_out' ordinal='11' />
                  <column datatype='datetime' name='wheels_off' ordinal='12' />
                  <column datatype='datetime' name='wheels_on' ordinal='13' />
                  <column datatype='integer' name='taxi_in' ordinal='14' />
                  <column datatype='datetime' name='scheduled_arrival_time' ordinal='15' />
                  <column datatype='datetime' name='arrival_time' ordinal='16' />
                  <column datatype='integer' name='arrival_delay' ordinal='17' />
                  <column datatype='boolean' name='is_cancelled' ordinal='18' />
                  <column datatype='string' name='cancellation_code' ordinal='19' />
                  <column datatype='boolean' name='is_diverted' ordinal='20' />
                  <column datatype='integer' name='scheduled_elapsed_time' ordinal='21' />
                  <column datatype='integer' name='elapsed_time' ordinal='22' />
                  <column datatype='integer' name='air_time' ordinal='23' />
                  <column datatype='integer' name='distance_in_miles' ordinal='24' />
                  <column datatype='integer' name='delay_due_to_carrier' ordinal='25' />
                  <column datatype='integer' name='delay_due_to_weather' ordinal='26' />
                  <column datatype='integer' name='delay_due_to_national_aviation_system' ordinal='27' />
                  <column datatype='integer' name='delay_due_to_security' ordinal='28' />
                  <column datatype='integer' name='delay_due_to_late_aircraft' ordinal='29' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0ry08tp0iokk6n10wilm30p9jspj'>
      <datasources>
        <datasource caption='flights_clean' name='federated.0ry08tp0iokk6n10wilm30p9jspj' />
      </datasources>
      <datasource-dependencies datasource='federated.0ry08tp0iokk6n10wilm30p9jspj'>
        <column caption='Flight Date' datatype='date' name='[flight_date]' role='dimension' type='ordinal' />
        <column-instance column='[origin_city]' derivation='None' name='[none:origin_city:nk]' pivot='key' type='nominal' />
        <column caption='Origin City' datatype='string' name='[origin_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
          <semantic-values semantic-role='[City].[Name]'>
            <semantic-value key='&quot;Adak Island&quot;' value='&quot;Adak&quot;' />
            <semantic-value key='&quot;Allentown/Bethlehem/Easton&quot;' value='&quot;Allentown&quot;' />
            <semantic-value key='&quot;Arcata/Eureka&quot;' value='&quot;Arcata&quot;' />
            <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
            <semantic-value key='&quot;Bend/Redmond&quot;' value='&quot;Bend&quot;' />
            <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
            <semantic-value key='&quot;Bloomington/Normal&quot;' value='&quot;Bloomington&quot;' />
            <semantic-value key='&quot;Bristol/Johnson City/Kingsport&quot;' value='&quot;Bristol&quot;' />
            <semantic-value key='&quot;Cedar Rapids/Iowa City&quot;' value='&quot;Cedar Rapids&quot;' />
            <semantic-value key='&quot;Champaign/Urbana&quot;' value='&quot;Champaign&quot;' />
            <semantic-value key='&quot;Charleston/Dunbar&quot;' value='&quot;Charleston&quot;' />
            <semantic-value key='&quot;Clarksburg/Fairmont&quot;' value='&quot;Clarksburg&quot;' />
            <semantic-value key='&quot;College Station/Bryan&quot;' value='&quot;College Station&quot;' />
            <semantic-value key='&quot;CONCORD, NC&quot;' value='&quot;Concord&quot;' />
            <semantic-value key='&quot;Elmira/Corning&quot;' value='&quot;Elmira&quot;' />
            <semantic-value key='&quot;Greensboro/High Point&quot;' value='&quot;Greensboro&quot;' />
            <semantic-value key='&quot;Gulfport/Biloxi&quot;' value='&quot;Gulfport&quot;' />
            <semantic-value key='&quot;Hancock/Houghton&quot;' value='&quot;Hancock&quot;' />
            <semantic-value key='&quot;Harlingen/San Benito&quot;' value='&quot;Harlingen&quot;' />
            <semantic-value key='&quot;Hattiesburg/Laurel&quot;' value='&quot;Hattiesburg&quot;' />
            <semantic-value key='&quot;Hilton Head&quot;' value='&quot;Hilton Head Island&quot;' />
            <semantic-value key='&quot;Iron Mountain/Kingsfd&quot;' value='&quot;Iron Mountain&quot;' />
            <semantic-value key='&quot;Ithaca/Cortland&quot;' value='&quot;Ithaca&quot;' />
            <semantic-value key='&quot;Jackson/Vicksburg&quot;' value='&quot;Jackson&quot;' />
            <semantic-value key='&quot;Jacksonville/Camp Lejeune&quot;' value='&quot;Jacksonville&quot;' />
            <semantic-value key='&quot;Kona&quot;' value='&quot;Konawa&quot;' />
            <semantic-value key='&quot;Lawton/Fort Sill&quot;' value='&quot;Lawton&quot;' />
            <semantic-value key='&quot;Manhattan/Ft. Riley&quot;' value='&quot;Manhattan&quot;' />
            <semantic-value key='&quot;Martha&apos;s Vineyard&quot;' value='&quot;Martha&quot;' />
            <semantic-value key='&quot;Midland/Odessa&quot;' value='&quot;Midland&quot;' />
            <semantic-value key='&quot;Mission/McAllen/Edinburg&quot;' value='&quot;Mission&quot;' />
            <semantic-value key='&quot;Montrose/Delta&quot;' value='&quot;Montrose&quot;' />
            <semantic-value key='&quot;New Bern/Morehead/Beaufort&quot;' value='&quot;Beaufort&quot;' />
            <semantic-value key='&quot;Newburgh/Poughkeepsie&quot;' value='&quot;Newburgh&quot;' />
            <semantic-value key='&quot;Newport News/Williamsburg&quot;' value='&quot;Newport News&quot;' />
            <semantic-value key='&quot;North Bend/Coos Bay&quot;' value='&quot;North Bend&quot;' />
            <semantic-value key='&quot;Pago Pago&quot;' value='&quot;Pagosa Springs&quot;' />
            <semantic-value key='&quot;Pasco/Kennewick/Richland&quot;' value='&quot;Pasco&quot;' />
            <semantic-value key='&quot;Raleigh/Durham&quot;' value='&quot;Raleigh&quot;' />
            <semantic-value key='&quot;Riverton/Lander&quot;' value='&quot;Riverton&quot;' />
            <semantic-value key='&quot;Saginaw/Bay City/Midland&quot;' value='&quot;Saginaw&quot;' />
            <semantic-value key='&quot;Sarasota/Bradenton&quot;' value='&quot;Saratoga&quot;' />
            <semantic-value key='&quot;Scranton/Wilkes-Barre&quot;' value='&quot;Scranton&quot;' />
            <semantic-value key='&quot;Sun Valley/Hailey/Ketchum&quot;' value='&quot;Sun Valley&quot;' />
            <semantic-value key='&quot;West Palm Beach/Palm Beach&quot;' value='&quot;West Palm Beach&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[flight_date]' derivation='Year' name='[yr:flight_date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]'>
        <groupfilter function='level-members' level='[none:origin_city:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]' />
      </filter>
      <filter class='categorical' column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]'>
        <groupfilter function='level-members' level='[yr:flight_date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions brushing-enabled='false' />
  <worksheets>
    <worksheet name='Feuille 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Delay  by quarter in &lt;</run>
            <run>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</run>
            <run>&gt; - &lt;</run>
            <run>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights_clean' name='federated.0ry08tp0iokk6n10wilm30p9jspj' />
          </datasources>
          <datasource-dependencies datasource='federated.0ry08tp0iokk6n10wilm30p9jspj'>
            <column-instance column='[delay_due_to_carrier]' derivation='Avg' name='[avg:delay_due_to_carrier:qk]' pivot='key' type='quantitative' />
            <column-instance column='[delay_due_to_late_aircraft]' derivation='Avg' name='[avg:delay_due_to_late_aircraft:qk]' pivot='key' type='quantitative' />
            <column-instance column='[delay_due_to_national_aviation_system]' derivation='Avg' name='[avg:delay_due_to_national_aviation_system:qk]' pivot='key' type='quantitative' />
            <column-instance column='[delay_due_to_weather]' derivation='Avg' name='[avg:delay_due_to_weather:qk]' pivot='key' type='quantitative' />
            <column caption='Delay Due To Carrier' datatype='integer' name='[delay_due_to_carrier]' role='measure' type='quantitative' />
            <column caption='Delay Due To Late Aircraft' datatype='integer' name='[delay_due_to_late_aircraft]' role='measure' type='quantitative' />
            <column caption='Delay Due To National Aviation System' datatype='integer' name='[delay_due_to_national_aviation_system]' role='measure' type='quantitative' />
            <column caption='Delay Due To Weather' datatype='integer' name='[delay_due_to_weather]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[flight_date]' role='dimension' type='ordinal' />
            <column-instance column='[origin_city]' derivation='None' name='[none:origin_city:nk]' pivot='key' type='nominal' />
            <column caption='Origin City' datatype='string' name='[origin_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Adak Island&quot;' value='&quot;Adak&quot;' />
                <semantic-value key='&quot;Allentown/Bethlehem/Easton&quot;' value='&quot;Allentown&quot;' />
                <semantic-value key='&quot;Arcata/Eureka&quot;' value='&quot;Arcata&quot;' />
                <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
                <semantic-value key='&quot;Bend/Redmond&quot;' value='&quot;Bend&quot;' />
                <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
                <semantic-value key='&quot;Bloomington/Normal&quot;' value='&quot;Bloomington&quot;' />
                <semantic-value key='&quot;Bristol/Johnson City/Kingsport&quot;' value='&quot;Bristol&quot;' />
                <semantic-value key='&quot;Cedar Rapids/Iowa City&quot;' value='&quot;Cedar Rapids&quot;' />
                <semantic-value key='&quot;Champaign/Urbana&quot;' value='&quot;Champaign&quot;' />
                <semantic-value key='&quot;Charleston/Dunbar&quot;' value='&quot;Charleston&quot;' />
                <semantic-value key='&quot;Clarksburg/Fairmont&quot;' value='&quot;Clarksburg&quot;' />
                <semantic-value key='&quot;College Station/Bryan&quot;' value='&quot;College Station&quot;' />
                <semantic-value key='&quot;CONCORD, NC&quot;' value='&quot;Concord&quot;' />
                <semantic-value key='&quot;Elmira/Corning&quot;' value='&quot;Elmira&quot;' />
                <semantic-value key='&quot;Greensboro/High Point&quot;' value='&quot;Greensboro&quot;' />
                <semantic-value key='&quot;Gulfport/Biloxi&quot;' value='&quot;Gulfport&quot;' />
                <semantic-value key='&quot;Hancock/Houghton&quot;' value='&quot;Hancock&quot;' />
                <semantic-value key='&quot;Harlingen/San Benito&quot;' value='&quot;Harlingen&quot;' />
                <semantic-value key='&quot;Hattiesburg/Laurel&quot;' value='&quot;Hattiesburg&quot;' />
                <semantic-value key='&quot;Hilton Head&quot;' value='&quot;Hilton Head Island&quot;' />
                <semantic-value key='&quot;Iron Mountain/Kingsfd&quot;' value='&quot;Iron Mountain&quot;' />
                <semantic-value key='&quot;Ithaca/Cortland&quot;' value='&quot;Ithaca&quot;' />
                <semantic-value key='&quot;Jackson/Vicksburg&quot;' value='&quot;Jackson&quot;' />
                <semantic-value key='&quot;Jacksonville/Camp Lejeune&quot;' value='&quot;Jacksonville&quot;' />
                <semantic-value key='&quot;Kona&quot;' value='&quot;Konawa&quot;' />
                <semantic-value key='&quot;Lawton/Fort Sill&quot;' value='&quot;Lawton&quot;' />
                <semantic-value key='&quot;Manhattan/Ft. Riley&quot;' value='&quot;Manhattan&quot;' />
                <semantic-value key='&quot;Martha&apos;s Vineyard&quot;' value='&quot;Martha&quot;' />
                <semantic-value key='&quot;Midland/Odessa&quot;' value='&quot;Midland&quot;' />
                <semantic-value key='&quot;Mission/McAllen/Edinburg&quot;' value='&quot;Mission&quot;' />
                <semantic-value key='&quot;Montrose/Delta&quot;' value='&quot;Montrose&quot;' />
                <semantic-value key='&quot;New Bern/Morehead/Beaufort&quot;' value='&quot;Beaufort&quot;' />
                <semantic-value key='&quot;Newburgh/Poughkeepsie&quot;' value='&quot;Newburgh&quot;' />
                <semantic-value key='&quot;Newport News/Williamsburg&quot;' value='&quot;Newport News&quot;' />
                <semantic-value key='&quot;North Bend/Coos Bay&quot;' value='&quot;North Bend&quot;' />
                <semantic-value key='&quot;Pago Pago&quot;' value='&quot;Pagosa Springs&quot;' />
                <semantic-value key='&quot;Pasco/Kennewick/Richland&quot;' value='&quot;Pasco&quot;' />
                <semantic-value key='&quot;Raleigh/Durham&quot;' value='&quot;Raleigh&quot;' />
                <semantic-value key='&quot;Riverton/Lander&quot;' value='&quot;Riverton&quot;' />
                <semantic-value key='&quot;Saginaw/Bay City/Midland&quot;' value='&quot;Saginaw&quot;' />
                <semantic-value key='&quot;Sarasota/Bradenton&quot;' value='&quot;Saratoga&quot;' />
                <semantic-value key='&quot;Scranton/Wilkes-Barre&quot;' value='&quot;Scranton&quot;' />
                <semantic-value key='&quot;Sun Valley/Hailey/Ketchum&quot;' value='&quot;Sun Valley&quot;' />
                <semantic-value key='&quot;West Palm Beach/Palm Beach&quot;' value='&quot;West Palm Beach&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[delay_due_to_carrier]' derivation='Sum' name='[sum:delay_due_to_carrier:qk]' pivot='key' type='quantitative' />
            <column-instance column='[delay_due_to_weather]' derivation='Sum' name='[sum:delay_due_to_weather:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flight_date]' derivation='Quarter-Trunc' name='[tqr:flight_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flight_date]' derivation='Year' name='[yr:flight_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ry08tp0iokk6n10wilm30p9jspj].[tqr:flight_date:ok]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_weather:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</column>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[sum:delay_due_to_carrier:qk]' palette='red_blue_white_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_late_aircraft:qk]' palette='red_blue_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_national_aviation_system:qk]' palette='red_blue_white_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[sum:delay_due_to_weather:qk]' palette='red_blue_white_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_carrier:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[sum:delay_due_to_carrier:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_late_aircraft:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_late_aircraft:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_national_aviation_system:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_national_aviation_system:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_weather:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[sum:delay_due_to_weather:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60000002384185791' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_carrier:qk] + ([federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_late_aircraft:qk] + ([federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_national_aviation_system:qk] + [federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_weather:qk])))</rows>
        <cols>[federated.0ry08tp0iokk6n10wilm30p9jspj].[tqr:flight_date:ok]</cols>
      </table>
      <simple-id uuid='{CA629C99-F5BB-4E78-9FF2-79F059E7BC63}' />
    </worksheet>
    <worksheet name='Feuille 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[Distribution of flights by airlines in <]]></run>
            <run>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</run>
            <run>&gt; - &lt;</run>
            <run>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights_clean' name='federated.0ry08tp0iokk6n10wilm30p9jspj' />
          </datasources>
          <datasource-dependencies datasource='federated.0ry08tp0iokk6n10wilm30p9jspj'>
            <_.fcp.ObjectModelTableType.false...column caption='vols.csv' datatype='integer' name='[__tableau_internal_object_id__].[vols.csv_ED571202EE2D4E33B815CB4616031E72]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[vols.csv_ED571202EE2D4E33B815CB4616031E72]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='vols.csv' datatype='table' name='[__tableau_internal_object_id__].[vols.csv_ED571202EE2D4E33B815CB4616031E72]' role='measure' type='quantitative' />
            <column caption='Airline Code' datatype='string' name='[airline_code]' role='dimension' type='nominal' />
            <column caption='Airline Name' datatype='string' name='[airline_name]' role='dimension' type='nominal' />
            <column-instance column='[airline_name]' derivation='Attribute' name='[attr:airline_name:nk]' pivot='key' type='nominal' />
            <column caption='Flight Date' datatype='date' name='[flight_date]' role='dimension' type='ordinal' />
            <column-instance column='[airline_code]' derivation='None' name='[none:airline_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin_city]' derivation='None' name='[none:origin_city:nk]' pivot='key' type='nominal' />
            <column caption='Origin City' datatype='string' name='[origin_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Adak Island&quot;' value='&quot;Adak&quot;' />
                <semantic-value key='&quot;Allentown/Bethlehem/Easton&quot;' value='&quot;Allentown&quot;' />
                <semantic-value key='&quot;Arcata/Eureka&quot;' value='&quot;Arcata&quot;' />
                <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
                <semantic-value key='&quot;Bend/Redmond&quot;' value='&quot;Bend&quot;' />
                <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
                <semantic-value key='&quot;Bloomington/Normal&quot;' value='&quot;Bloomington&quot;' />
                <semantic-value key='&quot;Bristol/Johnson City/Kingsport&quot;' value='&quot;Bristol&quot;' />
                <semantic-value key='&quot;Cedar Rapids/Iowa City&quot;' value='&quot;Cedar Rapids&quot;' />
                <semantic-value key='&quot;Champaign/Urbana&quot;' value='&quot;Champaign&quot;' />
                <semantic-value key='&quot;Charleston/Dunbar&quot;' value='&quot;Charleston&quot;' />
                <semantic-value key='&quot;Clarksburg/Fairmont&quot;' value='&quot;Clarksburg&quot;' />
                <semantic-value key='&quot;College Station/Bryan&quot;' value='&quot;College Station&quot;' />
                <semantic-value key='&quot;CONCORD, NC&quot;' value='&quot;Concord&quot;' />
                <semantic-value key='&quot;Elmira/Corning&quot;' value='&quot;Elmira&quot;' />
                <semantic-value key='&quot;Greensboro/High Point&quot;' value='&quot;Greensboro&quot;' />
                <semantic-value key='&quot;Gulfport/Biloxi&quot;' value='&quot;Gulfport&quot;' />
                <semantic-value key='&quot;Hancock/Houghton&quot;' value='&quot;Hancock&quot;' />
                <semantic-value key='&quot;Harlingen/San Benito&quot;' value='&quot;Harlingen&quot;' />
                <semantic-value key='&quot;Hattiesburg/Laurel&quot;' value='&quot;Hattiesburg&quot;' />
                <semantic-value key='&quot;Hilton Head&quot;' value='&quot;Hilton Head Island&quot;' />
                <semantic-value key='&quot;Iron Mountain/Kingsfd&quot;' value='&quot;Iron Mountain&quot;' />
                <semantic-value key='&quot;Ithaca/Cortland&quot;' value='&quot;Ithaca&quot;' />
                <semantic-value key='&quot;Jackson/Vicksburg&quot;' value='&quot;Jackson&quot;' />
                <semantic-value key='&quot;Jacksonville/Camp Lejeune&quot;' value='&quot;Jacksonville&quot;' />
                <semantic-value key='&quot;Kona&quot;' value='&quot;Konawa&quot;' />
                <semantic-value key='&quot;Lawton/Fort Sill&quot;' value='&quot;Lawton&quot;' />
                <semantic-value key='&quot;Manhattan/Ft. Riley&quot;' value='&quot;Manhattan&quot;' />
                <semantic-value key='&quot;Martha&apos;s Vineyard&quot;' value='&quot;Martha&quot;' />
                <semantic-value key='&quot;Midland/Odessa&quot;' value='&quot;Midland&quot;' />
                <semantic-value key='&quot;Mission/McAllen/Edinburg&quot;' value='&quot;Mission&quot;' />
                <semantic-value key='&quot;Montrose/Delta&quot;' value='&quot;Montrose&quot;' />
                <semantic-value key='&quot;New Bern/Morehead/Beaufort&quot;' value='&quot;Beaufort&quot;' />
                <semantic-value key='&quot;Newburgh/Poughkeepsie&quot;' value='&quot;Newburgh&quot;' />
                <semantic-value key='&quot;Newport News/Williamsburg&quot;' value='&quot;Newport News&quot;' />
                <semantic-value key='&quot;North Bend/Coos Bay&quot;' value='&quot;North Bend&quot;' />
                <semantic-value key='&quot;Pago Pago&quot;' value='&quot;Pagosa Springs&quot;' />
                <semantic-value key='&quot;Pasco/Kennewick/Richland&quot;' value='&quot;Pasco&quot;' />
                <semantic-value key='&quot;Raleigh/Durham&quot;' value='&quot;Raleigh&quot;' />
                <semantic-value key='&quot;Riverton/Lander&quot;' value='&quot;Riverton&quot;' />
                <semantic-value key='&quot;Saginaw/Bay City/Midland&quot;' value='&quot;Saginaw&quot;' />
                <semantic-value key='&quot;Sarasota/Bradenton&quot;' value='&quot;Saratoga&quot;' />
                <semantic-value key='&quot;Scranton/Wilkes-Barre&quot;' value='&quot;Scranton&quot;' />
                <semantic-value key='&quot;Sun Valley/Hailey/Ketchum&quot;' value='&quot;Sun Valley&quot;' />
                <semantic-value key='&quot;West Palm Beach/Palm Beach&quot;' value='&quot;West Palm Beach&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[flight_date]' derivation='Year' name='[yr:flight_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</column>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' scope='rows' value='dotted' />
            <format attr='border-width' scope='rows' value='2' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#c7ffea' />
            <format attr='band-color' scope='cols' value='#c7ffea' />
            <format attr='band-color' scope='rows' value='#c7ffea' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#c7ffea' />
            <format attr='band-color' scope='rows' value='#c7ffea' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c7ffea' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#c7ffea' />
            <format attr='border-color' value='#c7ffea' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:airline_code:nk]' />
              <wedge-size column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' />
              <tooltip column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[attr:airline_name:nk]' />
              <text column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:airline_code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{98649EFF-4397-4762-AF2A-E1E0D77958D2}' />
    </worksheet>
    <worksheet name='Feuille 3 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[Distribution of canceled flights by airlines in <]]></run>
            <run>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</run>
            <run>&gt; - &lt;</run>
            <run>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights_clean' name='federated.0ry08tp0iokk6n10wilm30p9jspj' />
          </datasources>
          <datasource-dependencies datasource='federated.0ry08tp0iokk6n10wilm30p9jspj'>
            <column caption='Airline Code' datatype='string' name='[airline_code]' role='dimension' type='nominal' />
            <column caption='Airline Name' datatype='string' name='[airline_name]' role='dimension' type='nominal' />
            <column-instance column='[airline_name]' derivation='Attribute' name='[attr:airline_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_cancelled]' derivation='Count' name='[cnt:is_cancelled:qk]' pivot='key' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[flight_date]' role='dimension' type='ordinal' />
            <column caption='Is Cancelled' datatype='boolean' name='[is_cancelled]' role='dimension' type='nominal' />
            <column-instance column='[airline_code]' derivation='None' name='[none:airline_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[is_cancelled]' derivation='None' name='[none:is_cancelled:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin_city]' derivation='None' name='[none:origin_city:nk]' pivot='key' type='nominal' />
            <column caption='Origin City' datatype='string' name='[origin_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Adak Island&quot;' value='&quot;Adak&quot;' />
                <semantic-value key='&quot;Allentown/Bethlehem/Easton&quot;' value='&quot;Allentown&quot;' />
                <semantic-value key='&quot;Arcata/Eureka&quot;' value='&quot;Arcata&quot;' />
                <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
                <semantic-value key='&quot;Bend/Redmond&quot;' value='&quot;Bend&quot;' />
                <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
                <semantic-value key='&quot;Bloomington/Normal&quot;' value='&quot;Bloomington&quot;' />
                <semantic-value key='&quot;Bristol/Johnson City/Kingsport&quot;' value='&quot;Bristol&quot;' />
                <semantic-value key='&quot;Cedar Rapids/Iowa City&quot;' value='&quot;Cedar Rapids&quot;' />
                <semantic-value key='&quot;Champaign/Urbana&quot;' value='&quot;Champaign&quot;' />
                <semantic-value key='&quot;Charleston/Dunbar&quot;' value='&quot;Charleston&quot;' />
                <semantic-value key='&quot;Clarksburg/Fairmont&quot;' value='&quot;Clarksburg&quot;' />
                <semantic-value key='&quot;College Station/Bryan&quot;' value='&quot;College Station&quot;' />
                <semantic-value key='&quot;CONCORD, NC&quot;' value='&quot;Concord&quot;' />
                <semantic-value key='&quot;Elmira/Corning&quot;' value='&quot;Elmira&quot;' />
                <semantic-value key='&quot;Greensboro/High Point&quot;' value='&quot;Greensboro&quot;' />
                <semantic-value key='&quot;Gulfport/Biloxi&quot;' value='&quot;Gulfport&quot;' />
                <semantic-value key='&quot;Hancock/Houghton&quot;' value='&quot;Hancock&quot;' />
                <semantic-value key='&quot;Harlingen/San Benito&quot;' value='&quot;Harlingen&quot;' />
                <semantic-value key='&quot;Hattiesburg/Laurel&quot;' value='&quot;Hattiesburg&quot;' />
                <semantic-value key='&quot;Hilton Head&quot;' value='&quot;Hilton Head Island&quot;' />
                <semantic-value key='&quot;Iron Mountain/Kingsfd&quot;' value='&quot;Iron Mountain&quot;' />
                <semantic-value key='&quot;Ithaca/Cortland&quot;' value='&quot;Ithaca&quot;' />
                <semantic-value key='&quot;Jackson/Vicksburg&quot;' value='&quot;Jackson&quot;' />
                <semantic-value key='&quot;Jacksonville/Camp Lejeune&quot;' value='&quot;Jacksonville&quot;' />
                <semantic-value key='&quot;Kona&quot;' value='&quot;Konawa&quot;' />
                <semantic-value key='&quot;Lawton/Fort Sill&quot;' value='&quot;Lawton&quot;' />
                <semantic-value key='&quot;Manhattan/Ft. Riley&quot;' value='&quot;Manhattan&quot;' />
                <semantic-value key='&quot;Martha&apos;s Vineyard&quot;' value='&quot;Martha&quot;' />
                <semantic-value key='&quot;Midland/Odessa&quot;' value='&quot;Midland&quot;' />
                <semantic-value key='&quot;Mission/McAllen/Edinburg&quot;' value='&quot;Mission&quot;' />
                <semantic-value key='&quot;Montrose/Delta&quot;' value='&quot;Montrose&quot;' />
                <semantic-value key='&quot;New Bern/Morehead/Beaufort&quot;' value='&quot;Beaufort&quot;' />
                <semantic-value key='&quot;Newburgh/Poughkeepsie&quot;' value='&quot;Newburgh&quot;' />
                <semantic-value key='&quot;Newport News/Williamsburg&quot;' value='&quot;Newport News&quot;' />
                <semantic-value key='&quot;North Bend/Coos Bay&quot;' value='&quot;North Bend&quot;' />
                <semantic-value key='&quot;Pago Pago&quot;' value='&quot;Pagosa Springs&quot;' />
                <semantic-value key='&quot;Pasco/Kennewick/Richland&quot;' value='&quot;Pasco&quot;' />
                <semantic-value key='&quot;Raleigh/Durham&quot;' value='&quot;Raleigh&quot;' />
                <semantic-value key='&quot;Riverton/Lander&quot;' value='&quot;Riverton&quot;' />
                <semantic-value key='&quot;Saginaw/Bay City/Midland&quot;' value='&quot;Saginaw&quot;' />
                <semantic-value key='&quot;Sarasota/Bradenton&quot;' value='&quot;Saratoga&quot;' />
                <semantic-value key='&quot;Scranton/Wilkes-Barre&quot;' value='&quot;Scranton&quot;' />
                <semantic-value key='&quot;Sun Valley/Hailey/Ketchum&quot;' value='&quot;Sun Valley&quot;' />
                <semantic-value key='&quot;West Palm Beach/Palm Beach&quot;' value='&quot;West Palm Beach&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[flight_date]' derivation='Year' name='[yr:flight_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:is_cancelled:nk]'>
            <groupfilter function='member' level='[none:is_cancelled:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</column>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:is_cancelled:nk]</column>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c7ffea' />
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:airline_code:nk]' />
              <tooltip column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[attr:airline_name:nk]' />
              <text column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:airline_code:nk]' />
              <wedge-size column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[cnt:is_cancelled:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BE659747-EE3E-439F-A102-E51693E9A97D}' />
    </worksheet>
    <worksheet name='Feuille 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[Cancelled flights by quarter in <]]></run>
            <run>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</run>
            <run>&gt; - &lt;</run>
            <run>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights_clean' name='federated.0ry08tp0iokk6n10wilm30p9jspj' />
          </datasources>
          <datasource-dependencies datasource='federated.0ry08tp0iokk6n10wilm30p9jspj'>
            <_.fcp.ObjectModelTableType.false...column caption='vols.csv' datatype='integer' name='[__tableau_internal_object_id__].[vols.csv_ED571202EE2D4E33B815CB4616031E72]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[vols.csv_ED571202EE2D4E33B815CB4616031E72]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='vols.csv' datatype='table' name='[__tableau_internal_object_id__].[vols.csv_ED571202EE2D4E33B815CB4616031E72]' role='measure' type='quantitative' />
            <column caption='Cancellation Code' datatype='string' name='[cancellation_code]' role='dimension' type='nominal' />
            <column caption='Flight Date' datatype='date' name='[flight_date]' role='dimension' type='ordinal' />
            <column-instance column='[cancellation_code]' derivation='None' name='[none:cancellation_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin_city]' derivation='None' name='[none:origin_city:nk]' pivot='key' type='nominal' />
            <column caption='Origin City' datatype='string' name='[origin_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Adak Island&quot;' value='&quot;Adak&quot;' />
                <semantic-value key='&quot;Allentown/Bethlehem/Easton&quot;' value='&quot;Allentown&quot;' />
                <semantic-value key='&quot;Arcata/Eureka&quot;' value='&quot;Arcata&quot;' />
                <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
                <semantic-value key='&quot;Bend/Redmond&quot;' value='&quot;Bend&quot;' />
                <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
                <semantic-value key='&quot;Bloomington/Normal&quot;' value='&quot;Bloomington&quot;' />
                <semantic-value key='&quot;Bristol/Johnson City/Kingsport&quot;' value='&quot;Bristol&quot;' />
                <semantic-value key='&quot;Cedar Rapids/Iowa City&quot;' value='&quot;Cedar Rapids&quot;' />
                <semantic-value key='&quot;Champaign/Urbana&quot;' value='&quot;Champaign&quot;' />
                <semantic-value key='&quot;Charleston/Dunbar&quot;' value='&quot;Charleston&quot;' />
                <semantic-value key='&quot;Clarksburg/Fairmont&quot;' value='&quot;Clarksburg&quot;' />
                <semantic-value key='&quot;College Station/Bryan&quot;' value='&quot;College Station&quot;' />
                <semantic-value key='&quot;CONCORD, NC&quot;' value='&quot;Concord&quot;' />
                <semantic-value key='&quot;Elmira/Corning&quot;' value='&quot;Elmira&quot;' />
                <semantic-value key='&quot;Greensboro/High Point&quot;' value='&quot;Greensboro&quot;' />
                <semantic-value key='&quot;Gulfport/Biloxi&quot;' value='&quot;Gulfport&quot;' />
                <semantic-value key='&quot;Hancock/Houghton&quot;' value='&quot;Hancock&quot;' />
                <semantic-value key='&quot;Harlingen/San Benito&quot;' value='&quot;Harlingen&quot;' />
                <semantic-value key='&quot;Hattiesburg/Laurel&quot;' value='&quot;Hattiesburg&quot;' />
                <semantic-value key='&quot;Hilton Head&quot;' value='&quot;Hilton Head Island&quot;' />
                <semantic-value key='&quot;Iron Mountain/Kingsfd&quot;' value='&quot;Iron Mountain&quot;' />
                <semantic-value key='&quot;Ithaca/Cortland&quot;' value='&quot;Ithaca&quot;' />
                <semantic-value key='&quot;Jackson/Vicksburg&quot;' value='&quot;Jackson&quot;' />
                <semantic-value key='&quot;Jacksonville/Camp Lejeune&quot;' value='&quot;Jacksonville&quot;' />
                <semantic-value key='&quot;Kona&quot;' value='&quot;Konawa&quot;' />
                <semantic-value key='&quot;Lawton/Fort Sill&quot;' value='&quot;Lawton&quot;' />
                <semantic-value key='&quot;Manhattan/Ft. Riley&quot;' value='&quot;Manhattan&quot;' />
                <semantic-value key='&quot;Martha&apos;s Vineyard&quot;' value='&quot;Martha&quot;' />
                <semantic-value key='&quot;Midland/Odessa&quot;' value='&quot;Midland&quot;' />
                <semantic-value key='&quot;Mission/McAllen/Edinburg&quot;' value='&quot;Mission&quot;' />
                <semantic-value key='&quot;Montrose/Delta&quot;' value='&quot;Montrose&quot;' />
                <semantic-value key='&quot;New Bern/Morehead/Beaufort&quot;' value='&quot;Beaufort&quot;' />
                <semantic-value key='&quot;Newburgh/Poughkeepsie&quot;' value='&quot;Newburgh&quot;' />
                <semantic-value key='&quot;Newport News/Williamsburg&quot;' value='&quot;Newport News&quot;' />
                <semantic-value key='&quot;North Bend/Coos Bay&quot;' value='&quot;North Bend&quot;' />
                <semantic-value key='&quot;Pago Pago&quot;' value='&quot;Pagosa Springs&quot;' />
                <semantic-value key='&quot;Pasco/Kennewick/Richland&quot;' value='&quot;Pasco&quot;' />
                <semantic-value key='&quot;Raleigh/Durham&quot;' value='&quot;Raleigh&quot;' />
                <semantic-value key='&quot;Riverton/Lander&quot;' value='&quot;Riverton&quot;' />
                <semantic-value key='&quot;Saginaw/Bay City/Midland&quot;' value='&quot;Saginaw&quot;' />
                <semantic-value key='&quot;Sarasota/Bradenton&quot;' value='&quot;Saratoga&quot;' />
                <semantic-value key='&quot;Scranton/Wilkes-Barre&quot;' value='&quot;Scranton&quot;' />
                <semantic-value key='&quot;Sun Valley/Hailey/Ketchum&quot;' value='&quot;Sun Valley&quot;' />
                <semantic-value key='&quot;West Palm Beach/Palm Beach&quot;' value='&quot;West Palm Beach&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[flight_date]' derivation='Quarter' name='[qr:flight_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[flight_date]' derivation='Year' name='[yr:flight_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:cancellation_code:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:cancellation_code:nk]' />
              <groupfilter function='member' level='[none:cancellation_code:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:cancellation_code:nk]' direction='DESC' using='[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' />
          <slices>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:cancellation_code:nk]</column>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</column>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:cancellation_code:nk]' value='68' />
            <format attr='width' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[qr:flight_date:ok]' value='79' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:cancellation_code:nk]' value='88' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c7ffea' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:cancellation_code:nk]</rows>
        <cols>[federated.0ry08tp0iokk6n10wilm30p9jspj].[qr:flight_date:ok]</cols>
      </table>
      <simple-id uuid='{74F99307-1EB1-4B27-AB83-59CCC9CF1F26}' />
    </worksheet>
    <worksheet name='Feuille 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[Arrival delay by Airline comp. in <]]></run>
            <run>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</run>
            <run>&gt; - &lt;</run>
            <run>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights_clean' name='federated.0ry08tp0iokk6n10wilm30p9jspj' />
          </datasources>
          <datasource-dependencies datasource='federated.0ry08tp0iokk6n10wilm30p9jspj'>
            <column caption='Airline Code' datatype='string' name='[airline_code]' role='dimension' type='nominal' />
            <column caption='Arrival Delay' datatype='integer' name='[arrival_delay]' role='measure' type='quantitative' />
            <column-instance column='[arrival_delay]' derivation='Avg' name='[avg:arrival_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[flight_date]' role='dimension' type='ordinal' />
            <column-instance column='[airline_code]' derivation='None' name='[none:airline_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin_city]' derivation='None' name='[none:origin_city:nk]' pivot='key' type='nominal' />
            <column caption='Origin City' datatype='string' name='[origin_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Adak Island&quot;' value='&quot;Adak&quot;' />
                <semantic-value key='&quot;Allentown/Bethlehem/Easton&quot;' value='&quot;Allentown&quot;' />
                <semantic-value key='&quot;Arcata/Eureka&quot;' value='&quot;Arcata&quot;' />
                <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
                <semantic-value key='&quot;Bend/Redmond&quot;' value='&quot;Bend&quot;' />
                <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
                <semantic-value key='&quot;Bloomington/Normal&quot;' value='&quot;Bloomington&quot;' />
                <semantic-value key='&quot;Bristol/Johnson City/Kingsport&quot;' value='&quot;Bristol&quot;' />
                <semantic-value key='&quot;Cedar Rapids/Iowa City&quot;' value='&quot;Cedar Rapids&quot;' />
                <semantic-value key='&quot;Champaign/Urbana&quot;' value='&quot;Champaign&quot;' />
                <semantic-value key='&quot;Charleston/Dunbar&quot;' value='&quot;Charleston&quot;' />
                <semantic-value key='&quot;Clarksburg/Fairmont&quot;' value='&quot;Clarksburg&quot;' />
                <semantic-value key='&quot;College Station/Bryan&quot;' value='&quot;College Station&quot;' />
                <semantic-value key='&quot;CONCORD, NC&quot;' value='&quot;Concord&quot;' />
                <semantic-value key='&quot;Elmira/Corning&quot;' value='&quot;Elmira&quot;' />
                <semantic-value key='&quot;Greensboro/High Point&quot;' value='&quot;Greensboro&quot;' />
                <semantic-value key='&quot;Gulfport/Biloxi&quot;' value='&quot;Gulfport&quot;' />
                <semantic-value key='&quot;Hancock/Houghton&quot;' value='&quot;Hancock&quot;' />
                <semantic-value key='&quot;Harlingen/San Benito&quot;' value='&quot;Harlingen&quot;' />
                <semantic-value key='&quot;Hattiesburg/Laurel&quot;' value='&quot;Hattiesburg&quot;' />
                <semantic-value key='&quot;Hilton Head&quot;' value='&quot;Hilton Head Island&quot;' />
                <semantic-value key='&quot;Iron Mountain/Kingsfd&quot;' value='&quot;Iron Mountain&quot;' />
                <semantic-value key='&quot;Ithaca/Cortland&quot;' value='&quot;Ithaca&quot;' />
                <semantic-value key='&quot;Jackson/Vicksburg&quot;' value='&quot;Jackson&quot;' />
                <semantic-value key='&quot;Jacksonville/Camp Lejeune&quot;' value='&quot;Jacksonville&quot;' />
                <semantic-value key='&quot;Kona&quot;' value='&quot;Konawa&quot;' />
                <semantic-value key='&quot;Lawton/Fort Sill&quot;' value='&quot;Lawton&quot;' />
                <semantic-value key='&quot;Manhattan/Ft. Riley&quot;' value='&quot;Manhattan&quot;' />
                <semantic-value key='&quot;Martha&apos;s Vineyard&quot;' value='&quot;Martha&quot;' />
                <semantic-value key='&quot;Midland/Odessa&quot;' value='&quot;Midland&quot;' />
                <semantic-value key='&quot;Mission/McAllen/Edinburg&quot;' value='&quot;Mission&quot;' />
                <semantic-value key='&quot;Montrose/Delta&quot;' value='&quot;Montrose&quot;' />
                <semantic-value key='&quot;New Bern/Morehead/Beaufort&quot;' value='&quot;Beaufort&quot;' />
                <semantic-value key='&quot;Newburgh/Poughkeepsie&quot;' value='&quot;Newburgh&quot;' />
                <semantic-value key='&quot;Newport News/Williamsburg&quot;' value='&quot;Newport News&quot;' />
                <semantic-value key='&quot;North Bend/Coos Bay&quot;' value='&quot;North Bend&quot;' />
                <semantic-value key='&quot;Pago Pago&quot;' value='&quot;Pagosa Springs&quot;' />
                <semantic-value key='&quot;Pasco/Kennewick/Richland&quot;' value='&quot;Pasco&quot;' />
                <semantic-value key='&quot;Raleigh/Durham&quot;' value='&quot;Raleigh&quot;' />
                <semantic-value key='&quot;Riverton/Lander&quot;' value='&quot;Riverton&quot;' />
                <semantic-value key='&quot;Saginaw/Bay City/Midland&quot;' value='&quot;Saginaw&quot;' />
                <semantic-value key='&quot;Sarasota/Bradenton&quot;' value='&quot;Saratoga&quot;' />
                <semantic-value key='&quot;Scranton/Wilkes-Barre&quot;' value='&quot;Scranton&quot;' />
                <semantic-value key='&quot;Sun Valley/Hailey/Ketchum&quot;' value='&quot;Sun Valley&quot;' />
                <semantic-value key='&quot;West Palm Beach/Palm Beach&quot;' value='&quot;West Palm Beach&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[flight_date]' derivation='Year' name='[yr:flight_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:arrival_delay:qk]' included-values='in-range-or-null'>
            <min>2.2250738585072014e-308</min>
          </filter>
          <slices>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</column>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:arrival_delay:qk]</column>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:arrival_delay:qk]' />
              <text column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:airline_code:nk]' />
              <color column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:airline_code:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F8867708-293B-4F95-90A4-41F9DCC1C59D}' />
    </worksheet>
    <worksheet name='Feuille 9'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Delay du to Security&#10; </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights_clean' name='federated.0ry08tp0iokk6n10wilm30p9jspj' />
          </datasources>
          <datasource-dependencies datasource='federated.0ry08tp0iokk6n10wilm30p9jspj'>
            <column-instance column='[delay_due_to_security]' derivation='Avg' name='[avg:delay_due_to_security:qk]' pivot='key' type='quantitative' />
            <column caption='Delay Due To Security' datatype='integer' name='[delay_due_to_security]' role='measure' type='quantitative' />
            <column caption='Departure Time' datatype='datetime' name='[departure_time]' role='dimension' type='ordinal' />
            <column caption='Flight Date' datatype='date' name='[flight_date]' role='dimension' type='ordinal' />
            <column-instance column='[departure_time]' derivation='Hour' name='[hr:departure_time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[origin_city]' derivation='None' name='[none:origin_city:nk]' pivot='key' type='nominal' />
            <column caption='Origin City' datatype='string' name='[origin_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Adak Island&quot;' value='&quot;Adak&quot;' />
                <semantic-value key='&quot;Allentown/Bethlehem/Easton&quot;' value='&quot;Allentown&quot;' />
                <semantic-value key='&quot;Arcata/Eureka&quot;' value='&quot;Arcata&quot;' />
                <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
                <semantic-value key='&quot;Bend/Redmond&quot;' value='&quot;Bend&quot;' />
                <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
                <semantic-value key='&quot;Bloomington/Normal&quot;' value='&quot;Bloomington&quot;' />
                <semantic-value key='&quot;Bristol/Johnson City/Kingsport&quot;' value='&quot;Bristol&quot;' />
                <semantic-value key='&quot;Cedar Rapids/Iowa City&quot;' value='&quot;Cedar Rapids&quot;' />
                <semantic-value key='&quot;Champaign/Urbana&quot;' value='&quot;Champaign&quot;' />
                <semantic-value key='&quot;Charleston/Dunbar&quot;' value='&quot;Charleston&quot;' />
                <semantic-value key='&quot;Clarksburg/Fairmont&quot;' value='&quot;Clarksburg&quot;' />
                <semantic-value key='&quot;College Station/Bryan&quot;' value='&quot;College Station&quot;' />
                <semantic-value key='&quot;CONCORD, NC&quot;' value='&quot;Concord&quot;' />
                <semantic-value key='&quot;Elmira/Corning&quot;' value='&quot;Elmira&quot;' />
                <semantic-value key='&quot;Greensboro/High Point&quot;' value='&quot;Greensboro&quot;' />
                <semantic-value key='&quot;Gulfport/Biloxi&quot;' value='&quot;Gulfport&quot;' />
                <semantic-value key='&quot;Hancock/Houghton&quot;' value='&quot;Hancock&quot;' />
                <semantic-value key='&quot;Harlingen/San Benito&quot;' value='&quot;Harlingen&quot;' />
                <semantic-value key='&quot;Hattiesburg/Laurel&quot;' value='&quot;Hattiesburg&quot;' />
                <semantic-value key='&quot;Hilton Head&quot;' value='&quot;Hilton Head Island&quot;' />
                <semantic-value key='&quot;Iron Mountain/Kingsfd&quot;' value='&quot;Iron Mountain&quot;' />
                <semantic-value key='&quot;Ithaca/Cortland&quot;' value='&quot;Ithaca&quot;' />
                <semantic-value key='&quot;Jackson/Vicksburg&quot;' value='&quot;Jackson&quot;' />
                <semantic-value key='&quot;Jacksonville/Camp Lejeune&quot;' value='&quot;Jacksonville&quot;' />
                <semantic-value key='&quot;Kona&quot;' value='&quot;Konawa&quot;' />
                <semantic-value key='&quot;Lawton/Fort Sill&quot;' value='&quot;Lawton&quot;' />
                <semantic-value key='&quot;Manhattan/Ft. Riley&quot;' value='&quot;Manhattan&quot;' />
                <semantic-value key='&quot;Martha&apos;s Vineyard&quot;' value='&quot;Martha&quot;' />
                <semantic-value key='&quot;Midland/Odessa&quot;' value='&quot;Midland&quot;' />
                <semantic-value key='&quot;Mission/McAllen/Edinburg&quot;' value='&quot;Mission&quot;' />
                <semantic-value key='&quot;Montrose/Delta&quot;' value='&quot;Montrose&quot;' />
                <semantic-value key='&quot;New Bern/Morehead/Beaufort&quot;' value='&quot;Beaufort&quot;' />
                <semantic-value key='&quot;Newburgh/Poughkeepsie&quot;' value='&quot;Newburgh&quot;' />
                <semantic-value key='&quot;Newport News/Williamsburg&quot;' value='&quot;Newport News&quot;' />
                <semantic-value key='&quot;North Bend/Coos Bay&quot;' value='&quot;North Bend&quot;' />
                <semantic-value key='&quot;Pago Pago&quot;' value='&quot;Pagosa Springs&quot;' />
                <semantic-value key='&quot;Pasco/Kennewick/Richland&quot;' value='&quot;Pasco&quot;' />
                <semantic-value key='&quot;Raleigh/Durham&quot;' value='&quot;Raleigh&quot;' />
                <semantic-value key='&quot;Riverton/Lander&quot;' value='&quot;Riverton&quot;' />
                <semantic-value key='&quot;Saginaw/Bay City/Midland&quot;' value='&quot;Saginaw&quot;' />
                <semantic-value key='&quot;Sarasota/Bradenton&quot;' value='&quot;Saratoga&quot;' />
                <semantic-value key='&quot;Scranton/Wilkes-Barre&quot;' value='&quot;Scranton&quot;' />
                <semantic-value key='&quot;Sun Valley/Hailey/Ketchum&quot;' value='&quot;Sun Valley&quot;' />
                <semantic-value key='&quot;West Palm Beach/Palm Beach&quot;' value='&quot;West Palm Beach&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[flight_date]' derivation='Year' name='[yr:flight_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</column>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_security:qk]' palette='red_blue_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_security:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_security:qk]</rows>
        <cols>[federated.0ry08tp0iokk6n10wilm30p9jspj].[hr:departure_time:ok]</cols>
      </table>
      <simple-id uuid='{5D710092-D871-48DE-BDA6-04240F71F7ED}' />
    </worksheet>
    <worksheet name='barres'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Flights canceled by day - &lt;</run>
            <run>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</run>
            <run>&gt; in &lt;</run>
            <run>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights_clean' name='federated.0ry08tp0iokk6n10wilm30p9jspj' />
          </datasources>
          <datasource-dependencies datasource='federated.0ry08tp0iokk6n10wilm30p9jspj'>
            <_.fcp.ObjectModelTableType.false...column caption='vols.csv' datatype='integer' name='[__tableau_internal_object_id__].[vols.csv_ED571202EE2D4E33B815CB4616031E72]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[vols.csv_ED571202EE2D4E33B815CB4616031E72]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='vols.csv' datatype='table' name='[__tableau_internal_object_id__].[vols.csv_ED571202EE2D4E33B815CB4616031E72]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[flight_date]' role='dimension' type='ordinal' />
            <column-instance column='[scheduled_departure_time]' derivation='Hour' name='[hr:scheduled_departure_time:ok]' pivot='key' type='ordinal' />
            <column caption='Is Cancelled' datatype='boolean' name='[is_cancelled]' role='dimension' type='nominal' />
            <column-instance column='[is_cancelled]' derivation='None' name='[none:is_cancelled:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin_city]' derivation='None' name='[none:origin_city:nk]' pivot='key' type='nominal' />
            <column caption='Origin City' datatype='string' name='[origin_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Adak Island&quot;' value='&quot;Adak&quot;' />
                <semantic-value key='&quot;Allentown/Bethlehem/Easton&quot;' value='&quot;Allentown&quot;' />
                <semantic-value key='&quot;Arcata/Eureka&quot;' value='&quot;Arcata&quot;' />
                <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
                <semantic-value key='&quot;Bend/Redmond&quot;' value='&quot;Bend&quot;' />
                <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
                <semantic-value key='&quot;Bloomington/Normal&quot;' value='&quot;Bloomington&quot;' />
                <semantic-value key='&quot;Bristol/Johnson City/Kingsport&quot;' value='&quot;Bristol&quot;' />
                <semantic-value key='&quot;Cedar Rapids/Iowa City&quot;' value='&quot;Cedar Rapids&quot;' />
                <semantic-value key='&quot;Champaign/Urbana&quot;' value='&quot;Champaign&quot;' />
                <semantic-value key='&quot;Charleston/Dunbar&quot;' value='&quot;Charleston&quot;' />
                <semantic-value key='&quot;Clarksburg/Fairmont&quot;' value='&quot;Clarksburg&quot;' />
                <semantic-value key='&quot;College Station/Bryan&quot;' value='&quot;College Station&quot;' />
                <semantic-value key='&quot;CONCORD, NC&quot;' value='&quot;Concord&quot;' />
                <semantic-value key='&quot;Elmira/Corning&quot;' value='&quot;Elmira&quot;' />
                <semantic-value key='&quot;Greensboro/High Point&quot;' value='&quot;Greensboro&quot;' />
                <semantic-value key='&quot;Gulfport/Biloxi&quot;' value='&quot;Gulfport&quot;' />
                <semantic-value key='&quot;Hancock/Houghton&quot;' value='&quot;Hancock&quot;' />
                <semantic-value key='&quot;Harlingen/San Benito&quot;' value='&quot;Harlingen&quot;' />
                <semantic-value key='&quot;Hattiesburg/Laurel&quot;' value='&quot;Hattiesburg&quot;' />
                <semantic-value key='&quot;Hilton Head&quot;' value='&quot;Hilton Head Island&quot;' />
                <semantic-value key='&quot;Iron Mountain/Kingsfd&quot;' value='&quot;Iron Mountain&quot;' />
                <semantic-value key='&quot;Ithaca/Cortland&quot;' value='&quot;Ithaca&quot;' />
                <semantic-value key='&quot;Jackson/Vicksburg&quot;' value='&quot;Jackson&quot;' />
                <semantic-value key='&quot;Jacksonville/Camp Lejeune&quot;' value='&quot;Jacksonville&quot;' />
                <semantic-value key='&quot;Kona&quot;' value='&quot;Konawa&quot;' />
                <semantic-value key='&quot;Lawton/Fort Sill&quot;' value='&quot;Lawton&quot;' />
                <semantic-value key='&quot;Manhattan/Ft. Riley&quot;' value='&quot;Manhattan&quot;' />
                <semantic-value key='&quot;Martha&apos;s Vineyard&quot;' value='&quot;Martha&quot;' />
                <semantic-value key='&quot;Midland/Odessa&quot;' value='&quot;Midland&quot;' />
                <semantic-value key='&quot;Mission/McAllen/Edinburg&quot;' value='&quot;Mission&quot;' />
                <semantic-value key='&quot;Montrose/Delta&quot;' value='&quot;Montrose&quot;' />
                <semantic-value key='&quot;New Bern/Morehead/Beaufort&quot;' value='&quot;Beaufort&quot;' />
                <semantic-value key='&quot;Newburgh/Poughkeepsie&quot;' value='&quot;Newburgh&quot;' />
                <semantic-value key='&quot;Newport News/Williamsburg&quot;' value='&quot;Newport News&quot;' />
                <semantic-value key='&quot;North Bend/Coos Bay&quot;' value='&quot;North Bend&quot;' />
                <semantic-value key='&quot;Pago Pago&quot;' value='&quot;Pagosa Springs&quot;' />
                <semantic-value key='&quot;Pasco/Kennewick/Richland&quot;' value='&quot;Pasco&quot;' />
                <semantic-value key='&quot;Raleigh/Durham&quot;' value='&quot;Raleigh&quot;' />
                <semantic-value key='&quot;Riverton/Lander&quot;' value='&quot;Riverton&quot;' />
                <semantic-value key='&quot;Saginaw/Bay City/Midland&quot;' value='&quot;Saginaw&quot;' />
                <semantic-value key='&quot;Sarasota/Bradenton&quot;' value='&quot;Saratoga&quot;' />
                <semantic-value key='&quot;Scranton/Wilkes-Barre&quot;' value='&quot;Scranton&quot;' />
                <semantic-value key='&quot;Sun Valley/Hailey/Ketchum&quot;' value='&quot;Sun Valley&quot;' />
                <semantic-value key='&quot;West Palm Beach/Palm Beach&quot;' value='&quot;West Palm Beach&quot;' />
              </semantic-values>
            </column>
            <column caption='Scheduled Departure Time' datatype='datetime' name='[scheduled_departure_time]' role='dimension' type='ordinal' />
            <column-instance column='[flight_date]' derivation='Year' name='[yr:flight_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:is_cancelled:nk]'>
            <groupfilter function='member' level='[none:is_cancelled:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</column>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:is_cancelled:nk]</column>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#c7ffea' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c7ffea' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]</rows>
        <cols>[federated.0ry08tp0iokk6n10wilm30p9jspj].[hr:scheduled_departure_time:ok]</cols>
      </table>
      <simple-id uuid='{3788E15D-57E5-44A0-9109-E6358B28A5E1}' />
    </worksheet>
    <worksheet name='delay/miles'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[Arrival Delay by distance (Miles) - <]]></run>
            <run>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights_clean' name='federated.0ry08tp0iokk6n10wilm30p9jspj' />
          </datasources>
          <datasource-dependencies datasource='federated.0ry08tp0iokk6n10wilm30p9jspj'>
            <column caption='Arrival Delay' datatype='integer' name='[arrival_delay]' role='measure' type='quantitative' />
            <column-instance column='[arrival_delay]' derivation='Avg' name='[avg:arrival_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Distance In Miles' datatype='integer' name='[distance_in_miles]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[flight_date]' role='dimension' type='ordinal' />
            <column-instance column='[distance_in_miles]' derivation='None' name='[none:distance_in_miles:qk]' pivot='key' type='quantitative' />
            <column-instance column='[origin_city]' derivation='None' name='[none:origin_city:nk]' pivot='key' type='nominal' />
            <column caption='Origin City' datatype='string' name='[origin_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Adak Island&quot;' value='&quot;Adak&quot;' />
                <semantic-value key='&quot;Allentown/Bethlehem/Easton&quot;' value='&quot;Allentown&quot;' />
                <semantic-value key='&quot;Arcata/Eureka&quot;' value='&quot;Arcata&quot;' />
                <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
                <semantic-value key='&quot;Bend/Redmond&quot;' value='&quot;Bend&quot;' />
                <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
                <semantic-value key='&quot;Bloomington/Normal&quot;' value='&quot;Bloomington&quot;' />
                <semantic-value key='&quot;Bristol/Johnson City/Kingsport&quot;' value='&quot;Bristol&quot;' />
                <semantic-value key='&quot;Cedar Rapids/Iowa City&quot;' value='&quot;Cedar Rapids&quot;' />
                <semantic-value key='&quot;Champaign/Urbana&quot;' value='&quot;Champaign&quot;' />
                <semantic-value key='&quot;Charleston/Dunbar&quot;' value='&quot;Charleston&quot;' />
                <semantic-value key='&quot;Clarksburg/Fairmont&quot;' value='&quot;Clarksburg&quot;' />
                <semantic-value key='&quot;College Station/Bryan&quot;' value='&quot;College Station&quot;' />
                <semantic-value key='&quot;CONCORD, NC&quot;' value='&quot;Concord&quot;' />
                <semantic-value key='&quot;Elmira/Corning&quot;' value='&quot;Elmira&quot;' />
                <semantic-value key='&quot;Greensboro/High Point&quot;' value='&quot;Greensboro&quot;' />
                <semantic-value key='&quot;Gulfport/Biloxi&quot;' value='&quot;Gulfport&quot;' />
                <semantic-value key='&quot;Hancock/Houghton&quot;' value='&quot;Hancock&quot;' />
                <semantic-value key='&quot;Harlingen/San Benito&quot;' value='&quot;Harlingen&quot;' />
                <semantic-value key='&quot;Hattiesburg/Laurel&quot;' value='&quot;Hattiesburg&quot;' />
                <semantic-value key='&quot;Hilton Head&quot;' value='&quot;Hilton Head Island&quot;' />
                <semantic-value key='&quot;Iron Mountain/Kingsfd&quot;' value='&quot;Iron Mountain&quot;' />
                <semantic-value key='&quot;Ithaca/Cortland&quot;' value='&quot;Ithaca&quot;' />
                <semantic-value key='&quot;Jackson/Vicksburg&quot;' value='&quot;Jackson&quot;' />
                <semantic-value key='&quot;Jacksonville/Camp Lejeune&quot;' value='&quot;Jacksonville&quot;' />
                <semantic-value key='&quot;Kona&quot;' value='&quot;Konawa&quot;' />
                <semantic-value key='&quot;Lawton/Fort Sill&quot;' value='&quot;Lawton&quot;' />
                <semantic-value key='&quot;Manhattan/Ft. Riley&quot;' value='&quot;Manhattan&quot;' />
                <semantic-value key='&quot;Martha&apos;s Vineyard&quot;' value='&quot;Martha&quot;' />
                <semantic-value key='&quot;Midland/Odessa&quot;' value='&quot;Midland&quot;' />
                <semantic-value key='&quot;Mission/McAllen/Edinburg&quot;' value='&quot;Mission&quot;' />
                <semantic-value key='&quot;Montrose/Delta&quot;' value='&quot;Montrose&quot;' />
                <semantic-value key='&quot;New Bern/Morehead/Beaufort&quot;' value='&quot;Beaufort&quot;' />
                <semantic-value key='&quot;Newburgh/Poughkeepsie&quot;' value='&quot;Newburgh&quot;' />
                <semantic-value key='&quot;Newport News/Williamsburg&quot;' value='&quot;Newport News&quot;' />
                <semantic-value key='&quot;North Bend/Coos Bay&quot;' value='&quot;North Bend&quot;' />
                <semantic-value key='&quot;Pago Pago&quot;' value='&quot;Pagosa Springs&quot;' />
                <semantic-value key='&quot;Pasco/Kennewick/Richland&quot;' value='&quot;Pasco&quot;' />
                <semantic-value key='&quot;Raleigh/Durham&quot;' value='&quot;Raleigh&quot;' />
                <semantic-value key='&quot;Riverton/Lander&quot;' value='&quot;Riverton&quot;' />
                <semantic-value key='&quot;Saginaw/Bay City/Midland&quot;' value='&quot;Saginaw&quot;' />
                <semantic-value key='&quot;Sarasota/Bradenton&quot;' value='&quot;Saratoga&quot;' />
                <semantic-value key='&quot;Scranton/Wilkes-Barre&quot;' value='&quot;Scranton&quot;' />
                <semantic-value key='&quot;Sun Valley/Hailey/Ketchum&quot;' value='&quot;Sun Valley&quot;' />
                <semantic-value key='&quot;West Palm Beach/Palm Beach&quot;' value='&quot;West Palm Beach&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[flight_date]' derivation='Year' name='[yr:flight_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</column>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:arrival_delay:qk]' palette='red_blue_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:arrival_delay:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:arrival_delay:qk]</rows>
        <cols>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:distance_in_miles:qk]</cols>
      </table>
      <simple-id uuid='{43F9642A-3F31-4A61-8B13-64341B40FED9}' />
    </worksheet>
    <worksheet name='map cancel'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[Flights cancelled by airport - <]]></run>
            <run>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</run>
            <run>&gt;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights_clean' name='federated.0ry08tp0iokk6n10wilm30p9jspj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ry08tp0iokk6n10wilm30p9jspj'>
            <_.fcp.ObjectModelTableType.false...column caption='vols.csv' datatype='integer' name='[__tableau_internal_object_id__].[vols.csv_ED571202EE2D4E33B815CB4616031E72]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[vols.csv_ED571202EE2D4E33B815CB4616031E72]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='vols.csv' datatype='table' name='[__tableau_internal_object_id__].[vols.csv_ED571202EE2D4E33B815CB4616031E72]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[flight_date]' role='dimension' type='ordinal' />
            <column caption='Is Cancelled' datatype='boolean' name='[is_cancelled]' role='dimension' type='nominal' />
            <column-instance column='[is_cancelled]' derivation='None' name='[none:is_cancelled:nk]' pivot='key' type='nominal' />
            <column-instance column='[origin_city]' derivation='None' name='[none:origin_city:nk]' pivot='key' type='nominal' />
            <column caption='Origin City' datatype='string' name='[origin_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Adak Island&quot;' value='&quot;Adak&quot;' />
                <semantic-value key='&quot;Allentown/Bethlehem/Easton&quot;' value='&quot;Allentown&quot;' />
                <semantic-value key='&quot;Arcata/Eureka&quot;' value='&quot;Arcata&quot;' />
                <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
                <semantic-value key='&quot;Bend/Redmond&quot;' value='&quot;Bend&quot;' />
                <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
                <semantic-value key='&quot;Bloomington/Normal&quot;' value='&quot;Bloomington&quot;' />
                <semantic-value key='&quot;Bristol/Johnson City/Kingsport&quot;' value='&quot;Bristol&quot;' />
                <semantic-value key='&quot;Cedar Rapids/Iowa City&quot;' value='&quot;Cedar Rapids&quot;' />
                <semantic-value key='&quot;Champaign/Urbana&quot;' value='&quot;Champaign&quot;' />
                <semantic-value key='&quot;Charleston/Dunbar&quot;' value='&quot;Charleston&quot;' />
                <semantic-value key='&quot;Clarksburg/Fairmont&quot;' value='&quot;Clarksburg&quot;' />
                <semantic-value key='&quot;College Station/Bryan&quot;' value='&quot;College Station&quot;' />
                <semantic-value key='&quot;CONCORD, NC&quot;' value='&quot;Concord&quot;' />
                <semantic-value key='&quot;Elmira/Corning&quot;' value='&quot;Elmira&quot;' />
                <semantic-value key='&quot;Greensboro/High Point&quot;' value='&quot;Greensboro&quot;' />
                <semantic-value key='&quot;Gulfport/Biloxi&quot;' value='&quot;Gulfport&quot;' />
                <semantic-value key='&quot;Hancock/Houghton&quot;' value='&quot;Hancock&quot;' />
                <semantic-value key='&quot;Harlingen/San Benito&quot;' value='&quot;Harlingen&quot;' />
                <semantic-value key='&quot;Hattiesburg/Laurel&quot;' value='&quot;Hattiesburg&quot;' />
                <semantic-value key='&quot;Hilton Head&quot;' value='&quot;Hilton Head Island&quot;' />
                <semantic-value key='&quot;Iron Mountain/Kingsfd&quot;' value='&quot;Iron Mountain&quot;' />
                <semantic-value key='&quot;Ithaca/Cortland&quot;' value='&quot;Ithaca&quot;' />
                <semantic-value key='&quot;Jackson/Vicksburg&quot;' value='&quot;Jackson&quot;' />
                <semantic-value key='&quot;Jacksonville/Camp Lejeune&quot;' value='&quot;Jacksonville&quot;' />
                <semantic-value key='&quot;Kona&quot;' value='&quot;Konawa&quot;' />
                <semantic-value key='&quot;Lawton/Fort Sill&quot;' value='&quot;Lawton&quot;' />
                <semantic-value key='&quot;Manhattan/Ft. Riley&quot;' value='&quot;Manhattan&quot;' />
                <semantic-value key='&quot;Martha&apos;s Vineyard&quot;' value='&quot;Martha&quot;' />
                <semantic-value key='&quot;Midland/Odessa&quot;' value='&quot;Midland&quot;' />
                <semantic-value key='&quot;Mission/McAllen/Edinburg&quot;' value='&quot;Mission&quot;' />
                <semantic-value key='&quot;Montrose/Delta&quot;' value='&quot;Montrose&quot;' />
                <semantic-value key='&quot;New Bern/Morehead/Beaufort&quot;' value='&quot;Beaufort&quot;' />
                <semantic-value key='&quot;Newburgh/Poughkeepsie&quot;' value='&quot;Newburgh&quot;' />
                <semantic-value key='&quot;Newport News/Williamsburg&quot;' value='&quot;Newport News&quot;' />
                <semantic-value key='&quot;North Bend/Coos Bay&quot;' value='&quot;North Bend&quot;' />
                <semantic-value key='&quot;Pago Pago&quot;' value='&quot;Pagosa Springs&quot;' />
                <semantic-value key='&quot;Pasco/Kennewick/Richland&quot;' value='&quot;Pasco&quot;' />
                <semantic-value key='&quot;Raleigh/Durham&quot;' value='&quot;Raleigh&quot;' />
                <semantic-value key='&quot;Riverton/Lander&quot;' value='&quot;Riverton&quot;' />
                <semantic-value key='&quot;Saginaw/Bay City/Midland&quot;' value='&quot;Saginaw&quot;' />
                <semantic-value key='&quot;Sarasota/Bradenton&quot;' value='&quot;Saratoga&quot;' />
                <semantic-value key='&quot;Scranton/Wilkes-Barre&quot;' value='&quot;Scranton&quot;' />
                <semantic-value key='&quot;Sun Valley/Hailey/Ketchum&quot;' value='&quot;Sun Valley&quot;' />
                <semantic-value key='&quot;West Palm Beach/Palm Beach&quot;' value='&quot;West Palm Beach&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[flight_date]' derivation='Year' name='[yr:flight_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:is_cancelled:nk]'>
            <groupfilter function='member' level='[none:is_cancelled:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</column>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:is_cancelled:nk]</column>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[Longitude (generated)]' field-type='quantitative' max='-5303508.9252838325' min='-14206819.598911611' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[Latitude (generated)]' field-type='quantitative' max='9086262.9882488847' min='1277791.2333234753' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#19c5df' />
            <format attr='background-color' value='#19c5df' />
            <format attr='band-color' scope='cols' value='#19c5df' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#c7ffea' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='150' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' palette='red_blue_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#19c5df' />
            <format attr='background-color' value='#19c5df' />
            <format attr='background-color' data-class='subtotal' value='#19c5df' />
            <format attr='band-color' scope='cols' value='#19c5df' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#19c5df' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' value='# Canceled flights&#10;' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]' />
              <color column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ry08tp0iokk6n10wilm30p9jspj].[Latitude (generated)]</rows>
        <cols>[federated.0ry08tp0iokk6n10wilm30p9jspj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{51BA64D2-4A85-41E1-A2F7-3E7EB5DC47C8}' />
    </worksheet>
    <worksheet name='map delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Flights delay by airport - &lt;</run>
            <run>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</run>
            <run>&gt;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights_clean' name='federated.0ry08tp0iokk6n10wilm30p9jspj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ry08tp0iokk6n10wilm30p9jspj'>
            <column caption='Arrival Delay' datatype='integer' name='[arrival_delay]' role='measure' type='quantitative' />
            <column-instance column='[arrival_delay]' derivation='Avg' name='[avg:arrival_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[flight_date]' role='dimension' type='ordinal' />
            <column-instance column='[origin_city]' derivation='None' name='[none:origin_city:nk]' pivot='key' type='nominal' />
            <column caption='Origin City' datatype='string' name='[origin_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Adak Island&quot;' value='&quot;Adak&quot;' />
                <semantic-value key='&quot;Allentown/Bethlehem/Easton&quot;' value='&quot;Allentown&quot;' />
                <semantic-value key='&quot;Arcata/Eureka&quot;' value='&quot;Arcata&quot;' />
                <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
                <semantic-value key='&quot;Bend/Redmond&quot;' value='&quot;Bend&quot;' />
                <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
                <semantic-value key='&quot;Bloomington/Normal&quot;' value='&quot;Bloomington&quot;' />
                <semantic-value key='&quot;Bristol/Johnson City/Kingsport&quot;' value='&quot;Bristol&quot;' />
                <semantic-value key='&quot;Cedar Rapids/Iowa City&quot;' value='&quot;Cedar Rapids&quot;' />
                <semantic-value key='&quot;Champaign/Urbana&quot;' value='&quot;Champaign&quot;' />
                <semantic-value key='&quot;Charleston/Dunbar&quot;' value='&quot;Charleston&quot;' />
                <semantic-value key='&quot;Clarksburg/Fairmont&quot;' value='&quot;Clarksburg&quot;' />
                <semantic-value key='&quot;College Station/Bryan&quot;' value='&quot;College Station&quot;' />
                <semantic-value key='&quot;CONCORD, NC&quot;' value='&quot;Concord&quot;' />
                <semantic-value key='&quot;Elmira/Corning&quot;' value='&quot;Elmira&quot;' />
                <semantic-value key='&quot;Greensboro/High Point&quot;' value='&quot;Greensboro&quot;' />
                <semantic-value key='&quot;Gulfport/Biloxi&quot;' value='&quot;Gulfport&quot;' />
                <semantic-value key='&quot;Hancock/Houghton&quot;' value='&quot;Hancock&quot;' />
                <semantic-value key='&quot;Harlingen/San Benito&quot;' value='&quot;Harlingen&quot;' />
                <semantic-value key='&quot;Hattiesburg/Laurel&quot;' value='&quot;Hattiesburg&quot;' />
                <semantic-value key='&quot;Hilton Head&quot;' value='&quot;Hilton Head Island&quot;' />
                <semantic-value key='&quot;Iron Mountain/Kingsfd&quot;' value='&quot;Iron Mountain&quot;' />
                <semantic-value key='&quot;Ithaca/Cortland&quot;' value='&quot;Ithaca&quot;' />
                <semantic-value key='&quot;Jackson/Vicksburg&quot;' value='&quot;Jackson&quot;' />
                <semantic-value key='&quot;Jacksonville/Camp Lejeune&quot;' value='&quot;Jacksonville&quot;' />
                <semantic-value key='&quot;Kona&quot;' value='&quot;Konawa&quot;' />
                <semantic-value key='&quot;Lawton/Fort Sill&quot;' value='&quot;Lawton&quot;' />
                <semantic-value key='&quot;Manhattan/Ft. Riley&quot;' value='&quot;Manhattan&quot;' />
                <semantic-value key='&quot;Martha&apos;s Vineyard&quot;' value='&quot;Martha&quot;' />
                <semantic-value key='&quot;Midland/Odessa&quot;' value='&quot;Midland&quot;' />
                <semantic-value key='&quot;Mission/McAllen/Edinburg&quot;' value='&quot;Mission&quot;' />
                <semantic-value key='&quot;Montrose/Delta&quot;' value='&quot;Montrose&quot;' />
                <semantic-value key='&quot;New Bern/Morehead/Beaufort&quot;' value='&quot;Beaufort&quot;' />
                <semantic-value key='&quot;Newburgh/Poughkeepsie&quot;' value='&quot;Newburgh&quot;' />
                <semantic-value key='&quot;Newport News/Williamsburg&quot;' value='&quot;Newport News&quot;' />
                <semantic-value key='&quot;North Bend/Coos Bay&quot;' value='&quot;North Bend&quot;' />
                <semantic-value key='&quot;Pago Pago&quot;' value='&quot;Pagosa Springs&quot;' />
                <semantic-value key='&quot;Pasco/Kennewick/Richland&quot;' value='&quot;Pasco&quot;' />
                <semantic-value key='&quot;Raleigh/Durham&quot;' value='&quot;Raleigh&quot;' />
                <semantic-value key='&quot;Riverton/Lander&quot;' value='&quot;Riverton&quot;' />
                <semantic-value key='&quot;Saginaw/Bay City/Midland&quot;' value='&quot;Saginaw&quot;' />
                <semantic-value key='&quot;Sarasota/Bradenton&quot;' value='&quot;Saratoga&quot;' />
                <semantic-value key='&quot;Scranton/Wilkes-Barre&quot;' value='&quot;Scranton&quot;' />
                <semantic-value key='&quot;Sun Valley/Hailey/Ketchum&quot;' value='&quot;Sun Valley&quot;' />
                <semantic-value key='&quot;West Palm Beach/Palm Beach&quot;' value='&quot;West Palm Beach&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[flight_date]' derivation='Year' name='[yr:flight_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</column>
            <column>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[Longitude (generated)]' field-type='quantitative' max='8301010.0541897826' min='-23946855.993210997' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[Latitude (generated)]' field-type='quantitative' max='38518604.476137519' min='-18228247.968722094' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#19c5df' />
            <format attr='background-color' value='#19c5df' />
            <format attr='band-color' scope='cols' value='#19c5df' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#c7ffea' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:arrival_delay:qk]' palette='red_blue_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#19c5df' />
            <format attr='background-color' value='#19c5df' />
            <format attr='background-color' data-class='subtotal' value='#19c5df' />
            <format attr='band-color' scope='cols' value='#19c5df' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='0' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]' />
              <color column='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:arrival_delay:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ry08tp0iokk6n10wilm30p9jspj].[Latitude (generated)]</rows>
        <cols>[federated.0ry08tp0iokk6n10wilm30p9jspj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{03936232-3F99-478F-9A0B-F05BAFD99692}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Tableau de bord 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='inherit' fontsize='26'>Canceled Flights 2019 - 2023 USA</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ebff' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='text-align' value='center' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='5' />
          <format attr='border-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#d4d4d4' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='text-align' value='center' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='background-color' value='#c7ffea' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='text-align' value='auto' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1500' minheight='800' minwidth='1500' sizing-mode='fixed' />
      <datasources>
        <datasource caption='flights_clean' name='federated.0ry08tp0iokk6n10wilm30p9jspj' />
      </datasources>
      <datasource-dependencies datasource='federated.0ry08tp0iokk6n10wilm30p9jspj'>
        <column caption='Flight Date' datatype='date' name='[flight_date]' role='dimension' type='ordinal' />
        <column-instance column='[origin_city]' derivation='None' name='[none:origin_city:nk]' pivot='key' type='nominal' />
        <column caption='Origin City' datatype='string' name='[origin_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
          <semantic-values semantic-role='[City].[Name]'>
            <semantic-value key='&quot;Adak Island&quot;' value='&quot;Adak&quot;' />
            <semantic-value key='&quot;Allentown/Bethlehem/Easton&quot;' value='&quot;Allentown&quot;' />
            <semantic-value key='&quot;Arcata/Eureka&quot;' value='&quot;Arcata&quot;' />
            <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
            <semantic-value key='&quot;Bend/Redmond&quot;' value='&quot;Bend&quot;' />
            <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
            <semantic-value key='&quot;Bloomington/Normal&quot;' value='&quot;Bloomington&quot;' />
            <semantic-value key='&quot;Bristol/Johnson City/Kingsport&quot;' value='&quot;Bristol&quot;' />
            <semantic-value key='&quot;Cedar Rapids/Iowa City&quot;' value='&quot;Cedar Rapids&quot;' />
            <semantic-value key='&quot;Champaign/Urbana&quot;' value='&quot;Champaign&quot;' />
            <semantic-value key='&quot;Charleston/Dunbar&quot;' value='&quot;Charleston&quot;' />
            <semantic-value key='&quot;Clarksburg/Fairmont&quot;' value='&quot;Clarksburg&quot;' />
            <semantic-value key='&quot;College Station/Bryan&quot;' value='&quot;College Station&quot;' />
            <semantic-value key='&quot;CONCORD, NC&quot;' value='&quot;Concord&quot;' />
            <semantic-value key='&quot;Elmira/Corning&quot;' value='&quot;Elmira&quot;' />
            <semantic-value key='&quot;Greensboro/High Point&quot;' value='&quot;Greensboro&quot;' />
            <semantic-value key='&quot;Gulfport/Biloxi&quot;' value='&quot;Gulfport&quot;' />
            <semantic-value key='&quot;Hancock/Houghton&quot;' value='&quot;Hancock&quot;' />
            <semantic-value key='&quot;Harlingen/San Benito&quot;' value='&quot;Harlingen&quot;' />
            <semantic-value key='&quot;Hattiesburg/Laurel&quot;' value='&quot;Hattiesburg&quot;' />
            <semantic-value key='&quot;Hilton Head&quot;' value='&quot;Hilton Head Island&quot;' />
            <semantic-value key='&quot;Iron Mountain/Kingsfd&quot;' value='&quot;Iron Mountain&quot;' />
            <semantic-value key='&quot;Ithaca/Cortland&quot;' value='&quot;Ithaca&quot;' />
            <semantic-value key='&quot;Jackson/Vicksburg&quot;' value='&quot;Jackson&quot;' />
            <semantic-value key='&quot;Jacksonville/Camp Lejeune&quot;' value='&quot;Jacksonville&quot;' />
            <semantic-value key='&quot;Kona&quot;' value='&quot;Konawa&quot;' />
            <semantic-value key='&quot;Lawton/Fort Sill&quot;' value='&quot;Lawton&quot;' />
            <semantic-value key='&quot;Manhattan/Ft. Riley&quot;' value='&quot;Manhattan&quot;' />
            <semantic-value key='&quot;Martha&apos;s Vineyard&quot;' value='&quot;Martha&quot;' />
            <semantic-value key='&quot;Midland/Odessa&quot;' value='&quot;Midland&quot;' />
            <semantic-value key='&quot;Mission/McAllen/Edinburg&quot;' value='&quot;Mission&quot;' />
            <semantic-value key='&quot;Montrose/Delta&quot;' value='&quot;Montrose&quot;' />
            <semantic-value key='&quot;New Bern/Morehead/Beaufort&quot;' value='&quot;Beaufort&quot;' />
            <semantic-value key='&quot;Newburgh/Poughkeepsie&quot;' value='&quot;Newburgh&quot;' />
            <semantic-value key='&quot;Newport News/Williamsburg&quot;' value='&quot;Newport News&quot;' />
            <semantic-value key='&quot;North Bend/Coos Bay&quot;' value='&quot;North Bend&quot;' />
            <semantic-value key='&quot;Pago Pago&quot;' value='&quot;Pagosa Springs&quot;' />
            <semantic-value key='&quot;Pasco/Kennewick/Richland&quot;' value='&quot;Pasco&quot;' />
            <semantic-value key='&quot;Raleigh/Durham&quot;' value='&quot;Raleigh&quot;' />
            <semantic-value key='&quot;Riverton/Lander&quot;' value='&quot;Riverton&quot;' />
            <semantic-value key='&quot;Saginaw/Bay City/Midland&quot;' value='&quot;Saginaw&quot;' />
            <semantic-value key='&quot;Sarasota/Bradenton&quot;' value='&quot;Saratoga&quot;' />
            <semantic-value key='&quot;Scranton/Wilkes-Barre&quot;' value='&quot;Scranton&quot;' />
            <semantic-value key='&quot;Sun Valley/Hailey/Ketchum&quot;' value='&quot;Sun Valley&quot;' />
            <semantic-value key='&quot;West Palm Beach/Palm Beach&quot;' value='&quot;West Palm Beach&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[flight_date]' derivation='Year' name='[yr:flight_date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='27' param='vert' type-v2='layout-flow' w='98934' x='533' y='1000'>
            <zone h='7125' id='28' type-v2='title' w='98934' x='533' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90875' id='25' param='vert' type-v2='layout-flow' w='98934' x='533' y='8125'>
              <zone h='90875' id='7' param='horz' type-v2='layout-flow' w='98934' x='533' y='8125'>
                <zone h='90875' id='5' type-v2='layout-basic' w='88134' x='533' y='8125'>
                  <zone h='50651' id='3' name='map cancel' w='29365' x='533' y='8125'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='40224' id='10' name='barres' w='52934' x='35733' y='58776'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='17' />
                    </zone-style>
                  </zone>
                  <zone h='40224' id='17' name='Feuille 3 (2)' w='16667' x='533' y='58776'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='17' />
                    </zone-style>
                  </zone>
                  <zone h='50651' id='23' is-centered='0' is-scaled='1' param='C:/Users/ilana/OneDrive/Bureau/projet tab/airline-6763903_1280.png' type-v2='bitmap' w='29405' x='59262' y='8125'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='40224' id='53' name='Feuille 3' w='18533' x='17200' y='58776'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='50651' id='59' name='Feuille 4' w='29364' x='29898' y='8125'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='162' h='90875' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10800' x='88667' y='8125'>
                  <zone h='11125' id='8' mode='slider' name='map cancel' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]' type-v2='filter' w='10800' x='88667' y='8125'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9125' id='9' name='map cancel' pane-specification-id='0' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' type-v2='color' w='10800' x='88667' y='19250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='7625' id='12' mode='checkdropdown' name='barres' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]' type-v2='filter' w='10800' x='88667' y='28375'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9125' id='13' name='barres' pane-specification-id='0' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' type-v2='color' w='10800' x='88667' y='36000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontname='inherit' fontsize='26'>Canceled Flights 2019 - 2023 USA</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2100' minheight='2100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='119' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='118' param='vert' type-v2='layout-flow' w='98934' x='533' y='1000'>
                <zone h='7125' id='28' type-v2='title' w='98934' x='533' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11125' id='8' mode='slider' name='map cancel' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]' type-v2='filter' w='10800' x='88667' y='8125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50651' id='3' is-fixed='true' name='map cancel' w='29365' x='533' y='8125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='9' name='map cancel' pane-specification-id='0' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' type-v2='color' w='10800' x='88667' y='19250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50651' id='59' is-fixed='true' name='Feuille 4' w='29364' x='29898' y='8125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50651' id='23' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/ilana/OneDrive/Bureau/projet tab/airline-6763903_1280.png' type-v2='bitmap' w='29405' x='59262' y='8125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40224' id='17' is-fixed='true' name='Feuille 3 (2)' w='16667' x='533' y='58776'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40224' id='53' is-fixed='true' name='Feuille 3' w='18533' x='17200' y='58776'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7625' id='12' mode='checkdropdown' name='barres' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]' type-v2='filter' w='10800' x='88667' y='28375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40224' id='10' is-fixed='true' name='barres' w='52934' x='35733' y='58776'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='13' name='barres' pane-specification-id='0' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' type-v2='color' w='10800' x='88667' y='36000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2CB74CFB-8CA2-4214-9D00-89F0CBD6FC88}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Tableau de bord 3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='flights_clean' name='federated.0ry08tp0iokk6n10wilm30p9jspj' />
      </datasources>
      <datasource-dependencies datasource='federated.0ry08tp0iokk6n10wilm30p9jspj'>
        <column caption='Flight Date' datatype='date' name='[flight_date]' role='dimension' type='ordinal' />
        <column-instance column='[origin_city]' derivation='None' name='[none:origin_city:nk]' pivot='key' type='nominal' />
        <column caption='Origin City' datatype='string' name='[origin_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
          <semantic-values semantic-role='[City].[Name]'>
            <semantic-value key='&quot;Adak Island&quot;' value='&quot;Adak&quot;' />
            <semantic-value key='&quot;Allentown/Bethlehem/Easton&quot;' value='&quot;Allentown&quot;' />
            <semantic-value key='&quot;Arcata/Eureka&quot;' value='&quot;Arcata&quot;' />
            <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
            <semantic-value key='&quot;Bend/Redmond&quot;' value='&quot;Bend&quot;' />
            <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
            <semantic-value key='&quot;Bloomington/Normal&quot;' value='&quot;Bloomington&quot;' />
            <semantic-value key='&quot;Bristol/Johnson City/Kingsport&quot;' value='&quot;Bristol&quot;' />
            <semantic-value key='&quot;Cedar Rapids/Iowa City&quot;' value='&quot;Cedar Rapids&quot;' />
            <semantic-value key='&quot;Champaign/Urbana&quot;' value='&quot;Champaign&quot;' />
            <semantic-value key='&quot;Charleston/Dunbar&quot;' value='&quot;Charleston&quot;' />
            <semantic-value key='&quot;Clarksburg/Fairmont&quot;' value='&quot;Clarksburg&quot;' />
            <semantic-value key='&quot;College Station/Bryan&quot;' value='&quot;College Station&quot;' />
            <semantic-value key='&quot;CONCORD, NC&quot;' value='&quot;Concord&quot;' />
            <semantic-value key='&quot;Elmira/Corning&quot;' value='&quot;Elmira&quot;' />
            <semantic-value key='&quot;Greensboro/High Point&quot;' value='&quot;Greensboro&quot;' />
            <semantic-value key='&quot;Gulfport/Biloxi&quot;' value='&quot;Gulfport&quot;' />
            <semantic-value key='&quot;Hancock/Houghton&quot;' value='&quot;Hancock&quot;' />
            <semantic-value key='&quot;Harlingen/San Benito&quot;' value='&quot;Harlingen&quot;' />
            <semantic-value key='&quot;Hattiesburg/Laurel&quot;' value='&quot;Hattiesburg&quot;' />
            <semantic-value key='&quot;Hilton Head&quot;' value='&quot;Hilton Head Island&quot;' />
            <semantic-value key='&quot;Iron Mountain/Kingsfd&quot;' value='&quot;Iron Mountain&quot;' />
            <semantic-value key='&quot;Ithaca/Cortland&quot;' value='&quot;Ithaca&quot;' />
            <semantic-value key='&quot;Jackson/Vicksburg&quot;' value='&quot;Jackson&quot;' />
            <semantic-value key='&quot;Jacksonville/Camp Lejeune&quot;' value='&quot;Jacksonville&quot;' />
            <semantic-value key='&quot;Kona&quot;' value='&quot;Konawa&quot;' />
            <semantic-value key='&quot;Lawton/Fort Sill&quot;' value='&quot;Lawton&quot;' />
            <semantic-value key='&quot;Manhattan/Ft. Riley&quot;' value='&quot;Manhattan&quot;' />
            <semantic-value key='&quot;Martha&apos;s Vineyard&quot;' value='&quot;Martha&quot;' />
            <semantic-value key='&quot;Midland/Odessa&quot;' value='&quot;Midland&quot;' />
            <semantic-value key='&quot;Mission/McAllen/Edinburg&quot;' value='&quot;Mission&quot;' />
            <semantic-value key='&quot;Montrose/Delta&quot;' value='&quot;Montrose&quot;' />
            <semantic-value key='&quot;New Bern/Morehead/Beaufort&quot;' value='&quot;Beaufort&quot;' />
            <semantic-value key='&quot;Newburgh/Poughkeepsie&quot;' value='&quot;Newburgh&quot;' />
            <semantic-value key='&quot;Newport News/Williamsburg&quot;' value='&quot;Newport News&quot;' />
            <semantic-value key='&quot;North Bend/Coos Bay&quot;' value='&quot;North Bend&quot;' />
            <semantic-value key='&quot;Pago Pago&quot;' value='&quot;Pagosa Springs&quot;' />
            <semantic-value key='&quot;Pasco/Kennewick/Richland&quot;' value='&quot;Pasco&quot;' />
            <semantic-value key='&quot;Raleigh/Durham&quot;' value='&quot;Raleigh&quot;' />
            <semantic-value key='&quot;Riverton/Lander&quot;' value='&quot;Riverton&quot;' />
            <semantic-value key='&quot;Saginaw/Bay City/Midland&quot;' value='&quot;Saginaw&quot;' />
            <semantic-value key='&quot;Sarasota/Bradenton&quot;' value='&quot;Saratoga&quot;' />
            <semantic-value key='&quot;Scranton/Wilkes-Barre&quot;' value='&quot;Scranton&quot;' />
            <semantic-value key='&quot;Sun Valley/Hailey/Ketchum&quot;' value='&quot;Sun Valley&quot;' />
            <semantic-value key='&quot;West Palm Beach/Palm Beach&quot;' value='&quot;West Palm Beach&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[flight_date]' derivation='Year' name='[yr:flight_date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='Feuille 6' w='27466' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='10' name='Feuille 3 (2)' w='27466' x='55734' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='13' name='Feuille 3' w='27468' x='28266' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='7625' id='8' mode='dropdown' name='Feuille 6' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11125' id='9' mode='slider' name='Feuille 6' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]' type-v2='filter' w='16000' x='83200' y='8625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='20' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='7625' id='8' mode='dropdown' name='Feuille 6' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11125' id='9' mode='slider' name='Feuille 6' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]' type-v2='filter' w='16000' x='83200' y='8625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Feuille 6' w='27466' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='13' is-fixed='true' name='Feuille 3' w='27468' x='28266' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='10' is-fixed='true' name='Feuille 3 (2)' w='27466' x='55734' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{45B7284A-89AC-494B-8CED-F027EC0368A0}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Tableau de bord delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='inherit' fontsize='20'>Delayed Flights 2019 - 2023 USA</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#d0ebff' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='text-align' value='center' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='5' />
          <format attr='border-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#d4d4d4' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='text-align' value='center' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='background-color' value='#c7ffea' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='text-align' value='auto' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1500' minheight='800' minwidth='1500' sizing-mode='fixed' />
      <datasources>
        <datasource caption='flights_clean' name='federated.0ry08tp0iokk6n10wilm30p9jspj' />
      </datasources>
      <datasource-dependencies datasource='federated.0ry08tp0iokk6n10wilm30p9jspj'>
        <column caption='Flight Date' datatype='date' name='[flight_date]' role='dimension' type='ordinal' />
        <column-instance column='[origin_city]' derivation='None' name='[none:origin_city:nk]' pivot='key' type='nominal' />
        <column caption='Origin City' datatype='string' name='[origin_city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
          <semantic-values semantic-role='[City].[Name]'>
            <semantic-value key='&quot;Adak Island&quot;' value='&quot;Adak&quot;' />
            <semantic-value key='&quot;Allentown/Bethlehem/Easton&quot;' value='&quot;Allentown&quot;' />
            <semantic-value key='&quot;Arcata/Eureka&quot;' value='&quot;Arcata&quot;' />
            <semantic-value key='&quot;Beaumont/Port Arthur&quot;' value='&quot;Beaumont&quot;' />
            <semantic-value key='&quot;Bend/Redmond&quot;' value='&quot;Bend&quot;' />
            <semantic-value key='&quot;Bismarck/Mandan&quot;' value='&quot;Bismarck&quot;' />
            <semantic-value key='&quot;Bloomington/Normal&quot;' value='&quot;Bloomington&quot;' />
            <semantic-value key='&quot;Bristol/Johnson City/Kingsport&quot;' value='&quot;Bristol&quot;' />
            <semantic-value key='&quot;Cedar Rapids/Iowa City&quot;' value='&quot;Cedar Rapids&quot;' />
            <semantic-value key='&quot;Champaign/Urbana&quot;' value='&quot;Champaign&quot;' />
            <semantic-value key='&quot;Charleston/Dunbar&quot;' value='&quot;Charleston&quot;' />
            <semantic-value key='&quot;Clarksburg/Fairmont&quot;' value='&quot;Clarksburg&quot;' />
            <semantic-value key='&quot;College Station/Bryan&quot;' value='&quot;College Station&quot;' />
            <semantic-value key='&quot;CONCORD, NC&quot;' value='&quot;Concord&quot;' />
            <semantic-value key='&quot;Elmira/Corning&quot;' value='&quot;Elmira&quot;' />
            <semantic-value key='&quot;Greensboro/High Point&quot;' value='&quot;Greensboro&quot;' />
            <semantic-value key='&quot;Gulfport/Biloxi&quot;' value='&quot;Gulfport&quot;' />
            <semantic-value key='&quot;Hancock/Houghton&quot;' value='&quot;Hancock&quot;' />
            <semantic-value key='&quot;Harlingen/San Benito&quot;' value='&quot;Harlingen&quot;' />
            <semantic-value key='&quot;Hattiesburg/Laurel&quot;' value='&quot;Hattiesburg&quot;' />
            <semantic-value key='&quot;Hilton Head&quot;' value='&quot;Hilton Head Island&quot;' />
            <semantic-value key='&quot;Iron Mountain/Kingsfd&quot;' value='&quot;Iron Mountain&quot;' />
            <semantic-value key='&quot;Ithaca/Cortland&quot;' value='&quot;Ithaca&quot;' />
            <semantic-value key='&quot;Jackson/Vicksburg&quot;' value='&quot;Jackson&quot;' />
            <semantic-value key='&quot;Jacksonville/Camp Lejeune&quot;' value='&quot;Jacksonville&quot;' />
            <semantic-value key='&quot;Kona&quot;' value='&quot;Konawa&quot;' />
            <semantic-value key='&quot;Lawton/Fort Sill&quot;' value='&quot;Lawton&quot;' />
            <semantic-value key='&quot;Manhattan/Ft. Riley&quot;' value='&quot;Manhattan&quot;' />
            <semantic-value key='&quot;Martha&apos;s Vineyard&quot;' value='&quot;Martha&quot;' />
            <semantic-value key='&quot;Midland/Odessa&quot;' value='&quot;Midland&quot;' />
            <semantic-value key='&quot;Mission/McAllen/Edinburg&quot;' value='&quot;Mission&quot;' />
            <semantic-value key='&quot;Montrose/Delta&quot;' value='&quot;Montrose&quot;' />
            <semantic-value key='&quot;New Bern/Morehead/Beaufort&quot;' value='&quot;Beaufort&quot;' />
            <semantic-value key='&quot;Newburgh/Poughkeepsie&quot;' value='&quot;Newburgh&quot;' />
            <semantic-value key='&quot;Newport News/Williamsburg&quot;' value='&quot;Newport News&quot;' />
            <semantic-value key='&quot;North Bend/Coos Bay&quot;' value='&quot;North Bend&quot;' />
            <semantic-value key='&quot;Pago Pago&quot;' value='&quot;Pagosa Springs&quot;' />
            <semantic-value key='&quot;Pasco/Kennewick/Richland&quot;' value='&quot;Pasco&quot;' />
            <semantic-value key='&quot;Raleigh/Durham&quot;' value='&quot;Raleigh&quot;' />
            <semantic-value key='&quot;Riverton/Lander&quot;' value='&quot;Riverton&quot;' />
            <semantic-value key='&quot;Saginaw/Bay City/Midland&quot;' value='&quot;Saginaw&quot;' />
            <semantic-value key='&quot;Sarasota/Bradenton&quot;' value='&quot;Saratoga&quot;' />
            <semantic-value key='&quot;Scranton/Wilkes-Barre&quot;' value='&quot;Scranton&quot;' />
            <semantic-value key='&quot;Sun Valley/Hailey/Ketchum&quot;' value='&quot;Sun Valley&quot;' />
            <semantic-value key='&quot;West Palm Beach/Palm Beach&quot;' value='&quot;West Palm Beach&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[flight_date]' derivation='Year' name='[yr:flight_date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='92' param='horz' type-v2='layout-flow' w='26734' x='533' y='1000'>
            <zone h='98000' id='89' param='horz' type-v2='layout-flow' w='19334' x='533' y='1000'>
              <zone h='98000' id='27' param='vert' type-v2='layout-flow' w='19334' x='533' y='1000'>
                <zone fixed-size='126' h='16750' id='28' is-fixed='true' type-v2='title' w='19334' x='533' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='81250' id='100' name='Feuille 9' w='19334' x='533' y='17750'>
                  <layout-cache minheight='245' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='111' h='98000' id='91' is-fixed='true' param='vert' type-v2='layout-flow' w='7400' x='19867' y='1000'>
              <zone h='7625' id='95' mode='dropdown' name='Feuille 6' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]' type-v2='filter' w='7400' x='19867' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11125' id='96' mode='slider' name='Feuille 6' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]' type-v2='filter' w='7400' x='19867' y='8625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9125' id='98' name='delay/miles' pane-specification-id='0' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:arrival_delay:qk]' type-v2='color' w='7400' x='19867' y='19750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9125' id='101' name='Feuille 9' pane-specification-id='5' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_security:qk]' type-v2='color' w='7400' x='19867' y='28875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7625' id='107' mode='dropdown' name='Feuille 10' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]' type-v2='filter' w='7400' x='19867' y='38000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='98000' id='94' name='Feuille 6' w='22334' x='77133' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='97' name='delay/miles' w='21800' x='55333' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='98000' id='99' name='map delay' w='28066' x='27267' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='106' name='Feuille 10' w='21800' x='55333' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontname='inherit' fontsize='20'>Delayed Flights 2019 - 2023 USA</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='119' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='118' param='vert' type-v2='layout-flow' w='98934' x='533' y='1000'>
                <zone fixed-size='126' h='16750' id='28' type-v2='title' w='19334' x='533' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='99' is-fixed='true' name='map delay' w='28066' x='27267' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='97' is-fixed='true' name='delay/miles' w='21800' x='55333' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='98' name='delay/miles' pane-specification-id='0' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:arrival_delay:qk]' type-v2='color' w='7400' x='19867' y='19750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7625' id='95' mode='dropdown' name='Feuille 6' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]' type-v2='filter' w='7400' x='19867' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11125' id='96' mode='slider' name='Feuille 6' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]' type-v2='filter' w='7400' x='19867' y='8625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='94' is-fixed='true' name='Feuille 6' w='22334' x='77133' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='81250' id='100' is-fixed='true' name='Feuille 9' w='19334' x='533' y='17750'>
                  <layout-cache minheight='245' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='101' name='Feuille 9' pane-specification-id='5' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_security:qk]' type-v2='color' w='7400' x='19867' y='28875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7625' id='107' mode='dropdown' name='Feuille 10' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]' type-v2='filter' w='7400' x='19867' y='38000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='106' is-fixed='true' name='Feuille 10' w='21800' x='55333' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{67667867-C7A4-49A7-B1BC-AA4C47504079}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='map cancel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='165'>
            <card mode='slider' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]' type='filter' />
            <card mode='slider' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[cnt:is_cancelled:qk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_airport:nk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[win:sum:arrival_delay:qk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D988A4B3-6C36-4002-ABC2-38E51D6D3829}' />
    </window>
    <window class='worksheet' name='barres'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card mode='slider' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]' type='filter' />
            <card mode='slider' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[cnt:is_cancelled:qk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[hr:arrival_time:ok]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[hr:departure_time:ok]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[thr:arrival_time:ok]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[thr:arrival_time:qk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[thr:departure_time:ok]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{C83AFF81-3A61-4B60-847F-E2737AFBA9BD}' />
    </window>
    <window class='worksheet' name='Feuille 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card mode='slider' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:airline_code:nk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:airline_name:nk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB9B458B-51DB-4259-90EE-5AAFDE44CEEA}' />
    </window>
    <window class='worksheet' name='Feuille 3 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card mode='slider' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:airline_code:nk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:airline_name:nk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95AC6FC0-E589-4824-912D-B7C73C7F3745}' />
    </window>
    <window class='worksheet' name='Feuille 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='slider' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:cancellation_code:nk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FEE58622-D041-4880-A2AA-B98C8935692A}' />
    </window>
    <window class='dashboard' maximized='true' name='Tableau de bord 1'>
      <viewpoints>
        <viewpoint name='Feuille 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Feuille 3 (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Feuille 4' />
        <viewpoint name='barres'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]</field>
            </color-one-way>
          </highlight>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='map cancel'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B6F813B3-33F0-49B1-A4D5-7467A5FD0696}' />
    </window>
    <window class='dashboard' name='Tableau de bord delay'>
      <viewpoints>
        <viewpoint name='Feuille 10'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Feuille 6'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Feuille 9'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='delay/miles'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map delay'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D0B2971B-68E7-44BD-A1D3-E345C84925E9}' />
    </window>
    <window class='worksheet' name='map delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='164'>
            <card mode='slider' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:arrival_delay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[__tableau_internal_object_id__].[cnt:vols.csv_ED571202EE2D4E33B815CB4616031E72:qk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:arrival_delay:qk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[cnt:is_cancelled:qk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_airport:nk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[win:sum:arrival_delay:qk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B49C82F4-C05A-4F89-B442-03908AFB9CD2}' />
    </window>
    <window class='worksheet' name='delay/miles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='169'>
            <card mode='slider' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:arrival_delay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:arrival_delay:qk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:distance_in_miles:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{61520E43-3080-47FE-A379-B67A1A2CE4DF}' />
    </window>
    <window class='worksheet' name='Feuille 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card mode='dropdown' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]' type='filter' />
            <card mode='slider' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:airline_code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7328DA2D-9204-483B-AC50-9C23E4DCFC76}' />
    </window>
    <window class='worksheet' name='Feuille 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='169'>
            <card pane-specification-id='5' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_security:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_security:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B9728E5-93A8-467C-B511-D9DA93B6D003}' />
    </window>
    <window class='worksheet' name='Feuille 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='169'>
            <card mode='dropdown' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[none:origin_city:nk]' type='filter' />
            <card mode='slider' param='[federated.0ry08tp0iokk6n10wilm30p9jspj].[yr:flight_date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_late_aircraft:qk]</field>
            <field>[federated.0ry08tp0iokk6n10wilm30p9jspj].[avg:delay_due_to_national_aviation_system:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{85F16BB2-A608-4D4F-A39C-6510718EBBCF}' />
    </window>
    <window class='dashboard' name='Tableau de bord 3'>
      <viewpoints>
        <viewpoint name='Feuille 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Feuille 3 (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Feuille 6'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{0FC56EEF-4E91-46E5-A0DA-88F2CE392511}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Feuille 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Feuille 3' width='192'>
      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
      T64xdvkGy7nFHY+bNE18zbzMYrdRYuqd5OT0DIv926904fN7yWSSdGRSeL2ehj7HlY8/57W3
      zqkAKDvrP93Np7/4FV1nz+GzFvj0b39Nz4WL2+4rhMAfj3Dmu+9x6pvvMPtohGfX7jB9b4hK
      vnHR3K7Ni2DtQDQRkvTUDI83BMDr9ZBIRmlrixOLh3d8ddLM8CM+Ky6oACg7S3T380b36pqi
      baQHTjX1Oc3QaTszSNuZQaxKlcWnk0zfG2JuaJT8xDSDzb7seodaoFVSCBKLeWLRELFEmHg8
      QjgSaOpVSR0nz3Dpq2cRUkp5mVms5/IeEcXtauUKkaUSofk8/oUlfEtFzEIJT7mKUamiWfba
      ANjc02cU7jxAmh5kOIgdDWMnYtiZNFZnO7WeTqzONqTPu21H+Jc/+gnv/skfc/kv/xcD3/4e
      Q7+9jI3J299/n9WIqDuA8lx5fF6WfV6W0xtqcqSsL0yERDgSzXEQjoMjJY6h11eKFmL9Im/y
      qU8o5OHZ4zGqJYuxByMMvPE2wdxNHk/UOJmpP8JVAVCeu3JhCamZ+Lw6NjrYFrrpQSCQGvVt
      O5gbG8YTz2KVFtANg0gsxNx0nlRHcsu+4c5uRj/5J9InBvEkIow/HIJcjhMfrF/2KgDKc1Wd
      G+WTT8cw7TwDJ9IshM4h7l6n51tv0sxbvSanc9RG5nCo4A2E8NSKJM9c2nbfgbMv0T0wgN9r
      gjdAfmKM4dI8piZZrTRSAVCeq9kHY5x5/23MqTuMj05x/+pHeGZm6PnWm00ewSAdh5tD82Sk
      xcTUEt2vbj+m4A/48W9YdCuZ7SGZbVwwVwVAea7aL5zhHz78Obqhcf58B75Tp+Hh7V0rPzeK
      JeN09mQYHp0l1dPPy6/FGB1+xuDpnr0/vA31FEhxNVUMp7iaCoDiaioAiqupACiupgKguJoK
      gOJqKgCKq6kAKK6mAqC4mgqA4moqAIqrqQAorqYCoLiaCoDiaioAiqupACiupgKguJoKgOJq
      KgCKq6kAKK6mAqC4mgqA4moqAIqrqQAorqYCoLiaCoDiaioAiqupACiupgKguJoKgOJqKgCK
      q6kAKK6mAqC4mgqA4moqAIqrqQAorqYCoLiaCoDiaioAiqupACiupgKguNr/B+UuFRqESf5q
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Feuille 3 (2)' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Feuille 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Feuille 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Feuille 9' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAWaklEQVR4nO3daWwkd3rf8W9V9d3Nm2ySzfuY4XAujTQSdldrrw1DttcXDNiw/cawEwgw
      DL8xkiAIkjd5FTgxYAN+5SB5FSDBGkaMOPF6td41Vh6t11qtVhpSw+HVvNnNZh9s9sk+qyov
      RqZmJFaTPcPuIdnPB9Cbqb+q/yT7V+dTTymmaZoI0aLUlz0BIV4mCYBoabaXPQFxNe1uLBM5
      LPPqq3ewq8q5rHN/d4P1nQhtPf30tHkIDAV40TVLAERDPHy4wE/89Ff5629+l6++MsFOPM/E
      YAdb4Th9gXHM7D7xPIz2thHPpVn4/j/Rff8nuNblwd/pYStrR8mH6ezsIhSOce/+awyMTPKD
      Dz7my29+hX987/vk0wkOUlna2rw4OwZRj6KkK05evX0dRTlbNOQQSDSMp7MPSjne+da32N9Y
      5dHCPO7+aT56/z1i8QSP3v8+c3Nz5FQfY8PD3Lk1wycP50iGN/jH+U10VxfvfucdUrEQ2/vp
      p9asEo9HWVh4jN9TpODoZuXxR7zzrQcsLzyiUsccZQ8gGsKmVvnBP/wDE7N3OdwycXcNYS/H
      ePzwA/oHhojGwvT09uD2djA5PkKxesDioxXaPBqr21E62m8yMTZEbmwE3dmFv9MNgM/nA8Dr
      82EDXB4fXpcbn7eb4eEUfWNTaHXMU5HLoKJZtpd+DH03Gev1vOypHGtoAHRdR9PqyaMQzSXn
      AKKlSQBES5MAiJYmARAtTQIgWpoEQLS0S30jbON//D9SC2uWy53dHdz69283cUbisrnUAYj8
      3T8R/psHlsu9Y4MSAFGTHAKJliYBEC2t7gBkklHm5ubIFqsARHY3+WR+nnQ2x+LjRyyvbSPF
      ReKyqPscYC+W5M7tWYKbO9y4Nok/MIpd2yKd05mZmWFxcRXDNFFME8MwzlyX/TxOK2MyAcMw
      Gvb54vJ74UOgaHiLvNnGSJ+LxcUVJq5fl+MqcWnUvQcI+Lt5tLDE5PQ026EIhXSWqlIgqlao
      6Dp7oQjT02OoioJpmqhq4+Jw2t5FgYZ+vrj86g5Ae3c/97r7MXQdr8eDNjx4vGxgcOhcJydE
      oz33fQBV6vzFFSDHB6KlSQBES5MAiJYmARAtTQIgWpoEQLQ0CYBoaXUHoJhLsbi4TKn6pMbm
      MLHP48VlipUqm2srROKpc5+kEI1SdwC2dsJMjAfY3NoFwOH2MdLnYvXxKoqvj8NoGP3cpylE
      Y9R9J1jRNJxOF4r5pBy6mD0kloORgTbKLidVmw3DNMEw0HX91IrNF3GWatBqtdqwzxeXX90B
      6O3wMv/JAqOT04T2oiQjEVSnB6VvhOjmKs62HmyKgvJpqUQjWyOepRjOZrvUT32KBqv729Ez
      MELPwAh6uUyb18NwoP94Wee9V891ckI02nNvHjWHo6421EJcRHIZVLQ0CYBoaRIA0dIkAKKl
      SQBES5MAiJYmARAt7YU7w2UP4yytbWFUiix8Ms/q5q50hhOXxgt3htMcHvRyjFIuDU4fhUwa
      wxyWznDiUnjhQyCP14sClCtVbDYbqmJiyC5AXBIv2BluH5ueJ5vJUuzro5o/wOHpwKYqKEhn
      OHHxvXhnOFVlaGwKgP4+/7lPUIhGks5woqXJ8YFoaRIA0dIkAKKlSQBES5MAiJYmARAtTQIg
      WtqpATAMg6dLbj7fGa5UyLET3gfTZG97g+1wtGGTFeK8nRqAR3MfUnqq1dvnO8MVCkUODuIU
      UlE2Iwdo0odHXCKW39boziofPlpncGgEo1oBmx34Yme4zu5eHPtRSsUj+oYmyMXDlHq7sSGd
      4cTFZxkAp9NJuZhnd3eHSCzGL//czwBf7AynVHIkEgn6B+5Sim6hutuxqwqqIp3hxMVn+e1w
      eNro6+2mo3+COzcmjv/9853hHLb+42K43u6uxs9YiHNkeQ4Q3lhmYOou2b1VcuUvLtccDhyy
      dRWXnGUAhsenWPr4fYr2LryOZk5JiOaxDEBsb4diRadUzFGRhv/iirIMgKZpVKvyzRdXm+VB
      fLmic232Fj3tHmyNe65diJfKcg/QNziKWsmTyWSlzYm4siz3AEe5NDjbeOXWdRrY2USIl8py
      D+AfnsQ8WOeP/vhPePDBfDPnJETTWAYgEd6k7A3wr//VH3Jj/LPXIOmVIsG1zePeP6ahkzx8
      8mpUo1okGj9s7IyFOEcnBsA0TVaXF/B4fPzg3e/g7R44XhYMBunv9RHcDAEQ399jbWsbMFlf
      XSG8H3t2XcUCZuqg9n/SvU28JJbnAHanl9JRhqlbr+G1f/bvis1BW1sXkcQ2AP7ACPFUhlRk
      i+1YhlLpgPLsNJrCk2K4Tz6ADx/UnsW/+DfgdNU9eSmGEy/qxAAUkmGyFZXw4iM2t3cYGPhV
      XJ+ObHfZeDg/R2B0mnjigHI+xd7eHgNDb/LWT40SXN/BYfusAE5RVU7bvmuahvIcZRVSDCde
      1InfDk/PMDfHDukbv8ndqcAzywZHpxgcBb1U4EhX6OvtOS6GA7g2PfH51QlxYVnfCXY4ePTD
      d/k/f/NtSiccRWhON22e+g9bhLhIaj4RZrPZSGfSciNMXFmWAXC4fQQCATpcNqqSAHFFWdcC
      lYr4A2N0dXbjkj644oqy3AMUckliB4fsbm9Qlsv04oqyDEBg9DqbKwtMXLspewBxZVkGYCv4
      GG9vP5noBrlKM6ckRPNYBmDs2m28RoGqp582u9UoIS63EwNwFF1mOaqjVI7YCK5SeuocwNCr
      HCQPj7vFmaZBoVAETLLpQ3JHxSZMW4jzcWIAVJuTD7/315g915gZ6UF/6jLo5toK2XSCjdCT
      FojxSIj5x0tUS0UOMzlWl1eQBynFZXHiZVBXzwRvvz0BmOi6wdO9rapoTIyOEdzYBfrxB0aJ
      p7JodjsOTaGnz49qmujGk85w6hkqPXVdh+coWpNiOPGiLO8DJCObfO8HH2FzdfLLv/gWtk/3
      FVad4cK7bnajh/R092IqynFHOCmGExeZ5bcjcxhncHyGbHSbssFxAGp1hhsea8qchTg3Jwag
      lDugd+o+yt4W3qmv4TlhlOZwILcHxGV3YgCy4SW+vVRkwAc2Z4w33/wKDvm2iyvoxACodhev
      f/k1RtsBRcEu75ERV9SJAeiefJ1u06RQLGK326UtiriyLLftexuP+J9/9U3WH8+TlyuJ4oqy
      DIDd4aSSO+Dhyo4cAokry/KrbZrQ1d6OzenElHJocUVZBqCrf4yf//rXGen1SWmDuLIsA5CO
      7/Kd7/49FVv7M88DZJJR5ubmyBafnBhkD+MsrW2BUWVp4RM2d/cbPWchzs2JV4Gq+TjvPPiY
      8dEBIuEwBveOk7IXS3Ln9izBzR1uXJtEc3jQyzHSsQgdgUly0RBVsx/VNDEMA/UMb4k0TeO5
      usOdpRbIkK5zooYT9wCp8CquniFU1YZaTZErWa/A4/UiV0nFZXXiHqBz9B6vqhEABodGaHvq
      HWEBfzePFpaYnJ5mO7SPTc+TzWSpBoZJhzZwdfixKQooCqZpoijKqW1VFEVFUeu/1HSWYjj1
      OdYrWseJAbC5vAT6+9DcbThtz36B2rv7udfdj6HreD0eNFU9Lobr6bzb+BkLcY4sq0H1SoEH
      7z3gIHXEl37yp7k2OvDMcrWBL8AWolms26JkUxQq8MaX3ySXjDZzTkI0jeUewDQNIpEw+aMi
      v/Gbv9nMOQnRNNZ7gGKJyfExVAW5ESaurBP3AHq5gOrp4datHlA0XC14IeXbCzGOytbRH+p0
      8aXJribOSDTCyTfCSnnW19c5PDyko9vPQGCo5Z7+2j0sHN/tPoldk7sfV8GJ23ZnWy8T/V4S
      Rzr9XvWZvkBCXCXWxXC9A9jKGVYjGdyttvkXLcPiLZEGq6tr9PT0cW3mBk/fCyvmUiwuLlOq
      PtktZJIxllbWqVYrrK0ssRuJyws1xKVxYgDye4uUOq7xK7/yS2T31p55ImxrJ8zEeIDNrV3A
      JLQXZ6TPycriKrqrm+R+WAIgLo2TT4J1k4UfvcvGQyjrJne/+tkyRdNwOl0oZhUw0Wx2nG4P
      upGmfLgPqg3DMDHNy94Zrva6DdOUrnNXgEUx3B1+/+07J/4Pz3aGS+BzqSws7zA+McbO1g6q
      3YGqKKjqZe8MV3vdqqJI17kroO6/4Bc7w/kZGn+yrOueXBcXl8tzb8KkM5y4ClrwHq8Qn5EA
      iJYmARAtrWUuY2zEsvzlDzdrjvmtL08w4W9r0ozERdAyAShXDRLZGk/3A2X9+YqedhI5tuK5
      mmO+cs2P3SY73IumZQLQSKuRNH/7MFRzzP2JHgnABSR/EdHS6g6AXikSXNvE+LRSoHSUYWM7
      DEAyFia0nzjXCQrRSHUHIBgM0t/rI7gZAkyCa1t0OEoE17bY2EvhdjlOXYcQF0Xd5wCKzUFb
      WxeRxDZgYne46ejuZnN9CXtvP6GtDdruvILGxSqGM/TTn2w2dP2pArezF8Odpf1iVdepVuUp
      soum7gC0u2w8nJ8jMDpNPHGIQy0z/yjI1Cu3WV9ewebyYlMVVOViFcOdpY+RqmlPFbidvRju
      LN3nbM+sW1wUdf9FBkenGBwFvVTgSFfo673FxKfLXn/j9XOenhCN9fzFcE43cstIXHZyGVS0
      NAmAaGkSANHSJACipUkAREuTAIiWJgEQLa3uABh6lYPkIf9chVCtlDhMZQAwjSq5fOFcJyhE
      I9V9I2xzbQXN4SCVLzM14ie4vIzDoVIwpikn1onmVL702s1GzFWIc1d3AKqKjcnRCVY3t4E+
      VLuHsXE/iwsrlDWVaqlIVTdQMKUY7ilSDHcx1R0Al2rwcH6O3sAk6XQWqnnmP1kiMDGLph8R
      3AijKArapwViUgz3hBTDXUx1/0XGpmcZA6rFPOmSyczte08t7cDfP3h+sxOiwZ57k2Rzeelx
      nedUhGg+uQwqWpoEQLQ0CYBoaRIA0dLkupy4VP77Nz/if7+3WHPMO//5t1HVs91zkT2AaGkS
      ANHSzrEznMnezgb7idQ5T1GIxqn7HCAYDBIIDBDcDDEzOURwbYvBPh8buwk6O/oIb27Q19sp
      r096CYrlKol0vuaY3g4PLocdgP/yv97jIHNkOfb2RD+/8/VXz3WOzVTVdfaTtbt2n1tnuFS4
      SGp/h+7ACKppohvSGe5pzSiGmw/u8e/+69/VHPNHv/ezvDE7DMBccI9IjS+IXVOf61WwVd3g
      xyu1u2WP9HUw1NdR97oN8yy/6yqqoRBOZPjd//RXNceeW2e4ocAAK5Ecg1oW09+NpklnuKc1
      oxhO006fxzM/42m/P/Wzn/Hdj9f52/eXa47/j//yLdo8TgrlEv/hv3235ti3f+l1fvcX7p86
      389TlbP8rm2oqnL8Haw5tt4J1OoMNxAYqXd14pLYS2T4YHG35pjqGfayJ/nW+0us7lh3Fb89
      OcBbb1x7rnWfRjrDiZfuh493+N5H65bLS5XqxQuAaI4/+cYDfvh423J5b4eXP/+3v97EGV0t
      FyoAxXKV//v9hZpj7k4NMjve36QZvXwH6TyhWNpyeaX6fO81E09cqAAUimX+9BsPao75g1/7
      aksFQDSW3AkWLe1c3xEWCW2RyklbFHF5nNs7wpaXg+QMN7sba6de9xfioji/d4RtBBkbHCZz
      lEJHjq2sFEpl/uwvap/nfO3Vad68O1FzjDgf53YnePL2dTbXFnF4Oi7WmfUFUyrrfOM7H9Uc
      09PplQA0ybneCe6+X/+tbSFeJsU8raLsOZimiWEYGIaBkk1hpg5qjldHJjFQ0A2TD5dq324f
      G+gi0NsOQGp+lWIsaTlWczvx/+RrGIbBUVknlKxdKTnS48NtV1FVld1kgaph/avxOjT87U4M
      wyCZLxPPFGuu+/pgOwqgGyYfLGzVHDs22M2wvxOA1d0EyYz1vJ12G6/NDGMYBtmjMss78Zrr
      nhntpd3jRFVV5oIRShXrYreuNjfXR3oxDIP9ZI6daO1S9/szQ2iqgmHCj5dPKYbzdxz/HddC
      BxzUqGL1d/mYHOrBMAzCieypFZ6vzwQwTZNy1WB+LVJzbEMC8M90XT9TQVK9Y03TxDTNMxWh
      NXIejVy3/IzNmUdDA/B5qYMYmfyTLaWvo5vuDp/lWL2Y43FwE7umYWpOZmematRnmpRLZQzT
      BI4IhcpMTw9Yjk7u77K9f8DktZuk4/uMjo9ar9mo8snDj1FsTkpVnVt3XsHjsP7F7m4GyRWr
      hENhbt27z2Bfl+XYTDwGPh+bS4uYDh+v3L5R42c0CIf3KedT5Etl/CMz+Dvd1vMILpPBxsTI
      KB6Xw3IcgGnqLMw9xFDtVHWTm7fv4K7xMyYiO4Qi++RKCtdv3MDfZV0VppfyLK5uoGkapurk
      5o2z/R2ToSTeUT8dDuuj9K3gEpkS3Lw5zd5OnNHxgOXYYibOo9UQToeGodh55c4sChf4Yk0u
      GcfdHWB2dpZKNs1pVekPP/oRoVCYcDhMvlCuOTabzjI1e4ud4CKJQ+syAwDDKOLw+FEUlXF/
      J9lCqeZ4n9eLbqr09PXT39NZc2whc8ja2iqerlHcZoVKzdEm8WiUbMlkoNtLusaDLADlksH4
      2DDR8Dbr2+GaTzeYZglD9ZHN5Bjq8ZE95fcXiae4c3uGzo4eYuFwzbH5wwSOzn5uzs5SzaVP
      +Rlh/uMfsRsKEwpFqJ6ybc4VdW5MBni8tEwmW/vwNr0fY/zWDKrmwa0Yx9+npu4BdL1KqVjC
      ME1sdicup73m+NjeDgfpPIMj43T6rLd2AOVSEc3hRFN08vkqXq9130a9WqaiKzhtEIklCQxa
      l1aYpkmxWMTtdnOUy+DwtGE7peOAoZfZ2o0yOX5aebhJPptBc3opF49ob2+vvd5KibX1dVzt
      vYwM+muW8+czGVzt7Wd8Ms8kthfC4fERT2aZnhitue7yUYb1nX0mpiZB13G5nDXXHo/sEk/l
      6Ory4x/oqTmnSqmEandQOMyjdXhw26y30aXCEZrTjVHKEkkUGBup8XfUyxR1FbdDI7YfpXdg
      AJUmBwBMUskkxWKeRKbC7RtTzfto8VKU8ylWNkJomkpsd583fv5n8FqONtlYWaKoQzKUYfan
      7tNTYyO5s7FKrlgFKuQLDt64P2s5tpBJENyOYtMUYnsJvvLW13DyEorhyqUihVIZp0M667YC
      u9uLt62DyfEROhzOU465FexONyOj46S9B9hOeWLN5XTSHZjE5zJYX9uvPdbbRlt7iYmxIXyO
      9ePzkKbvAfZ2NknlinT1DjLotz5BFKIZmrwHMEmmj5i+No1mq338L0QzNPkqkEJnu4dwOEyq
      xs0dIZql6YdApVIFp7P2dWkhmqXp9wFWHs8TOzikUKx9rVmIZmhyAEx8Xg+hrQ32E4fN/Wgh
      TtDkk2CF4YlpBqsl1raigDzbK16upt8HSB0kyBeL9Pb1NvujhfiCpp8DFAppqrqdarl2TY0Q
      zdD0c4D80RHxvQipdO2abiGaoamHQOlkErenk1Ilx0CNAjQhmqXp1aC6bjx5CEKzYbfJWwTE
      y9XUPYCmqSw9+jGptEHnwCC3Z+TBb/FyNfUcwDTB09aLz6uhnaHPuxCN1tQ9QGxvl1K5Qkff
      MGOj1o+vCdEsTT0HME2D1EGC3Z1N8PRz98Z4sz5aiBM1NQDR8A665sbf14PtDK/zEaLRmlwN
      KsTFIpth0dIkAKKlSQBES/v/Ea3BQtOJMvwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Tableau de bord 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d3wdWX33/z5Tbi+66l22LNmWbbl7S7yFrbTdkM3uUhISIAnlecgTfkAg
      CRAgIeEhCQH2IQlJCAkElqUs7FKWsL2w3up1X0uyZMmS1cvV7X3m/P6YW3Qly/baXrbp45df
      unfuOWfOzHy/53z7iAMzUrKCFbxGobzUE1jBCl5KrDDACl7T0BZ+6XQlXqp5rGAFLwm0xQdm
      Mjppc2VjWMFrA0sYIG0qJE31pZjLCk6DyYH9/OAb/8L41CxGNkvH9qv43Q/8CR6n/qKe95ff
      +GvS9bt5y5uvOav2P/mXv8C+9gbecO3uBUdDfPgN1yID1SiidPS9f/PfHLn781Rf9Htsrk1x
      23/8nL/++/+77Nh//4Hreetf/5RVtY6y44//+F/wrXszmze2nXF+yfkx/uMfPsNcJE02nV7K
      ACt4+SE2PcCXPvtpfu8T/0j3hrVIM8td//yXfONrX+NDH/mTl3p6Zwknf/nNX1JlLz96JP+3
      au1u/vrvdy/pdTboP/A03R1vPKu2937nNhp3/jb/57ffRDI0tsIArwQ8cc8drHvdrXRvWAuA
      UHR+8z0f4cm9vUjg2FP38IPv3IGiqkRjcW754F+xc/tGbvvQ26nZuJ0TPUcJhyK84yNfYGv3
      WsZ6nuK//uk2TCHQPQ28/xN/g99hcMdtn6V/aBJpGlx203u5/vVXl81j/wPf4+4770ZVBYGW
      bv7g//s4bofKg7d/mYcefhKXL4BdSbFp7Qu/xrlje4o7wOjRJ/iP276EanfS3LqKoelccWf4
      n//8PMHJEaKROO/8+N+hzR3m4NFB+v/5k1R86qscf+g/eOKpg0gzx5qL3sTv/+G7WbDpsPum
      9+MINAHg9NeuMMArAePDg7S97vqyY5qnlstfVwtIDj39FH/w2a/RVO1l8Kmf8v2f383O7RuB
      JN6mnXzifR+n77Ef8qMf/5Ctmz7ON//+r/itT/w7mzpbeOz7X+a+X/yS2twxjJodfPZj78BM
      R/m7D/0enZt3FM8XG3+e7/3wl/zlV/4bj9PGQ9/5O+668y6u39XAA08O8JmvfR9dJvnSh9+x
      zFWk+ddPvh89r16u2Xk9N7/15qXNZIZvfvHzvOPTX2fdqgYe/e4XGZqeK/68esf1/K/rLuPI
      A7dz70/u4qN/9lG23Ptjum/5LB2VSW67bz9f+vYdaDLDd7/yOebjOSrdJTKvaV5T/PzEj762
      wgCvBOh2O9lMZplfBVf99u/y2N1f5+SJQeYmR7E1bi/+2tm9DYDq+kZS8X0YoWEmZC0bO1sA
      uOJtHwbg3/7s7QzPH+T/HrwfgNn5EMf7eovjDPXsJxGa4v994gMAZOIhRHWcIc8063dchkNX
      ADdbd12Mccp52rj5f3+CCpv1ze7ynbJVeqafGbWedasaANj1uut48MD3ir+vyzNlVW09yfjx
      8s6uenau8/MX77mZjTsuZce1by8j/iKkySM/uI1HnhpcYYBXAtZu2s6vDjzLG6+/vHgsOTvA
      5z7xt3z6/32ZL/75h3nLBz/NdW97H+GBJ/jmXU+VOgtRNpbQdGQmgwmoQGz6BM8PTqPpOje+
      75NcunN9WftfHr8XAE2z0bbtav70zz9W9vtz93yddDpV/G4apyZ/ENQ0tS3RARZD0e3IbBYT
      y0m1mPHFoutZCCOX4/o//DQ3Kll69j/DD/7xI6Q/+i/s2tJRbCNllh995ROciPv4+Be+vOII
      eyVg+7W3ED/2CD+843tMTU4y2n+Qr/3tp9h45ZuxGQmiyRx1TW2YqRD3/Pj7ZNPpZcdSvC1s
      bDL55S8eJBkP87Nv3cbo+Czbd1/NL+/4N2Zmg0yfOMKn33MjQ+PzxX7tW3+DqUMPsnffIZLR
      eb73xT/lu9/9EV0XX83xp+6h//gwMyNHeeyhh8/rWvVAO+tr0tx778MkYiHu+cHtZ+yjahqh
      mUlS4XH+8c//mFBaY9vuq6ipCSAXRfo8esdtHBkzece7fp/IzIoS/IqA6qzkT//xP7j/x9/h
      O1/5LKrdw/Yb3s8VV1+FIuD9f/K/+cm/fg67v5Zrbn0fD/ziYUyguWMTLrv1iHWXj1Xt7YDC
      ez55Gz/59r/zT4/eSceOq7nxt96IJiRZvsftX/oUwubhLX/8N6xuDDBT30a2MoDd38xHP/d3
      3PPD23n4+1Hat+7mhltuwq4rfPDjH+Pn3/4Spu7l4utvojKwWLzRWLN5G/opFu+a5g78fg+6
      y1ac37v+4h+565tf42uP/YRNm9YiguMAtKzdkhe1wOYO0LbaMnte+sa38pM7v0Vz21/ygQ//
      H/7nm/9AKiPpvu6P2LW1s+x8J0eGcSkZbv/q5wEQC4PhOl0JRlP2FT/ACl5C5PjOF/+KGz/4
      afxOnWd++q88d1Lhf33wfS/K2ZbsAM2O5bfPFazg14Ert7TyTx/5HWw2HYe/jr/45CdoeJHC
      dMp2AKeynAKzghW8OlG2A6yIPit4raGMAdTg0Es1jxWcA4zK1cDKczsflDGAyK6EQ78SsfLc
      zh0rfoAVvKZxWgYIh8Pn9NuLAet8JuFw5Axtln5ewdnBumc5wuHYGdpYkGaOgWP9pFJxYsns
      Mj1O/8zKcfpzvxgoY4CeZx/i8X099PT0kM7BkSOHIZegt39kScfDR46UfT9y+PCLOtEjRw4D
      WQ4f6Vu+zeEjp/x8Nujr6znHmSU4cvj4KX/JpeP09PTw3e/eUbynp8PhI+d2D7PJCE888TQ9
      PT3MBM+W2E51/iNActnrKbWxsPepp2hctZpscITjkxHGhnqILrGilz+zbHiC3uHZZUY//bnP
      B8vR5xI/QHtnF43ehS10sukE2WSE/UeO4XEo2CvayCbj9PX1MReKsqVrDb29vag2F611Ho4O
      TuL2eNiw1oq8GxnsI5w0qKyqRc3FmY/EyQmd9Y0efnV4jPoKDbuvgRqXycDYLF6vnxqPxvBU
      kJwh2b61u2yOqegcRwfGMHI5tu3czvCx50kZCvORkiwcDwfp7TlKylBo8koSrhbaqjQOHDnB
      1s3rScfDDAyPEY/G2bprF5mMZQI+8NxTjI5Os3PHRo5PxvEoaWpXdaGl5piYi5E1TLZv7ebw
      vmcZHR2la2s3vb29eCpcrGppKL+5djddXV1MTEzS1dWFmU2yd+/z2FRBY8dGRgaOsn3bdo4f
      PkJgdQu9vb1oqoPOrs4X5KI/sO8g2y65DKdquVrHTw4RjiYwVQerqzSeHQhS7ZK4q9rwaylO
      TAXx+QJUOGBsNkzOhO2bN5aNmQhN0zs8hZEz2L59KwNHD2IodiIJK+4nl44zPDaBJ3Cc+jy9
      5NIGpgKjQ/0E4xnCkRiX/8ZW5qbG6e05iqE48Oam6B018NrXkQxNkTFVKqpqaayrAmBmcozn
      D4PDV0NkZpzNO3YSHOkj42ujKeBganSIyfk487NBdl91BUf27WPb9u0cPnKYjWs76OkfJJ2I
      0b5pBycHeokHJ/DWrSrSZ0dbLYeODiCNHJu27VwqAg3299DT00fWLBwxCYejHNh/iM3bd7Cm
      MUAwlkZ3ulm3bh16LoXmC9DQ0EjXujUkI/Mkc9DW2lIc8+T4LN0bN9BUX40QIIVgaHAIM5fC
      W9XIhk1dTJwc4XDvINu2dNPZ3sq+g4ewaSrB4V4mY+X+iX3PHcDu0JHxSXqGp5iYibJxQxcB
      n6vYxu2vZH3XBpKhWQItaxg4sp8TR49Q2dwKgKKqSMMkExpjbD5NOGJt7X19/Vx/w43o2RiV
      javZsn0HA0cP0Td4ks3dG2n25BiYitPbd4yr3/gWVrfW0dDQUiT+yPzMovtXQt/+/azq3s7m
      rVvpO3SAUCgEQCwcRvf4rXv4AokfIJE1cKilOAOBAKEwNHQcI5Ogoq6VjZs7GRsa5ejAENs2
      d7NmVTMHDh5EVxUmB44SXLRyP7fvIA6bRiY4zPHRcWaigg1d6/G5rGwsze7Oz3cdWp6KElGL
      mU6MTbF500YU09ryquoaWd+1gdDsOHX19TS1ttNUX0Nwbg7d4aa+trJ43pr6JjZ2b2Hi5CCr
      6j0cPDZG3/AUDQHrvP0nxtjSvQm3TcGE4j0MhyMIRQEp0c0E/cPTTAz3s6r7Ujau7yzS59F9
      z4HdgV3G2d8zvJQB2ju76OpaV4zbLkBXBZmcsXy0X/7+VzR2cNmOjez71aPE800llq9NSknf
      8RE2dK3H41j6mDUhyZkSKSV2u4OOdeu59sabqHGV+yfsdhst7Z1cdOUb6WoOYORvtHmKEkeG
      NFEUGz6bSd9sitZKi0n2PruPtZs20VRXXda+uW01tgXElEvFUHQXSIkpIZbI4nboNLWsysel
      6CBKso0vUHPK+wfgdtuJx5KY2SRCs6MIq1EuZ/U/TaDjabGmoYJjo1bMvJSS/qERurrW47Qt
      vccKkJNWO5vDTef6Lt74lpvw28rb2e12VnWsY/e1N9Je68HMZfPjn4KzF8E0zfzfpbSianpx
      rO0X76apxsdjjz9Z3kjmMKUg0LyOyOghhO4uEqphGEhKz1ooCiDJ5XIcO7CXqtVdtDU3gAR3
      RS31lR6royhdV2NLO90XXcmurmbUD3z8s58t3pzYDG5vAPuC++b3+wGFtes6ONbTQyQ0h2Gv
      prHKk/8NvH4/TlVycmoejw0GBkdwVdbQWFOJACrcdvqHRjCkitehMDk9i9tfSU1VAEV34nPb
      AIX169rp6ekjmsiwcV07R3v7CM6Hqay2ckkLc1m/vpNjvb3MBYN4Kqrx2CSjE9PoDhd1tRZB
      Z5MxpqanaWzrwOd2Uu2BkyGV9pZaAKoq3PT1D4GqU11bh1NXitfj9/tJhqboGw2SisfZsnUT
      jbUV9PYdR/NW01ZfueDeaGRTYWJpE7/XsyxRBAIB/LUNzAwfY3I2QveWbgJuG4MnJ0DVqGuo
      x6MJhsdnqaqu5Gx4wfRY11LhUInNjDIxNY3QHDhUk6mZOXwVVVRXBVBtrnzusMq6zlZ6e/uI
      p3J0dbTR29tPMBSlqroKpXhNKuvXt9N7tJe54Dy+6kbsJJmYnsHh8lJbXbWIPrDO4dBxef1U
      ujQGRsaYnJpl3doOQMHvtwLkAnXNxGZHyAqd6Nwk08EQTS1teN3WwhSem2Nmbpau7i3YNJXZ
      0ROs3nIRHru1CFb5nPQdH2F8bII169ehZJPMzM3j8gXo6FzDYP8xclIQqKrB67YV52fP02fX
      xi5GjvUyOxfE6akoD4XQpp5f9mbHQnOMjE+RSiRYv2U7rlMtcS9X5NLs3X+Ijdt24tTObpkN
      TxwnpDfQVu06c+OXCLk6S24/3XN7KXDyxHFiyTQGOpu6Os/cYRnEwnP0j0yxrXvDkt96jxxm
      zaZuzrckwFkzwApefni5MsArCa+gZXwFK7jwKNOS/jy9vAy7gpcXoibclv88PNhPIu9kqK5v
      omZJQsrZYW56guk5y6ri9FQsMeu+GlHGAF9rmQIliZAKCnZU6bRMakBOJDBEEplPeRYoCFSQ
      AgXLhGCSAyQzWQc9sUou9yVQlQQIiUmaB+ZaGEz66HJFqLbH2eAOI9BQpQOR34wM0khhnWMg
      4cGv5aixpTgtpEDDyVfHG0nJM0e0/oY3zG5fhLtnq+hPL5LxJdgVSVouryu02nJMZRXeVTtJ
      QFXJmg6+M+thOqfS7cxwOGlbtu/Zol7L8Af1CVTl1Em0TywwDbe1d/LsQw+x/uqr8Z6ydQkH
      H99D+2W7T9muqrYBj5ri2VG47EzEn55jz6Fpdu/qOsMZX94oD4YDTEwEGhKLaFUcJaKXKgiB
      JIfMt0dIKGoREoRJjS3BpOrk3yYbucQ3yzbvHEfjAQZSPm6pO0G1nkQgkJiAiUEKBVue2QRI
      ULGzzpnFxOBM9dsVNB4KVZwV8YNV/W5vzFMkfruQrHVkOZy0sdMT52p/mJG0xkDKSchQ6XbF
      6U86OZK0dsiRjHXbvjdTy05PlK0ueGd1jO/MejiW0kHKc7dp5jGZ1elJGHS5sqjKC1H1JE/v
      +RXeQCWJjKDRniDsX09XVYY9h6aIT01g9PSwuqmVgM992pH6jx4iaaiEQyEu3r2Txx95lquv
      vow9j++hs7WCibFRhhsDtDXVn9e1vpQoYwCLICUi/08KkywxKOboK0iykP8d8kwBeSYpkWq9
      M4GISB4N1/JYqAYJvLXmJNV6EsszIEHI/Hg6JqXsfyHzuwsgil6E5TGadvFczMtZ2Q6B5+Ll
      659fNQmoBfu2iRQGLQ6DFkeaHEk0nHQ4U6RmFQYW7BgRU+OhSICHw5JNrixpU5A2OW/iB2uM
      JyMeWm0hPJqCopxlrkZ2npxezYYNG9izZw/YF+5Ggrq6Btq7uoo7wNjwIFnFeUpxZ2o+ymW7
      dxMcPszAeHmIRW1dPQ1Nyiua+GGREixQEaiYIodJNr/SZzFFBkkWgUBBK4orYDGNSRopctZu
      kMfPZ1eRyhOxV8vyhsAsTY5k8UzFttJyZMgF1WQsRrTEIZMMijyNSCEFD4cqz5r4T4XpnMpj
      UUvU6E86kZjF/wuv9Y2VQRxiqXNHCsHhpI2wqbDOcYaAnxeAyZydkbRCTsaLx3K55eoD5aH5
      yMZnyWZSGFLB4XSQTqWYnprEBLxeG6FQEsOw7nFTW/uysr5TlYTiKU6Mz9NUXYEQBvHIPNFk
      GnQnRiqGsWwZlFcGysyg1XIvKMnig7fW6cIDtYgfwCRbPGYxzQI3vFS5Y7KdqZwTACcG72/u
      zbfWMEmjYMckbRGtBIENWdwBLDYTUqewo6hYOoJBCinKPZGxrJuvTzVfsBvS6UhwQ/XJ4ndF
      6ih5a7OQGj0JH4fjduZNhbDx4hvRhJS8pWqOTt3EMDMIzcCpVfNkXFLvskr8aVPPE5mfxxUI
      oAGZVJwTJydY3b4GXYWRoeP4KmsQQsPvdXFicIDqxjY8zqULi5lNEk2D3+MEaTI8NIivppGA
      10VwZoJETsPrshxMwZkJUtJGY23VknFeKVjEAM9iKtHTNFeApa5wi1nyLaRKJGdjJuvAr2ao
      tqcgr1AKVGunkPlx8nwjpA2QSJHNf1cRC6UzCRouciSWrPRPhat5MnrhHkCNluad9Sfy5xWo
      2Iu7gCqdKOgYpBlIqvxo/tfz4JvtCWJZjdWuGJtcURo1J3uTTurdFuOv+AHOHYuWsLwSugys
      X9U8QZTaFZRZMDFFDq+eYo0rQrU9v6qLvLxfiJkRJkLR8iu9VraDWOMtkvpF3sJ0iqk9Ga5c
      evA8MJOzkzG0/GnVPHOXmN4khyRHKL/612vlIkCdlsWnXjgxCCwdJ2Ta2B+r5NtTrZhkziom
      ZwVnxlkEHubllPznkkwsWSy7F44LFDJpwWMPHqZ7yzpS6QgulxspTSKRKC2tDTzy4F42da9F
      UUwamn2U7SzCxJQZQCmJXWIZ2fdCKJyLMJ110KzGioxpCGsXM0W2qBtU2SQQYDJXrpzu8ETo
      TzmJGC9SzTEh+OpEA6tdUQqSe8714r4j4NWMJU/Jsr6Y+VVPoEgdgYohUnmdYKH8X9gJZNkI
      ADPTIdo760kmUjz7dB+NjY0oqkImneGuO39F9+XXcGIkxvDISd701ivw67HynUBIwMCURl4c
      Uoq/F3aIxTvHhUCtlqHFnrQiDsnlfRvWfGR+LhYTnEL5k7DRnaDZnmYg6US+CMwJkJIqAykn
      hRK4ydWBF+U8rwUs0eJEXrG1lD8NBZvlqJKL5f+iJ2ARLOJsbq0iNB8jk03SsbaZ9RtbWLu+
      ibAjwJY334wwwgSqXXRvbCJpSiI5LW/zX0RYomBiNTHJ5C1OGVgsJl0ISMl2T7joiCuIbguh
      oKHhpM0uqVDKRZ3t3jASE79m8Bu+0+lSKzgdRp8/yujgGJG5ecIzpdLo0bn5JRro8MFDBGfP
      PQvu1Pu0FAh0kEbRGaZJDwbJoiiioBf9BuUQyPzKvfWiRiwxxhIT0qaCyQ6uqxsAmvMruRMo
      5JmW7P/lQxZWX6V4Ton1/frABBFD56lI1XmLQ0LCBncYQ6QRUi8zgVq3xcSQKQQqkZzKW2tG
      +Z/5ek5mHDTbEmz1zEJ+/ru9CfZEfOdlnn2tYuzEJBe/eQPP3PMg7go/6UiI6ZNB4rE5fLXV
      +JwKR45neP1vXcLk2DSzw6OYF+9i6tggFT7BwWMZdu5oJBhKs3776T3Vp7bj5cWPwsM0RBIV
      O5p0UXiilp9gqRggFhGxJSBZK7tNyfGbdf1FOdqaQEmpVhb0yxgK6YVmRiGtlbmwIgsTSY6N
      ngiX+udY4yzZys8VUhF8e6qFjKGzHOVKYWKKLB49hUtPcWP1CNcHxnl95Sg+LbOgXZZNrvOf
      02sRkalxxk9MABALRRjqO4GIR8kqGnU1NkIxSUVNyQLndtmYHp0iExonlFRpaG/j6J5nSYYj
      y7yroIRTM4BU8quzRGDDJENOJJCAIs9Q4B2Rl5stAreIPZ8RlvcWl5hE5n0OalHZLeBovJKf
      z6467ZmkKIlMa5wXpprATM7Oz2bbEKeJBQIsJ6HIoKspujyzeDVjyY5xVcU8rWeKY1rBEnRd
      tpvGVQ00da6mqXM1dY1VjI5O09zZjrOijpo1a6jJx/u5nDp6w2rqqty4apqo7+hAz86zdtcW
      3BUVZ9yAyyvD4caUORaGOlghC2CSRmCcxY6+nFhUOlbQHhabUxdif6yabZ7y6gFCaiVTamEs
      kQMJPjVTPvh5YDTjYjZjp9q+tFCw5QRcqhuUgvkyRd+BpsRpsjsZyTiWjLOC5dG81qp417S2
      HYDw5ATdr6+jMf/WGCdQW1sBQPdVVxb7Va2y+lVVbz7rc5UxwF2PTPKm3bXottiCMIAFIQpi
      sX3bCmNYaCY9NRarLmaeTq3Ty3z80UI4RY52V0m5EXJ5s6IUObxakhurhmh3xpjJOHg6UstY
      2nPWAXKLkZI6UM4AEhPEqe3vZj5UBCEwpZJnApVNrtgFddS9XJCNRzjRewK7P0BjU4BUTsPj
      PXdGj0xOMDU2Q6CpmXRwmoq21bjdlrThr2/A/4JGMxnaf4QcNqrrvMRT0NzedMqWZXv23r4J
      7n9mNq9sFmKBLAaQS4jY8voqUrOcWVI77Yq+EAIFBT1P9JbBcSF6YhWsdkXKZWpyp2DAEnx6
      mnZXFISkxp7khpphfqf+GPbT9FkIhzCsKM48Yjlt0a6Vd/YtZ3wSZt56JItmUikMUqZSNu6r
      BbrbR3BqhtaOFgYff4j+YzPnNZ6vvoHg1Ax+j4qnvo599z9+HqMp+O1pqGjE4fUztv8AqWX8
      hmUM4HC5GJiII6VimR+FgRSFB2qy2EMr8zqCgt36Lx0osuCUWZ4RFo5VCKMo2tuBNc4IF/un
      yzudg1jj1bLcXDt0VgTYYkuXnaLKlswvAoU7J7CMAqeP/5EAQmIIa/fw6ilq9Vf3OxcaO1Zd
      sLFUTXDo4afZ+YYrz9z4LGBmkhjSILdM4bpF0aCCI8NzpMpk1oLTxwqMW0ioVjhzBkkmv5pb
      YdMFH8KZmMD6a+R3hJKIY1PPz81vhStYY9TYknyg6Siv849jP0UkZwH9aVfRcXWpd4oqeyR/
      fYU+pftwWghjQQAh2BWTm2tPUqedIYrzFYimTkvmnp6OIZPzZ2h9duMlQ2G8NTWEFrwa9Vzg
      rGmkssLO3PgUFU1tnCLuD1jGDyBQrAA2UVilF8f85/MF8rHzirTnTZ2WAm1ZZxau8JJSAkwB
      JjIvMsm8yfV8Pbsl86rMz8eyONlVgy2+WdqdEXrjFZgoZEyd/bGKMm+tkJJt3iAXVUwtuBkm
      plyYA6Gc2gt8GjgUkxurJ9gXDbAvfm7piqeDiL44lib55OnLSzYDDAVpxwZk4L69y7ZVbSqu
      wOktiF0AiRT1fifMz1n/l5ubYYK5/EJppS7l++sCnjt0ynZlDKAo8OaLV+O0p/P2HrnIMVUe
      F6QgMMliivSybSyHElYAnFSLVqWCb6CwU8gFmV+LQ6zPFtaMlAXh2iYLA/y8eoZdFSXR6nDU
      TzbPAH4lw1trR3FrmaVrvDCL4dkS6zr+a7wTr5bh5rrB8rZSMJNxU2MrhJVb98OtRbk8EGG1
      y8NQooJ98QsXviDPQ/k8Hcz3fv6CjeWqdbLmmpYzNzxLmIkUZvL8Gb9MBLrhuu3s3FVXFGnE
      IguKWBAMV8oNXizqlBJdVOlEkTYUac8zgqUvlBJrVMz8OCURaIHYISkq2C8EIp+0s3RuyyNi
      6GhKDjCsuUrN2gULlyOyxbFmMg5SpkqzPU7atO6HkBoZw8H9wRZ+NNPCTMZpiUMil3fgmSAk
      zY4okdxKMY6XC8qeRC9umh15Wa4Qk79gOSworyJv/iystMoiIi1ZeRRUbGg40KUHTTqt4Dqp
      gbQcYYpU83FGpRVclPkNLLFjJuPkx1PtjKbOXLmiEM9USO1cHgusPEIwmHQWdRJrNjYW5iVY
      TCCpsWW4tXYEISRzRX3J6uNXc1xXOU7aLN9HBhNefjy1mrSh8KbaIa48g06ygl8PliytP51t
      osMRZYPHssEXsrisx2mJFAuJQuStIwoqckHIMPlc34UoMIQqbVZ218LTm6JI+KbIYIo0UgiG
      Ez6qdYOhhI+TGQ+EBc2OC+P1tSsmFXqOmawlm4ZzdsvpJ7N5UepUzjUrdKPalqTKHuWB2WYa
      HQkkGWwKXORPLXGSSSRVeoKb6gbz1wibfZP4tAw/m1t1Qa5lBeeGJXvx8ZSHfbGAZb+moAAr
      FHK6Su5+UeouDMBAoKNIa0W0zKc5FosgJjkMMsXjitRRpR0VOyoO1Hx1iAKTTWcc3Dndwgb3
      LDZhcDLtJppdGv9+KjPt4t9kXryywpyzdLmD+JVscSOIGKVxBSoImd9JbAs2C4OFqaKXB8ZL
      t0OwhPgLM/Dq6QXKs9UmnLtwcfyZyX5+cfv9PH3vHiJz88Tn5slmkpzoGUICh39xH4ODY8yP
      jTI/d+7Rk682nFIYnck5eDRUW2oktTwjiAVWnYJlqGQnL5gzCwpjQRZfCEkOBVcPEFQAACAA
      SURBVB0VezHXoJRlVhhHy+cKK1xcMY1Xy+DRs2zzWs6WgeSpLCmFci35ysRlodUlvaJgJVLQ
      ubRyktGMo8ijo8XCYGZx9bdk+EyJjwVIkSnGIdny2V+nchSWZlYw88q8iVaioFGvJ5ftcy5o
      WL8ekUvR89R+Tjy1nz3/8yCzA0eZmkujSI3a9iqO7R/i2JPPXNDzvpKxrDZ2POklkl+hNOnJ
      K4aFWBizqBBbK2rWIpT86mgRt5Xnu/SE9qJcXtATFkKgoEo7uvSh5neTVnuCx4JNbPfMcbF/
      ioPR8pLmBRNsQXYv5A8UqLZkGs0t6GOZZt9R3483H0e00RUuTOKUK3nBB2LtNCW9pej5XfCv
      1Cdb7Fe4XoEgbag8Gam/YGkNwuYkOj6Et64Bn89BLJWjaXULztpmfC6VmvY6JvtncLkkzkD1
      mQd8jWBZ80paKjwaquJNlSdBKig4UBQ9L7vnFiSqWLAIygqjlvlVfOHvlrk0iyLLFcvlIFBR
      pQOJySX+eWYydo7GK9nmmWM242Is5aLJkSi2Lc8YKyTvlPwYi233Bb+ER0tyZcUokZyDDtfp
      3ytWUqgX1kky8uZOK7e5UB1vcahcfmL0xmt4KlyDguQi/5yl11wA6JXNXHHj8tUxXF0bqQXo
      vHCmyFcDlt0B7MKkypbi6Wg1WeJkZBRpCmzST6loVcnUWHASFVIGgfxaaBbbIsnXGDq9p7dg
      wSmstCYZqm0pojknDkUhbapLFuiy0iyI/GpbmuepdJGCY2+1a54tvkm8WrYooiw3s8Jtk/nk
      +IUe7QLxl2ZhiXeFPIfDkVrum28iYti4tmrsjPdhBS8+TrsDOITJZr+VmJA1bWgii1FmFjUo
      9xKDyIs4hRInUuYQ2Io6RCF6dGHfU6EoNuT9B6bIElAl8ayLnZ55Gh0l+bnEdOUE9XSolnZX
      JF9bdHHu8mIil/lzCgor+EKmKuU0LHQEakWi74tV0RerpBAbKxE4VIMWe5KkqZCWGvujVgGv
      Nc4I1XqSn8+2Lnv9FxpjxwZxyjjZmnXUVZ5/7dJXC04rizwabmA6a+e6qmFGEg4mM362eGbw
      2RZGSRoo6FY4sFAxZcErLFCFG6HY8nRp6QaGTGOIdD5ozjKdLGerX8gginCxzZ9AmApeLYEh
      JAKdgWEbTxyaprrCwbUXB9BtJQvHU5E6qm2pMxfXXXA15Z8LzF2yaBUcdqL4VzCW8nDffFux
      p0/N0uGIcjLtYiC1IJA3f5nN9hhpqfC7dYN8YyL/AonzTOec2v8Uw3MKutMgNT7NyeEpWrdu
      xZg5QdYWIDIxxvoNTQQnYpwIxRnpP05j93qCfQNc/LZbqK1/YQHHrxacURjvSVQCgm2eGVQl
      xg+nVvOeujGEIonEgmiqSiaTImdmEXnLid1mZ3S2grsft16vetPu1ayqypLOpIp+AiXvOJP5
      EInldgOb3cbgjMqPH7Wqy918ZQerarIks0mCURef+vqvyGSt3efwYCt/9q52JFYq4u/W9RMv
      hjWbS3arU0OWWbkKx0qfFpRLlPBYqJnjST/VehK7MHAoOY4nKxhIeelwREmbKhGzZO60C4MN
      7lDeepTlA029CCT3zLYych76QF33Jh7/57tpqjKp33UpKdXLmjUB9k/O4rXr1DRar11qXN/B
      6ENPUtXWTkf3Gk6Y6muW+IHyynCPTgUZzZ6aEH1qhjd4TrAmYeLutYKknve28vOTWTasquDi
      LRpSWA6qULiaP/vaflJ5wnTYVL74/kuo9lmiiLk4tl+WkuxVLKeUSRYFnZmwzof+6TFSmVx+
      LI2v/PHlSAy+dMcBDg5MIBTLT2HTVf7rU1fjdodIGwp75hs4nKyi2R5nm2eS9nyObilWaMGN
      WBCKsTgGqmDlKZmCLf3krql2Ijkb11aN0ugIFdvfNbWO0WWI+Ur/OFt9S9+T+0yonn2xatLy
      7MIkdDXNWxssU3Wy+vxi8ZeD2fbbF2wsT62TtS/DWKCzDrKJGDZEphLvU3ci8sHVHVMTPHPA
      xt2PKbz/t3bw5ivsmGQ4OZUtEj9AKmMwPJWkxleoqbMoSUXkiVJaBXELq7CCzonJRJH4rbFy
      HBmK8a179jIZtEqPSMNAUVUyOZPBk0la6lIcjFZxOKaBnGfU4yeWa8Kvj1GjqyhkyBFjsR5Q
      KM9eMO2WmGChOdXqNZQI4FOz/FbdAAXdoy9WzXTWxWjafcoQJLswaHLEF3mWASmwKSthES8F
      XlCUWSAeLhI/gEuFtR6YEw4e3D/GNTsvxuWK0FJrQ1UExoJ4GFUVGGQs8WM5cXehaVVaq+yq
      ehcOm1a2A8QT6SLxF5Gvyb9vYJ7nAzuYEjo2H9gVMKNhvIrOw4/HefLAcWoq3Lznhg5qasKU
      wjsWTmphxWpL7pcLlOh0TmM87eZS53HSKbA7NMDEq2U4kahYVp63KyZ9sRqeyGgYWHkPG9xh
      ZjNO4lmVOi3FSPbl+1K+VyNeEAOMuapp1fQiE0QNwZSrnhqvi7SAj/77c7xuQzU3Xr4Ku91G
      MmXpBJqm8fxIlEBFAyBpqswgxBnieYTEIEllRZaPvX0nP3r0OAA3X9mJz6mhCFH2XmBTSlTA
      7/NQKwyqguPMz8wTCsdQNZWkTeMHDxwEYGB0jqlgjC9/eDtSCbGQIxeabktHCnkQlqiVNlQ2
      cZycAYqpYhoGTrdKoyPCeKoCUrKcCfLMGTF0notXFA/bcyZpU2M07eLGqjGMpMIppLMVvIh4
      QQzwSNbPmouuJdC3n54T03xnxkPU4ULkH7ZUNO781TG2rW3C57YXTaZCQP9cjuOPTwLQWefh
      1os9yzJB4RVNBkmkyNHdIdjW0W15XWUGsHHxxhaePDJS6iQll2xo5pL1tXzmGz9lcjaClOUW
      fUUIhBBIKTk5HSKWUPB4CuHdlqJcKAdTDtXSTaQVGuHTc8xLE7/PAQjm5zI43dY9aHaE8McD
      +NUcSSmYydm5vnKc++aXJmWnpcJoxgUC7pt/+b2Py+O+gGHbOYP+55bqPueKqrWNVHevP+9x
      XhADRA04WaOiXHUp//Wfz/NcaJqaRS8IMU1JNBnjXdd18K37B4ilsrTWV4JesoT0T8UYC9bR
      XJUXeYSDeNyOXRfoeiIvg6dBqGSzLtIZic+dQymu+Bm2dtaXMUCVz8XH3rmZHz08QiheCFko
      h5QSkWeCpmo/o2aAgZkKtnpnaHbEMcuiXS1vbzhSwaP7w4DB67ZW4vcHiUWzuN16/noLYSGW
      vtDgSHBL7SA/nWshYuj4lQw1epJt7iD748tXsj5b5ffXCa/n3CpqnAqxpMHAvgvHAFrHehq7
      t57/OC+0gypNMlnBzs0dTCdBUTWSWQMpJalUikq3zsbVFTicEb6waj2ZrGAqbOe7T06Wdgop
      yeYsZTiT9fCV7w3wXN84HpeND960nR1dChLB3qMGX73zEaKJNLu6mvjYO7bi0NOA4A0XN3Fo
      oI1ne0fxuuz8n1t2oauSfQNzaLqOSAmWJMMvEEu2dDbwRNRD3LCqQb+z7hg2Vc8n6FhWoHSq
      is996xDTISvk4rFDLj7z++uIxUPU+y1ZXVEEqVSGsVQ1GdPGgWiAOi3J79T3g4RYzsY3Jtad
      t51/BS8OXjADNDkF/3lvkANDc6DaURTBb17cQiwWJ5fN0tG5mmcn7bh0NxtrU7icMwwdiRCN
      xPD6LNPgfHCeuaBOW73kwWdCPPm89UaWYCTJv9y1j3/ruBwJfPXOR5iLWMS35/AIm9fUcdn2
      NQyHwG2DT757N/FEAodNoGlxIkmYnI8jhMDudJJOJjGliZSgKKXyJDZdZU1XOwejUWr8DtJS
      MJmpZbUrATKOzFukjo2kisQPMB1KMDxtsrHTxcLYo1xFA3eNNlLtgVtqTpAxBYMJP0+Ha5jO
      us42KW0FLwFeMAMkUjaeHxktfs+ZkqxhcsvVNmZiHTw9akVihlKQyNpp0vz8971PkDVMXG4X
      hpFjZnKKyusbUVAYmZ4p2xmiiQyprAQJ0UR5OZGjY1FinlRRt5iM6ly5GpApTCRuh0lztZcT
      U2H8LjvvuKiODbVO7js2x91H5jClxO/z8Ic3/wYD3jpkJMYbAtNkovDfP+xjJpzgqm2trNvW
      zIGxFDtcBoqAgjFLEYKAtxD7pHAgUstw0sdw2g12eJ1/CDC5c6aTiJEPN1gh/pc1XhAD1Ggp
      dN3A5dAIx0tlPgIeHTAJJsuf9nwixyPP9JLJWabNeCyOlJK3X9tNS32WgZN2Hj0wbK3OWAyw
      c30TfreOKTPs6mpiz2FLzrfpKq0tjYxNzNB/7AQAM+tXc2lrAzYljYLGRFAijQzJRJxdq/1c
      v8aLqgh+d2sth6fSDIcyXLG5jfZVDmpzM/xyXqdat/Hh7z7F0ISVCnp8LMj77S78Np24MPnN
      Szu597khAG64ZDXN9WkiORf3zKxiOpdPh8xf9tFEgOlwfYn4f43ITPbzwEPDXPr6i0hMT1Dd
      sYbEzDSquwKff8W0uhxeEAO0u8Io6jzvuKKFOx47SSKVY2NrgEu6VCRZKp3lwWhzwTD7e0ew
      O5zFY1U+J7de24RhzvLkkWiROcBaYcdnI/z5157l1qvX8ae/s5nNT9cxE0qwe3M9cdPDTx7Y
      W3wz4TPPHCJ4USX1FWCYDr5w+x4Gxy1CfuT4PFvnJqnas49xQyOxYTt6RQW/OjLKNdvraa1O
      84YaB7GEndHpUhi0lJKv/+jxogl3V1czt31wN4qawO6IIElxItlGhc1BzITEgks+miiZOF8q
      zB55BqV1Owfuf5i5k3Nc9fsXzpv7asRZM8A6h4EelByPVLCuRfKZd7SSyQlcjhQmVhhArWeK
      zXUNPH4syFwwwhNP7ieRSKDrOg67DY9D5703bMJuT5IzdKr95aeXwPBUGNM0Gfh2kA/fejGz
      4SQ1ATdt9TpHBiNlr+XM5QxOTseor9CJJSUnp0qE7I/FMH98L+FcDjfw+pkwj/7RH5KRkmf6
      QrzBbqfOZ+OZoIvmWn9xB5CmSTJbMsY/2zPKwLE21nVVIvAyG1R49IGjzEaS7NzYSqa9g9HM
      Sy/nCJuTzh2baa0xef5AH9WrVuGrrMe5XEWoFQBnyQDb7Bnu++kTzIStEOQav5NPv3MNDkdw
      UamrOK2Bk0RGJvjFr3oAsCnw2Y0wkzWYSRs4Bvv5zKMSn9fF713XxdGNQZ7IK8GKoqAoCplM
      hmQ6y+e/U6oPef+zlXz+/a+jNuBmet6K6akLuNnQ6gOS+N2wq6uJJ45YY1XFokxV1wDQPDmB
      Pxymzu0g6/USxs7T6UZGQibvqIjTvNHN382HCaVNUFXIlnujfn48w2PzaXRVcLx/kIlJq+DS
      0ORhbhVga+4k8xKX/9Qrm+nMW1m3X/3Kfnn1rxNnxQByfr5I/AAz4SQD4zm6Vi+t6ixJ8+4b
      VwFwZHCaq1pcPDATZ0++SNdPxkP4NEnvWIiZUIJtHXWoveOl/nlLTcFhVcDJ6RDSzPGhG9Zz
      YCROJpNla6uLwf4BUukoXRvb+Mjbuuhur2FiLsHeXh93t1ohyrsOH6LDyJF15+uFxTK8qyaF
      jwwnHniWTz0+T6aY2izQdZ1sNovTyNHU3orL50NKyBqSQHVlkQEAYtEkugKZlVCeVyTOigF0
      px2xwKwuBPhdKlYe7tLKBnZHhA/cWo8iVpGelPzRv5WSsDMmzOX151w6xRtXObjYv4Y9QxGe
      mjGp8TnorHVhUwXfuq9Uzq6l1s/c1BT9R49Q73Vi87qIzYcwTMn8fJCGpgD1jZI37XbSe8LP
      vXuHirb3A5u6SXd1gmJ9r/HacehZtHCGR0aTJeIHkBJNt+H1uLlKS3NAd3J8YITKSj/VNQFU
      pcTwNk2hpb2Jfa8g4h/uOYZT1alYu5oV4egsGWDU7ucNF6/hkX3DAFy/o5nmmizpbBZdX1jR
      oQRJBkNmUAKVeJw2gvEMUkqMXA7TMNBUhT/Z3U6FkqWiysnqSieNYS9DaTsbWty0uWaxO7bz
      0HPD1FS4ePeb1tNYk6a6bhPTU/PU1dZZub7C4ORJndq6ggJqlO0cALpN4brKOD2Git+ucO1F
      LQiC5Fx2aj06UB5WqyqCHeub2TebspjelMzOhqis8PD6Ha2sr7UTiyZpaW+i31mJfBkwQHjg
      EE8+O8GaNh+Hnz5AY+c6VJeXeDjE5nUV9J+IMBeSeD1giwSpVAXBvhE0DXZcf8VLPf2XDGfF
      ABMZQVV7J7d2rqLFEaPNM40gh645MHM6Y9Mu5iNZ1q1y4HCEKSWja8zHTLrba3jy6DjprIGR
      s8IUPLqgyW+tQVnDJJrKUaVmGMTO/tE4XTt8/OZlKjdd1oRBCpMEEi9ppRZ/QwtOZwxkDAUb
      q9rXcs+eaWZCSS7f0kBXm5ftnQ3s67fSOW9p1bnBG+VGESXT2EbEHSJHHMOe4prXb2N//AjP
      DofwuOz89hVdbFpTQSSt03/P0bL7sHN1BXuFj3SzD12BfQYvC+IHsFU14UztZ3rOxqqdF1Hl
      kkxHwanByPFRUH10XnoR80efoWZVExlTw6lGsdd3v9RTf0lx1laguaxgLmtj2HBR5zJxCRua
      8PODR+b4/kP7MKWkLuDhb9+3g4qKMCDY36Pwuf+8j1Qmh01XaamrZCxtyT/RtMFoKIWmCL5w
      3wCjoRQ+r5ttu7bjcNoZHM+xqVVFkgJyKAR4/KSLiajFQA1eH7tbFYQU/MPt+9lzyNqdfvZ4
      L1ds72RqPobPaWNmPoJXEQxEBO6GRhxtVeSYL+YgyOo0H33fJmJxFbtNYNPTzM0rnJiM4dAV
      UllLPqr2OTAqKykUYn65yfzOQBVXvuddZcfaTtVw9bXFj0cnRmnf9OvLS3454gV7gmeyDn40
      s4bfqx0llXLzk8efKoYlT83HeGDvLLdc60AVTr5336FiHH8mazAxG6ZQiCJnSu44FCSXyTA0
      ZynYc6EYRw73UlkV4IrmxnzyofWugdmUm4lowTojCcYyhJIeVDPGsz0lz7QpVPbkLUEAQij8
      /QErd+CWqxp5zzbLu2wueOG3wTxOt1W86mCfgy/c/iipTA5d19i1qZ21bbVUrWpkf/rV9Ub2
      DVdc8lJP4SXHOYUgzmTtRAyFM7xIcQnaGwO898btdDRVcsnGFv7gpu3Mpsvl9enpGbwkWd/m
      BGFFI5ZeySpxCYOL3FGu9c/jCs/ikHa8rlLdeVUtvyRFLUU01lQ4MEUaIfwk0h0k0h2oVCHQ
      UFBRhZsfPjxQZNpsNkd4PoTeuYZns05yr743Hb3m8YJ3ALBqJTw/V8vRg4O4PB4SacuJVBfw
      cPX2SiCKIeO87bp19P/XLKlMDiEEfn8FG9dUc8PlVZgyAUS5ZmsbA6OWWVEAb79mE2+9pove
      aYNY2sGaaoVqzxxVjixXeKK4zDRTKYWgIah2GIh4mA/dcim33fkk0USaSq+T0IIwDZddQxoq
      u7qaue6SShQUDk3VMJN34da4atlcJ4rOvFMhs1K+51WLs06KX4gNTpNDj+xjdM6K7clmMly2
      vo6bL2/C7pxBksU0DBTFxtx8BV/47iFmY1k0TcOmKfzZ2zbS2hDGlqojPTnH48em6Z2M0r2u
      lcsuauDeHsnxWUvY1hTBTVs81IkMc5Pz/GTSRjSnIJBsq5TsrJY4G7wkcknSabBpNm6/f5ij
      J2bZsKqat13TjDQlHncOU0SIpVfx7Hj5Ne5qNPDYTwAqh/vsfOH2p0llcjhsGn/41ivpqWh+
      2a3+v46k+DVv/8AFGyuTlQRjF24lqdm6htqt7ec9zjntAF6ZZTIfJiyEoM1ucN3U0zTcJ8h1
      dBHbUA9qAjBwOSXxnEDTrFNlciZ7j0Vob/RhhOIoSK5YW8MVa2tQHE6yppPhYLB4rpwp6Z82
      UbQ4fTGVaK6QwSU4HIJtjQ4MEUHT42iaQJF23ntDI4gmcsSQzCGkrfgijlNBoKKbdZDV2Nmp
      8k8fvoqDJzNolVUcU7zkXmYK768L3vblE3jOBVUXMCdCceUwJ0+eueGZxjmXTlGhU19hRRiq
      mPyx1ktXdhplbgrb04/gPj5fHNqmS9yOcuWx0qsvWxZQV0xsWvm0nnp+hC/fc4RMrryPEApa
      hUaORL5siZ7PJU6QlSEkC19MZ/X12uepcZXGr3EpVCBJT8ZJz4ZITgapcjk4XtXKc9JL9DVK
      /K8VnBMD9CUVXrd7PR63g4AOTSJR9rs2PIQq3ACoWoR3X7eGgMeOripsX1PD5Zt95GQYtcJV
      ypQSArXCgyGTSFNa+bz5/xNzUfqm4vzsqX4yKcuKI4BNDW72DeZ48ICPybn6RbH3JWaRZIvV
      niVhNtfNsKvR4KJGhfUVJuHZOWThhWtSIqNJamwvvxTFFVx4nJMIZAA9ws11u9p5bmCGaNBD
      IFsqUyLd3uJrj8Bg05o0n6/fyexsCLddxYxp2CoqSDsmsTXXITICbJKsOk02V0k6Z5Z5c202
      y2E2MhNlfP4Ql25p53euXssv90/y/KgVAfrkMcF7r2mksdIytaqKDymzmCTzL7qwoQgHprSi
      V732NPc8keOXe08ipck1awPc2F1VTM5ZwWsD58QAYDnG7BXVXLHLw3zkjfgPPYhIJZFVtSQ7
      u4iEEiRTBpU1NjTVQzwex2O3lM90KoWe9CGcEbLqFJTSBbBpCVZVeRiYsXwDhmEwMxNEUQS6
      zYau66xt8OLSDfomSnVAs4bkyMkMTZVefr5nhof3j1Djd/HuN3Xg88C3fn6CI4PTbGqv5dZr
      25kLw91PHi7GN/3i6BybmzysqnYy76jg5PJGoRW8inDODAAwnhGM4+Sgay2vu6qZhlyUCc1L
      s38UZ07icbcQjwQxHQJz0TtdTUOSjptkcxkURcHj0fPe2RjXdOnoaNy/7ySzM3NEIjGcTicu
      jxvTNPnhrwZ4+OAoaanicDlJpzMIYCKY5L8fMnjg6UEikQjHx4L0ngyyqs7H00dOADA4HuTe
      ZwexOxy4vaWamFJCRPdw3NvIryL6y87qs4IXB+fFAAVEDfhZzAVYivGlws9OzzQ/mHExa1Tx
      JnuUBkeGdKoUdKboJrl0Fp/PiZFVCAZjVFZZKYZCmadSdzF4fLjY3ma3I6Ukk7aC6qbyOQEi
      HCWbyeL2uHh+REEIQV1jPaqmMh+cJxRNsD8SL5uvlOD2+jByOdS8darG7yRS1cCjoVemt9eI
      zXFw73Eqamto37D6rPoMHz1G24a1L/LMXt64IAywGM8nAmx3j2EjQVq6OJaUtFel0ZNuTEOi
      OySmNo3XbgNMVB18fhtzswmqqi0mWttqo7bCzXTIIl4pTUBdEulp5G2UTqezKL8LIfD6fMwH
      59F13UqySZcS7B0uF3aHg/m5OezCgV3XuPWajTydfeUGCBuxIJNjITLpDKlwEFVTWbdrM4cf
      epy6tZ2ExifA4WTqSA/uigAZlxe/QzC0bz/BUBqnngNHgA27Nr7Ul/JrxYti6ogYNvrTNWzw
      RkBKno/7CGbj4BxD9UxiaGOYLHhTjDDRNAWbTSWbL6qbSk3zsVvXc/Pla7n1ynX86c3dtNZ4
      UZVFL93LM8TCVEmwUhsdTieVNTVU19VS31iP2+OmoamB+sZ6DMPAZrdCKNLZHD999Cjt9le2
      y7dh3XqysQi5eJREMgtkSCQEHjXB6MgMEydOovmq8doNOi7aQSQ4T/9zh7A7HIRCCbpeY8QP
      L9IOAHDffAs73LPcWjvET2fb6ItXsMs/taAs+tIShF6fnXA4hZHL4HRpNPlTXG0XBKp1BBmu
      ybajudyMjE7jsSns7m6mZ3CaQ4PTRCNRfG47pgkNWoabmkLcH6hmRvcRCHiZTVrEnUlnyMRi
      uBST8QUi2dhcDI+ZARy8EqFVNuEZG6Dtysv4/9t70+c40jwx78mr7guFOlAo3HeB4H01yW5O
      XzPbc61m17u2rJViPTFh2eEP9heFI/wX+IM/OqxwhC07ZMWspJmRtKvZndnpntm+yGaTbJIg
      AbBwH4WzUAXUfVdl+kOBAEEAvBoAARJPBAJVmVmZb2a+v8z3/Z0rg7ex9BwDDHSdbqWgWOjs
      E3B4a9BUEVlUUQwCgYtnUaQzhMMpmrqb38gMLnsmAAB3Mi66LQku2Vb4LOHBIpcIWFZ4VFiu
      irgprNJu3+iAgiZgs+lIJvJEsm7+EIyCIFHf6MNr02PubKW3tZVzZ6u+RGZXDX2rk9RHJhGM
      TrSG09zHjozKyWIO0KjICi6jxNRwiJ//YXD9WH6HAZtehs2piA4Nos5E59kTADjf/WB9eY2/
      WjivxrU1Y4VSWwNAi2N3Lb6HiT0VAIdYxoRMm3GVG8laPo75iZSMXHXMoQmPBODJZPkbaFRQ
      FD36kpHZ1c1DnGi6SECrcC8vg2GtpnEa7hq68Xd2k6nAYvbRO0YEqoY5kwofleN8vziOoRU+
      W6rgkkr808YK7tgIYWuAweyREexNYU8FIF6RmMhbaTUW+TPPDL9abqY/VYNdUjluDVFRy4iC
      higq29cJE0DVSphMRor5wnpyWwC7QSa9TVmlrApj2S2L12kwgGMxhIMCf+Ip8qdyBAENMlAa
      zXHmfAODvLklg9409vZRJwh8mnDy83AbqZJMhzGJJgh8lnCxUKhBkqTHCtCtoYkImgyPLMmC
      iiDK3BmeZyUao5AvkElniUdXKbxoQAKQq4BxzddIyGernX8NOZNAqhR3+ukRryH78q4vaBL9
      qRpOWqPrqSXuJ71kSw40VaVcLm/SCK2nKF/rm8VSDqdVTyKWZC60yNLCMha9RPolHNXmCrDi
      biIp6NGkJxJz6QxMSkdP/zeJfRvs5jUZt5KnWVcdn4wXTPyH5UY0wYpa1kCT1uoJK2hCCU0o
      oqoiaCJlNc2fXnHT5LYiSyJNbisnznWz+BITVoMI4YLEv9Mf5+/sZ5g01VMWRFSDifkT3yFU
      3L2c+EccfPZ0DvA4y2Uj/+d8L+86limkRJbKRuKqjl9F2riY+4ahOzdZphxoHgAAIABJREFU
      XU1y9eplRFGjopVYWojR3tHA0tIyPh/88w+8hBZT5N1N3FUtWwpgvAgFQWFScTHpuYKdIt0d
      bj5J6TC+qc7/26Dr3j27gKaqUCk/e8PnRWBXMm/vmwBAdSj0u9U6rlhXWEpXPeAiJQNfJeqx
      VEZQKxp3vhnE769jZGSU5pZGBu5PougE0sk5VHWOgYklavqg0ux6qTbkVChbDVh0BdJFFUEQ
      qK9zcD2rI6dC7inV6980ROvuDQc1tQKl3ZtfaWoF1G9vuNxXAQBAELie3tx5izV+XFd+wHvG
      ORSdnkQ8zenzH5FOZbDajNy4/pCugB+jzky64QTLes9LH14vqDjkOIZGK3JZpd6Yx2FYhVSB
      T2M11Qx4Ry7Rbwz7LwDbkBb1TIi1nLOF0SslTFYTgqZhMlvRKPP+Hx2jWMxhlIzo8ZDImZ9/
      50+YGQRN45O4g4IqogkC7gJ4FAGPUuIvvWEsco5fROuJlPQ77vKI14cDIQAAiYqOkmBATwbQ
      QKiAJiKioKpFJFkiX0pw2aZjMPtYJNk2uJQcpy0reJUCtbosX8TruJeuZorOI20SikjZQKRs
      YCgHaBo/803z5645pnJ2vklbiZTXBGFne92BQC1mmRgYx9XSQk2t7ZnbxyMrONy1264rZZKU
      xDejqMaBEQBB01DII7CRa/RR0WwBBQmZCln0wgrHTFaGcjvf5HZjgh5LGKgGRk7knnMsKwj8
      q6VW3rMtc8q6SqsxxmTOwt/HfDt2/m5DBWOsWv1QX+tEq6ikRIXRnPiUMPzdp7w6T1qzEf7i
      K1p6uxBEAX9nKyNf30LQ23DYFVZW80QfPqDp6rukF+ZJhZcookdS82RSRRq6/MwOz+ByCKQs
      3fvY+lfHgREATRBYLNhoZAVBWCs/ulbSVNR0yJIBnWyiVM5xTAwypJ0HYRstrgaN+o3wzGjR
      /MIliz6Lu/k0sTbPWNM2eKUiZ6yrZDNZXA6B/pQbGSODn9zg/kRV2CwmPaKsUF9r4YP3TnJb
      tewQ+r83LI6O4XSaWZoOoRj0+Dtbia+kgTRq1sjMxCJelxtfi497Q0EyiWpEnaaCBVhYlMmH
      p1gq+1nLJP/ac2AEAODXq23Uyy5+4JpAoUC5XEKUJErlIplsEkXRY9BbMJLgo5owN5K1JNS1
      zq1puHUFGvUZfIbqja2UNRZfZL6whiZuftxLqkZYVbBTxCWvYhUFvucoMjxr5udrnR8gnS2g
      NwiEIik+/v0dLv/gbYby+6NVkixO6upjODwujLklkrYOAPyd1eCYSi6Fv7ON5uZaliYX8Xe2
      ohWzFNGj10nogJKsItQ34/DVozjejDnQgRIAgIWyjV+EA9RJq/Q5MviVJCigN7JmHa5gNJvo
      klcIWJLcSzqoU8BvyKIKRfKFIslEgUpZQ1MlgsXtx7k70aTkkVWNVU0hrlYvT4OhgApcy7rx
      5ouM5RvIawq95Z0LP08tJbi8vAi2hm9zOZ4byVLLmXer5xqZNdLduFYdp2trdNhTZwht7XvQ
      uoPLgRMAgKRmIFmuZzSicdY4T7dhEbtBRdPKSKKMotORy8cw6u2ctIUBgUe14SPRJPUNZlKp
      AmazgfCc8YUmr6HS1niAmeLGsjmxY91Fo1DjoquhhtG5ampIUZIQJRFN08hl0i99/t8Wd6Pv
      lR37sHEgBWAdQeBOvoE7uQbaDEnadHHa9QsooowkK4BGtGDApS9QUSuoWpmaWpnVaAFRFIiV
      DHtaoT2Yl7j6g8vU3ehndGYZTRBZjKUoFgoca66l5PZVa2/sg/ZIKxeYGhynocfP6L056huc
      6BxOKCRJZTVMJgVJEKiUC+RKIpNf36Dr7asUExFqmpuITc8hGQ1ooo66xpe3sxw2DrYAPEKA
      yYKNyYKNL5J1NEnL5IplIlI9RUFHo5Lm+64pMrEcmlDEajUjCCLDqwLnjfOI8qPTVCmoMv0Z
      9641rb9owHnxLT54B3RaBTVcLcpRcvsYLUj7pjotJFZJrixx/0YCLZvj6/4R3v/pHzN2O4hs
      9zC3vIis0yFpRfSuBiSjFWNxkbsPFvFElshGZCRdDlmvHAnAQaYo6BhXGza1fLZk4T8ud/B2
      5SZ1dQZ0ikw2U6HdksRkqdoVBCSy2QLJRJEaYZlPS90g787pr5arfyBtjPn3ObKskEwhWhzY
      FB2qQY/V6cdgUPA01TM7HaWz3c3DRYFWn46FuRhOl5V02YDdrOBvbyUqZVD05RdOeX/YOXQC
      sBPRipF/4C0uJqcwCyXkbAZZhlxOw+4wEl/NIUoqXp+JSt4Ikdfm1AGwt3ZxYptsKN6OTrwd
      nSwEg5y51I1BJ+J7LBOKt62aYdn9hk4bXqtekMTAJ9kAqCoNhhwN+gy5fImeSAhPnQlRrJZe
      jRYPb/qTl6U+EHjVTTiQvFYCsI4oMlc0M1es2gCOe0pIQrYabYZKXnv55Fd6QaWgHcUMvy68
      EXfyl5Em7qVcfLLiAwTm8y9uHEPTOK9bokFdBqqCcMThZ1OFGEU9pDlB3kBSKhjkqrVWzaee
      sfXLYc3vsi1jF/z3N9CeTCv1UmwSgCOOeNN4PecAL0hFKaLEjvKhP0I1OkB6MxQFRwIAqEoJ
      MbM3heYOI5rOjPaGCMAbMQk+4oid2PkNUMohaK+fpkOTDSAeBb6/MK9pf9hRAKTUEkLpKTkG
      DymVmhY03VY16MzwXZYLRnRqBk9TN75aHSPBBboDm82roVCIpqamTcuCIyMEuru5fv0aV668
      ve1xU5F5ymYvNSaZ4eFhenp6Xrjt8YVxBucynOjrwWbSMzJ4jwJGGh0aoZIHr7SK3tVKjWnz
      bd3UrkKKUKxMU13NCx37de0PR3OANbKpOP6eM9RbNT777HN8776L0SxRyqUIjk1jsNhwW/Xc
      vHWTkipgUzQ0vZ7puSh1TisA6USM4eBDTHYXXqtANG/A7zYSCoWJTt4jYWzmWEcTJlM13nZx
      dppYMo3H34q+FGd2NUcln6G1+xgWgwyaykjwISVNoifQzWD/PajrAw3KhQwDwXGO9Z3gkT5Q
      r9MjSzKZRJSJ2TAIEieO9ZCKrzA8/BCT1YUuN8fN4QTC2WOYxRKLKwkcTg/+updLM3PYOZoD
      bEFAXAu1nJ0NMT7wAGdzB52tTdS466j3+WhvaSS6MM2dhzOcPh5gNlQt2Gy2OugJ9DI9Pkwx
      FWUhmgIqhGYXqPN6aenowlNrZ3Y2BKUk43Nxeo/1MTx4j1R0AdlWR1+bi/6R6v7G7n+DraGT
      nnYft+8O4ff7aOsMYDPrkfVmfL56AoFuHpVVjodDpIrwTf8Qx/uOkYpV08YbzDZ6enqZnRqj
      zluHr7GFRp+HgaFhOrt6qPe+WNDQ68TOAlBMc+PWHQYHBlhZq7E1EhzZslkikdiyLDI/RSRV
      YHBg4CmHLpNIVA0tS6ExYtmXyBqmVbhz6yZL0diL//bpO17/FDh/ieLyDF9c+7oa37seXyBx
      4eIFFGnjEgproZSiKG4ptyqKApr6mMmlUkRQ1mqirW2r6DZnyc7mi1hMOmSdCbWYe+7WS5K8
      yQtbUR5z/RBFhDXTz5W3LzMx8pDb/U+7T2us9YdgMEgsmVm/t8PDw1s2nRkeJFHa+L5dH9lN
      ntbPojPDLK415sl2wVMFIEVOMNF3vI/B2zcoalBXXwfA8sIs07MLFDJJPv7kY4LBEUqlAol0
      joWFBWyOWiwGhUQywcLsNNF41VIZi1U7aiKRILI0zScff8b07CJ2pweTTkZTS0yMjZLOFYEy
      8VicibFRsoUN4cim4oxNTKNqsDg9xNRCfFcsgiarg/nJIIMP+uk6fgYAm93O6vISuZKK2WJG
      AKxGHVOhBUxW+/qT126vBhnqZZGHDwdx+5ow1TZQis8xOjqJyWrF1dTJ8uQQ0XgKu80OBhe1
      +jwPhwbxNrSgM1kxyCJIOuyWqmD0nT7FSP9d+vsHOHbyFAaLHd1j8/dHx5V0JiwGeX19vdvO
      wMMgkdX4+nmsb29yocsvsxCOsjA3hyZKWMzP4Rqy1h8CgQA1NjOJZLVT+3xVN9JsKs7o2ASp
      TJZsKkEyGWd8KoRWLvDJxx8TDAZJ50qsLC8wMT3LxrNAYz40RXgljlouMj42QiRWjelOxGPM
      TI6TyFQr+cSiS0zNLqABK8sLzC9VVdeP2pLPJNf7BsDi3AxTU1Pky+paGxNElpeYW4wAKqur
      8eeZAwi0+6yEIjnCYwNc6GtjZDHLmQ4PgsFGvc9HINANqQV++dfXOHnyJCTmKXhOUCnksDjr
      GL33FfK5d+m/d4/33n+fgcFB3r5yAp8vQ0ujj6n719C3vc10/3VOX7zCnRtfcfHqGT7/9Bbf
      //G73Pj6Ft955zJqIcmt++NcOtPFjVvfcOVUK76oQp37xSZ029Hcc4bmJ5Yd7zsOgNNbv77s
      xOnza582lvUdr2537uLlTb+/fOnCpu9vXTwLgMtR3T5w/NQ2LXFxfC0sV9JbOHfu7PoaR/vx
      TVs+Oq7J1Uz1J9XvOb0ROVfA463bdB6Ptj//1lvrx/q2DAwO8tbpAF/fn+A7l05x7dpNPCaN
      RLqAR11hOOxYG6oFoJTg9sgil850UChVMOokBu/ewtXai0FUyWZzNLZ0cOf6l9jefZcvP/+c
      D77/Q259fYPj7fVMpxS6fQ4is6OEixZq1QVGSmtPBLXAzbtDvHW2l69v3cVpKGP2deFx2h/L
      zKGiSQbE1AwPp2Fh/P7zzQFS2TIOS9Uwotg8OKQsI+OTFJ9IJNseOMX5Exv5ZCS9EZvZQFOd
      g+V4nmehiQpGnYLHLBMvgMvjRafokMSqSOdiizh8zehNNigf+S3tRGNLO4FAL5cvnn32xi/A
      0nyIYDBIIr15OBZbDOHv6EWSFGRJAER8dV6MRgPF4mNjDsVGnUNieGScXLH6Vk9ky9TVWLHb
      7czOTDI2MsxqJEYRqKl1Y9QpSJLE/EyY9q5mzHY7S6FFCoUEiZKIjrX9Z1cJx7NMzixgtVpY
      SZdo9Dg2D/8QcdY4qG9rJra4RKDR+XQBWJoP8XBokIxsx2Vaq/KezSAoOrRihkS2iFkvMxQc
      o8wTY01A1CoMDwcZXszT5jWBWmR0dHTtlWamVFgmtLCRVsRu1jE4NES4qODaplad2dNKaj7I
      0OAAVuebE7Z3UKjzNxEIBLBbjJuW1zZ2MDf0DSOjo+RLW20FXqeZ/oEh0qkUZUFB1oqsJKoq
      1SZfLfceDDA+NVutIy2K6zUkHqezr4uBm7cZGhqhJdBJeiUBgoTNujZ8s3ioW/totVmpr7Xy
      Tf8DpucX1/chKjIz48Pc/HqAnuPd+LtO7uwMJ61OvZZ63+3sACVThlL/fSx2+7dSiyUSCez2
      w19gY7tr9LT+oJXzrKRLmMQCg+NLXDjTtx/N/NZoldKRGvQRI4MDlJ692TqPNF2PMzgwCBQY
      CU698PFDY8NsqwgrFwgGg/zbv/orgsEgmcLTtWUDA4NPXb8XCLKecnqVxdUc5w9J5wdYDoeP
      DGHrqCXGRobJxBKcPHOCwaEJzp3u4/79fk6erE5Wx0eGyBdL2FyNmMoFSqrIwMAgheQy9sbe
      tR3pKVbSRGeGGV9VMWlpapt7kXIRooksKjKBVi93hyaxmC309HYhAaV8GWS4deNLbDUekpkc
      F86eAllPIBBgaXGxOpFUS9z95ht0OglXfQcLoXHOnDnN4sQAQk0rw8PDyLJEW2cA/b7dXYG6
      hidVCAcfb33DkQCsIyp0dvcgrEzRP7FCNrZMqZAktT7fq6aHlmQ942NBetx6ChaV8Nwkvee+
      Q73bznJoAoBkIkGtpMfbdIJW3QrXJiNk5gZoautkdHCIRq+RVK5MoLdpvRxHOpGgAhRVkZ6e
      qlvFdsyP3KOm5SStLh3Xr39FoVAtOpFPJ9B7LGtauUfxv2XGgmPYPfV4ar/d0KzkMKId5PTY
      L8meCsAj9Wa9dbu1Ka5fm+TK2ycBuHn9C9wN7SzMTfP2lSvb+sssBG9T8JygtbYaCTUfCuFt
      atrVk4jFU9htTXTZG/jlf/yEj37yEwCKqzNESmYu9tSxFFlZ395gq6Xe/ezOZTDb6AkE6Ors
      RAXef9vPvev/QOOZ9/GYn985z2A2E8+k0ZxWNEFGFEtoQLlcRg9PJAKT6dylYPhSjQFVef2c
      CJ/ad0aDg5QqMl3dzYyOTqKq0HOsl/mpMQollYog09vdwfzMJIlMjvqmdtIrC8STGZo7Njpv
      anWZ0GIEe62XhrpaJkaClChSWXuiJFaWmV0I427YyEv5yF9mfmaSZK6IzmDGCCyEpknN5Wjv
      6eXerZs0ZzI0NbawsjhNvqTS2NqJ1fjivuzNrc1MDQ8jyDa6/Q7AgcM2jtNYvem6mkZsc4OM
      TVdoa2nCapQwGiWkxsb1fTQ2VT83Nm6sR7LS5DVS22JlYGAQRW+k1e9idHoOQ23zunbN29SI
      Dmhq3NjH47S0Vp3yapuOkRgLMvRwkbPnzlFJRxkcCiLJNqw6ONbVyuDDEbp7ulGOZnjPZEcB
      mA3eQ+dppctpQgPcThvzU8MMTLhIzS9w9Tvvcv2ra6jNTqaXc1w5f4xKboWH0QKXzwS4dv02
      /rUn/4PgGFeuXOHatWsoGSslcxM9DTIrkUkA7LUefPU+2pr9LMxNV48fmqXBY2FyKc07F09w
      /fo1Wp163HV+OswJbows4PX56AoE0FPi1kyYDz98d1sV2vPgqW/Es2HbIjT+kL4zFzcWCBLH
      Tpzc8ruaxzxDH3mJbvYWtdJUtUdx4viG4enYsc1vjbonfvukx2lr64ZXalvnY091p5fjTu/G
      d7cPx5ua5Ocl2PEZkc0UsFiMIAjMBu8RU830dndQKVeQZWXtTSuglvJIuqpeWCtWXSGCw2M0
      t288zWPRJYLBILXeeuKxDM7nHI+WskkMVuemZYpOQRSE9arx1e6ucP50gIH+24zNhLfb1QvT
      1NFLk+/NdRJ7U9hRADpPnWJ64B5DQyNY3R4S4TnGZpawmnSbfEtkaz02IUHw4UPSkosOX7Wy
      gqZq674px3oDlCsqmqbRceIkk/dvMzI6jdm+UYXBbnvMX4Wq/4re2YyUnmNkZJRMvrTFX6az
      o5mh/gFS6RRzCxEkWcFsMnLEEc/LwTaEaWWGh0aooKLJJvp6vn3u+p0MYct/+IRwOIrJ4cBb
      58dds3MW/XQigcFuf21VaNtdo4I9jqq8iKVkA4MqkhcPZjTZwb6HgkxP3+4Va34azW2dLE/P
      0nzpElagmM8wPbtIa1s7aj5FWTZhVqpOXjd//wmu3mO0+puosb1Ekq3XlHI+Szyaxu6yo+hl
      CtkyToMRgypyQPv/AReAV4VW5qsbd7hy5QI3bnxNR61Mwt5DoLbI4MgyXq+PtkCAbbW7bzDz
      g6OYPD4S4QhqIY+jtY2MtOaKLB1MCdhxDlBIR1mKvcAQqFxY9+N+RCgUAiAa2bmU0E6Ucukt
      XoePmJkcIxgMEgwGtxxzVygnUcwuFJ0B6SgF4nMjKAaEbJp8oVp1UpYPvh52xxYWU1HC8eeP
      QtqOR6GCu01zWyfpxUUaAoGnjtUB7l+7zgsnDlRqkEtRHj4cRG+2Y3O5WZgYZnR8ChXwNdQy
      ePcBifSzXbzfJGq8NZQUPU6Ph+YTbWRir65M1PPy1CHQ/MwExCbQOfzMTTzkw+9+l1vXPufk
      pasYJIGF2SkSqSyxTIHL5zsZHZoiqk+zkK9gNG2oL0dGh3G5T/LXv/qSnmPNxNJlOuutTC2n
      KSRjnLp0mdtffI633kdDSyc2kw41G2F0WU8hcgO3189iaIrTVz/CvqV4ocbN619irXGSLQrU
      67Prw5XrD8JkwotUgsHnGq+ff//9tU8CF69c3bTuA3cLAI9S63tann5h30Ssdd5Nw8InNNgH
      kqe+o/zN7Zw8c4GVhWmOt3oIhiKUkDFIaxbceBwEkdWVx4c4FZo6T3L57FavQHedn57AMSrF
      NMHRSSwGBatRZDGSwmI2UlFBpzwhk5Ke7u5umj0WMsVtGlmKUVZc9Pb2Ucg8md5QwOv10bkW
      xnfEEU/yVAEolYpE5yexOH3UdRxn/Mu/wdXSu74+HE3Q0uh7wvgq4ax5tqGrzuVAZ/fQ3t2L
      16ZQ39pNR6Od+wMTL3YGso1SJkqpmKeiiRiMBgr5PMvhJVTAatURj+eoVI7G8kdsZUc7gLYU
      ZGluCkE20uCrRl99+cUXXLl6dV1qkrEIsUwZh9WE3W4mkcgjCxV0FjuKuBEgUv1fXW+3W9aX
      L87NUBT0NPnriEUWiaVLtLU0VSvFl3KkiyJaOY/dbieXTiAa7OsuvslYDFNNDTKbVZaKBKGp
      CWxON4IgY7eamJ4cx1XfjMWo29EOoITn9+oaHyoETUAzNoCy2aD4bewA5oq4rg06aDy3IWxl
      eYGcqtBQt3sVFl8FOwlA2fT6Rb+9DGJJQZ9wbFn+pABM3hug6cQxZOnZmp6DLADPbQeofdxT
      7DVESB1pdACQn8/l2WqR+cX/+r/z43/xP2HdJn77sHBkCFtDO8x3cRcRSs+nu19dzfLhX/6X
      WA75ZXuusy1kkgSDQW7cuEFwLQPE09jrTGBHvHpyq3MMfPw5K5lX3ZJvx3MJgN5sIxAIkMvn
      CAQ6kYHI4hzzS1X15+MZ3zLJWDUT2MgEB3PUd8RuYHT4OXb1AtZD7nz7Urbq2bEBYiUdcjHK
      w4lF+u/dA6pZwsy2mmomsO72o5QTrzGJSJiZwSDFl1MMHRh27KOJ1ciOw53Z5SQdTR68Te3E
      lkJ72LwjDirnf/QRXedPonu8B2kqS6MzZONJ1EKGdOLbudLsBztOgu1ONw7r9tbTYx2N3Lx1
      DwM5mruPszDaT3BkhHBkFQC9rBEcmyLQ2brt7484/MQjq4zfecDxHzasL1uZClEoq6Qjy4TT
      ZVpO92CuiBhU8WUjVfecgx0QswccdDtAODTPzMgYxy6cZeDGbZp7OvC1ND37h7vE89oBvvzX
      /wqDq432997DWc1fwMJgkNhyHGdzA3Ilj7W5DYNeej3sAEd8Ox7evofVYSe2HOXElQuM9g/S
      dWqrv1RobIL2473cv36TTDKFeADrmS1PTlDXdx5VVbE8loCjvi9AbTaPKAooBh35TB70B3uW
      fDRP3ScsdhvzE9M4vW7G+gdRdNunbuk43su9z7/CVuOg762zeJv86+vCoaq7RjqRJJ3YgziI
      58RgtbEammZqeIYn6oCgNxlQDHpAwGA+2J0fnvIGqBhkeCLb82uB+Gqym/nbmlkNR/C3t/Dz
      /+3/4C/+xf+w7XaiJNF2rIfGrnYGvroFgK+liVKhyBd/81v+5L/7SyYePARB4OTbF7fdx15j
      c7sxOF30+iBVBOfB7+c7suMcQLUmKOi38z8+vCiqgJCyIZU2P31f+RygoiHkyiRLZUxWPdI2
      kVT3r90kthyl1udl6uEIAvDjn/3FrjfleecAt//m19jbjtF1vO2Z+zyUcwCdKvC6laBQVOGZ
      Vuz9ojSXQB2J4swoiJlqq/7l8CzxUplTZ9o4c6EZm1PAaKm+sdx+HyffvkhoZJxL3/8ANI1y
      sYSsezVv6ZbeDj7597/G13nkC3QEsDgdIp/NU9fkJx5dJboYxtfSiK3Ggc6wEcZmyJTxT6aY
      uzbO7PwKzkBHtSjEYxj1ZuLLEF/WsDg0XH6B+ta1jHHdHft6XjuRzqn8V//L/4h08OboL8TR
      JHiXCM8ukEkmmRgMshqOMDkYZCY4RrGwMYx0RPIE7kRxrBRobfYAGrn01qGX07kR55yOw0xQ
      IxU7WIr0cjrGykKEfOXZ2x5kjgRgl5AkCUEQmA6O0dLTScfJY4w/GFpf71rI0jYUX8+PYzbp
      qfM4SCc3h+xbrSb0+s1zFE2FhQmN2PLBEYLlkQFuf3L90LtC7PkQKDw7j6woROYXkRUFUZJo
      6mx7ZWPXvaLjRC+VSgVPQz1mu5WWnk68DX6MZiPWWIHGseSW7PrtrV6+uj22nucUwOXaOgF9
      xHJIQ28Ek/XV5umfvnsH0dmKvaId+gzUe958b6Of27//nPrWZlKxOMmV1efq/OHZeX73818B
      8Nt/8wsijxU7O4gYLWYsdhtufzUzs9lmxVXvRRYkWoIJxG0e3jariRq7mUJuIxjH/YySr/Hh
      ZYRydVh197PrfPV3nxCenefrv/8HVsOR3Tuhp9By5ixGm4VGn53CwVTuPDf7Ir+ehnpsTgeS
      /PwvnODtfpKrcXLpDOlEkqFbd/ewhXuHZz6DrrhzL2lv8ZJObuTPcbm2TyggqkU6Z/8d7331
      31B7r/pgyCTTpBNJRu4+QFZkVhZ3JzP289Dc2UzF4cNxiDVAsE9aoDPvXgHgxJXNhaMpVhAz
      ZcK5ItYaIwbjRnPq25q4+L13ufPZdf74Z3/BzMgLZos4CGganrmn2xdctVYmQ9Unt8VixGDY
      kviIupUb9E3/X9iyMwA47/9nouf+MQAmmxWz1UIqnkS/T5mxJ259zeJc1fGxrq0V09YmHxr2
      XQ2qqRr5+wtYQgWMWRCAXw3PEjgXoLXDhcMtYKsV6DpVrWr+9o++B7Ct38xBx5wqPfXp/4jG
      +hpWcsVN2h8AU26Bk5P/Et/qDQAkcy2yw4/Z4cecivDOH//RnrT7WbRfeAvFcJ/ocvJVGdZ3
      jX0VAKVQofn+Cnd+FyRlMGJq2KhkYrOZyWdgKaMRj2jUtwsousN9da2x57Ok13kcRCciuFzV
      9DNSJU/37F/ROf9LdEYrsv8EssOP+FiqEntslozNu9Mu95yV8UGKplYKKjwaBcVm50jGcti9
      DgyKQEkyY7UfbD+JXROAe59/hdPrJroQRpQlQiPjvPdf/IjJoRFOvfMWcrFC971V9HmVvp5G
      7jyYxl1RESURRZExP+Y4lc9AaFijOQCycniFQHmOpz+AIAh4nWYsFgP+6BecDv97rEYdcuCD
      9U5f1FSS5SJJtUy8Uiabir5SK2bbO98jMjWP6TGNrc3tJJ1copDRtAiFAAAJmklEQVRMsJoq
      0XbGdWDjAULzOWYW8rt3Da01dpbnFzFZLVRKZTpOHmO0fxBZUUDTaBuKo1+zmnjcdjwuK+lk
      CluNHYfDsmV/5SIsTqo0dh9eU6Nc2hAATdVQy2UqxRKVUgWtsmFB0jSNYimHrfAbVuQp/tpi
      I66WSazOk6yUSatlstpmYeq0uPn+vp3JZlZDU3z1my+o9bioO3kKZW0OMPXNAGZvPaJOwOU1
      klhNg7N6bw9aevRkoUJ8pbx7AtDc08nSzDy2GgdOj5tCPo/JbKZYKOCIFrAmNltMersbuN0/
      vSYAWzPtO1Ij9A383+TlPyXVfmW3mrmvLIcWiH81iVoqUSlu74WkAWP6NOPlZXpOSfx9PkFc
      e7ZyzqB7dblOnU2t+FtGKVb0PK7R7nhF3qnfhl0TAEWn4+0ff2/bda4Hq1uWGQ06Gn0OMoUC
      DtdGMTpDIUJg5l/TFr+G4vCTiS+8eHrzA0JREREyO8fFFvQCt4Qws9kYPVYr+XIrP7CH+Pt0
      ltXK04d+NsurLeBXLpYR1DKFIugOsSp074eRmoYlsb29vLnRzfBUFKNRj1TJ0770nzme+hyD
      zYXs+y4ASjpSLX36ZOTFIaDS6dl2uQZE7Bo3cjNk1oxgDUYj4mqCu+53+XPDL/lPZTvLhZ0d
      bRrqenZct9esLCxx7kcfUamAfMgN+nsuAFJZQ6psPwMSRYHGOhuzxWEa535DUSfwpc1NtFwi
      Gp0mUi4RrRT5J8UsBv3hS2+uNjlRbQbE5Ialt6ITGbHneBCZQVU3rkuDyYi6tEym923i5pN8
      tPI1vzfWs5Db+vAwGWx4avcvTvhJpu7cZsZYddnovfoOhhevS35g2HMBeNpwNr20wjfDD0h3
      rHLTukx/TiCe33rDD2Jc7JMU8tVOXswXsDrshEPzeJv8lN7uRP+bAQDStQp3iDAf3myxFQCf
      wUA6kUKvaXyVO8nP/Et8Z3qM6/Y2Qk/kLT3d+13y2Tx3P71Oc08Hkizta+B856XL2F2vRw3l
      PXeFUCWRsrx5+FLM5Ji7OcT4nUG+Sk5TP6Fhsn7If28r8Uc2jWZ3DQZ9VbVgMtjQKQd/kLm6
      tMzq0jJj/YOsLke49fvP0TSN0tVOyrUmFpt1fJqfZj6y1V3BoVOwKgqipuEKR7Faavl9socu
      n5cr8QnaajaUBBazkxM975HPZPG1NrE8t8ji9N6UotqJ16Xzwz75AsVd1Q6slitEglNMf3aH
      9PIqd+QoRa2CG5DGVG5IP+QDj4Mfpyb5UJfhZGMdJwKXiS1H+dv/999y8+PPuPvZ9f1o8gsj
      ShKVcnXMPvzNffQGAwtTM6BIxH96kWvzw6RS29fMajKa1j97lsJIoshwqZ28uQWvxczF6DBd
      bgeSKPPdyz9FkasPB03TKOQOfvKpg8y+CMByg4nkQoTJf7jN6vgcmqoxa8wTyldziuocdk49
      GCJGPf8p/Q4dbd1csMicmbrNqaaq/1DvhTPoDQf3TeDx17M0M4fDXUtLoIvv/td/grgW6WXw
      uQj85Ls7/tZn3DgvZ3QFAK/Nzr+Za6G9tRWLKHA2HOQn7/6URl918mtx2EmurHL66iV8LY08
      vHVvD8/u9WVfBCBnUZjRl6gUquP7gg7uFDfcmwVBxKPX0zE8Rlry8/PoRUwOL23v/3N09kZk
      ncLUw5H1NBsH8WYLosC5D96h7VgP9a1NCIKwaVzecukM5376Z0jbuII3bHoDLIOmIYoiRV0D
      X6546O7uxX71f8bfsOFMqOgUTn/nMgazCV9LE70XTu/tCb6m7Js1vfiTU4graaSRMPd0MXLJ
      zX4yJq+b43cfMNXZRl6p53fCj+htOguA1WHngz//4/1q6p5Rf6IHq6eWh7/+A+GH40B1Alz/
      2BtAVyxhiydI1jios1l5IL9F06kudIbtVapHfDv2z51EEsn/7G0Knw8y/du/27LaUOvEVCwR
      GBoh8Y8+pLWtHk085OFG22Ctc3Pxv/3HxGbmmb87RGUihOGxyHJNEPBns9hOdOPx1mC3Wzgs
      yWmiE1Pki2B1WtAfEme4HfMCyeYkKePeJEbJrMQIfd1PeGiM7Gqcf9bcRL3Py4IMidO9lP17
      4+VoKouUM9Z9yws0em+AWCSKJMuUiyU0NHzNjbQEujZtJ1Qq6LIFKsUCZasFXmG46PPmBdqO
      5YlZJKCgFsinSrSdCQAHMy/Q5GiWqdHcq3EoNNfWEPjhewR++B4AK2t/j/O3/89fcfUnP+C3
      /98vOPfhOyxOhdA0XpkP/MuQjCW4+L33uPPpNWSdjrPvXeHuZ9e3CIAmSRSsJsC0afnnf/0b
      Ln30Add+/TtOXLnAyL0BLDYrJ995ax/P4vkp5zKki2CttWBZc4azO7c6Oh4k9kUANE3j7mfX
      sdY4qGtqYPhOPy2BLjwNOxfeaz3Ww8TAQ4wWE4vTs1z6/gf0f/n1fjR31/C3NXPz409xuF2U
      iyW+/t2neBv9fPof/hY0DbvLyZl3q0LxKGrucWrcLsYfDBGPrjB89wGXPnr/QF+D+r6d3TN+
      9Ve3mQ9t9gnzNzn5s39yfq+b9VT2RQAmB4dp7e1icmiEeCTK+Q+/wzd/+PKpAmC2W0nGYvRd
      OoetxsHXv/uUbOpwFaTytTTia2nctGz4zn3Of3iV0f5B8pksdz+7Tiq+fU01WVEIjU7QEujC
      7nJy47d/2BRAfxgwV0SMqsgHl7rIndw8mzGadHhLCvlwjpXIVhtJV6CO6VKa2ZmtzpSNzU5a
      FAujwa3JEmrdVgxeI2lxe18qiypR77Zz1mzdHwEwWS2shqMUsnl0Bj3ZVJpy6enjyZaeTlp6
      Ote/u+rriC1H97qpe05bXw83f/cZRrMJV30dXaf6GO0f3Hbb3gunN6k32/sCTAdH96upu0JG
      UikKGjWtdrbNd1GCZqedZufWZABFTUW1yvj7tmrAVMCSlTjT3bBlHcCsUNhx3mFRJVx6Hej3
      cRI8HRzFWuOgxuPi4a27dJ8+gaLfXy+q/Z4EH0a+zST4eViZmkY02qipcwLgLSl41+5HOr5C
      sqBR73VVv4sVJg3VN14+HmN1cQVnWysGfVVrdiJbdZAsF7JMheZx1Hpxr8VVT+hz6wJQyadZ
      Wc7haXJvOea+6RlbAl3U1nkQRZG+t87te+c/4iCQp1wxUkxv7xIiG8xk0/Ft1+lsdqw1BvLJ
      rUNAWW9CJ0E2u/1DLBKKUMlvP3x+/RTtRxxgJCrlApXy9tFxhqe4uqTDYSqyDYd7q1t8qZCn
      rqGRVGKr8GjFLMVcidXF7YfP/z/L3IkjKDk6JAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Tableau de bord 3' width='192'>
      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
      gub/B6UmObUFObegAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Tableau de bord delay' width='192'>
      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
      /h3fLcEHX26tigAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='barres' width='192'>
      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
      foHrHwFfEryvhFoI8gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='delay/miles' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='map cancel' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map delay' width='192'>
      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
      oIjYnCHyyAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
